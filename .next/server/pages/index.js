/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./components/CollectionItem/CollectionItem.tsx":
/*!******************************************************!*\
  !*** ./components/CollectionItem/CollectionItem.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui/jsx-dev-runtime */ \"theme-ui/jsx-dev-runtime\");\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! theme-ui */ \"theme-ui\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(theme_ui__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_icons___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/icons/ */ \"./components/icons/index.tsx\");\n/* harmony import */ var _hooks_useOutsideClick__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/hooks/useOutsideClick */ \"./hooks/useOutsideClick.ts\");\n\n/** @jsxImportSource theme-ui */ \n\n\n\nconst CollectionItem = (props)=>{\n    const { item: item1 , additionalOptions =null , className , onClick  } = props;\n    const { 0: isDropdownActive , 1: setIsDropdownActive  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,_hooks_useOutsideClick__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(wrapperRef, ()=>setIsDropdownActive(false)\n    );\n    const handleDropdownToggle = ()=>{\n        setIsDropdownActive((previous)=>!previous\n        );\n    };\n    if (!item1) return null;\n    const { onchainMetadata , externalMetadata  } = item1;\n    const handleOnClick = (item)=>()=>onClick ? onClick(item) : true\n    ;\n    const handleKeyDown = (item)=>(e)=>{\n            if (onClick && e.keyCode == 13) {\n                onClick(item);\n            }\n            return true;\n        }\n    ;\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_2__.Flex, {\n        tabIndex: 1,\n        ref: wrapperRef,\n        sx: {\n            flexDirection: \"column\",\n            position: \"relative\",\n            transition: \"all .125s linear\",\n            outline: \"none\",\n            cursor: onClick ? \"pointer\" : \"auto\",\n            \"&:hover, &:focus, > .toggle-menu:focus\": {\n                \"> .toggle-menu\": {\n                    visibility: \"visible\",\n                    opacity: 1\n                },\n                \"> img\": {\n                    opacity: 0.7\n                }\n            }\n        },\n        className: className,\n        onClick: handleOnClick(item1),\n        onKeyDown: handleKeyDown(item1),\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                tabIndex: 1,\n                variant: \"resetted\",\n                className: \"toggle-menu\",\n                onClick: handleDropdownToggle,\n                sx: {\n                    display: \"flex\",\n                    position: \"absolute\",\n                    visibility: isDropdownActive ? \"visible\" : \"hidden\",\n                    opacity: isDropdownActive ? 1 : 0,\n                    right: \".8rem\",\n                    top: \".8rem\",\n                    zIndex: 1,\n                    transition: \"all .125s linear\",\n                    \"&:hover, &:focus\": {\n                        visibility: \"visible\",\n                        cursor: \"pointer\",\n                        opacity: 1\n                    }\n                },\n                children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_icons___WEBPACK_IMPORTED_MODULE_3__.DotsIcon, {\n                    sx: {\n                        width: \"3.2rem\",\n                        height: \"3.2rem\",\n                        stroke: \"heading\",\n                        strokeWidth: \"2\"\n                    }\n                }, void 0, false, {\n                    fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/CollectionItem/CollectionItem.tsx\",\n                    lineNumber: 88,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/CollectionItem/CollectionItem.tsx\",\n                lineNumber: 66,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_2__.Flex, {\n                sx: {\n                    position: \"absolute\",\n                    visibility: isDropdownActive ? \"visible\" : \"hidden\",\n                    opacity: isDropdownActive ? 1 : 0,\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\",\n                    padding: \"2.4rem 1.2rem\",\n                    top: 40,\n                    right: 0,\n                    backgroundColor: \"background\",\n                    transition: \"all .125s linear\",\n                    boxShadow: \"0px 4px 4px rgba(0,0,0,0.25)\",\n                    gap: \".8rem\",\n                    zIndex: 2,\n                    fontSize: \"1.2rem\",\n                    a: {\n                        whiteSpace: \"nowrap\"\n                    }\n                },\n                children: [\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                        href: onchainMetadata.data.uri,\n                        rel: \"noopener noreferrer\",\n                        target: \"_blank\",\n                        tabIndex: 1,\n                        children: \"View raw JSON\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/CollectionItem/CollectionItem.tsx\",\n                        lineNumber: 120,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                        href: externalMetadata.image,\n                        rel: \"noopener noreferrer\",\n                        target: \"_blank\",\n                        tabIndex: 1,\n                        children: \"View image\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/CollectionItem/CollectionItem.tsx\",\n                        lineNumber: 128,\n                        columnNumber: 9\n                    }, undefined),\n                    additionalOptions || null\n                ]\n            }, void 0, true, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/CollectionItem/CollectionItem.tsx\",\n                lineNumber: 98,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                sx: {\n                    borderRadius: \".4rem\",\n                    transition: \"all .125s linear\",\n                    opacity: isDropdownActive ? 0.7 : 1\n                },\n                src: externalMetadata.image\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/CollectionItem/CollectionItem.tsx\",\n                lineNumber: 138,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                variant: \"small\",\n                sx: {\n                    overflow: \"hidden\",\n                    whiteSpace: \"nowrap\",\n                    textOverflow: \"ellipsis\",\n                    padding: \"0 .8rem\",\n                    mt: \".8rem\"\n                },\n                children: externalMetadata.name\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/CollectionItem/CollectionItem.tsx\",\n                lineNumber: 146,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/CollectionItem/CollectionItem.tsx\",\n        lineNumber: 41,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CollectionItem);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/CollectionItem/CollectionItem.tsx\n");

/***/ }),

/***/ "./components/Header/Header.tsx":
/*!**************************************!*\
  !*** ./components/Header/Header.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui/jsx-dev-runtime */ \"theme-ui/jsx-dev-runtime\");\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _theme_ui_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @theme-ui/components */ \"@theme-ui/components\");\n/* harmony import */ var _theme_ui_components__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_WalletManager_WalletManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/WalletManager/WalletManager */ \"./components/WalletManager/WalletManager.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../icons */ \"./components/icons/index.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_WalletManager_WalletManager__WEBPACK_IMPORTED_MODULE_3__]);\n_components_WalletManager_WalletManager__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/** @jsxImportSource theme-ui */ \n\n\n\n\nconst Header = ({ farmId , setFarmId  })=>{\n    const { 0: isMobileMenuActive , 1: setIsMobileMenuActive  } = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    const { 0: isChangingFarmId , 1: setIsChangingFarmId  } = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Flex, {\n        sx: {\n            position: \"sticky\",\n            top: 0,\n            zIndex: 9,\n            background: (theme)=>{\n                var ref;\n                return (ref = theme.colors) === null || ref === void 0 ? void 0 : ref.backgroundGradient;\n            },\n            borderBottom: \"1px solid\",\n            borderColor: \"background2\"\n        },\n        children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Container, {\n            children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Flex, {\n                sx: {\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\"\n                },\n                p: \".8rem\",\n                children: [\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n                        href: \"/\",\n                        passHref: true,\n                        children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Flex, {\n                            as: \"a\",\n                            sx: {\n                                alignItems: \"center\",\n                                flexDirection: \"column\"\n                            },\n                            children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Flex, {\n                                sx: {\n                                    alignItems: \"center\"\n                                },\n                                children: [\n                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                                        as: \"h1\",\n                                        variant: \"headingSpecial\",\n                                        ml: \".4rem\",\n                                        children: \"GEM\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                                        lineNumber: 39,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                        sx: {\n                                            maxHeight: \"4.8rem\"\n                                        },\n                                        src: \"/images/gemtransparent.gif\",\n                                        alt: \"Gemworks\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                                        lineNumber: 43,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                                        as: \"h1\",\n                                        variant: \"headingSpecial\",\n                                        ml: \".4rem\",\n                                        children: \"FARM\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                                        lineNumber: 51,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                                lineNumber: 38,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                            lineNumber: 37,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                        lineNumber: 36,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                        variant: \"small\",\n                        sx: {\n                            marginRight: \"auto\"\n                        },\n                        children: [\n                            \"\\xa0\\xa0\\xa0\\u2022\\xa0\",\n                            \"devnet\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                        lineNumber: 65,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Flex, {\n                        as: \"nav\",\n                        sx: {\n                            gap: \"1.6rem\",\n                            display: \"none\",\n                            alignItems: \"center\",\n                            /** Mobile styles when the menu is active */ ...isMobileMenuActive && {\n                                display: \"flex\",\n                                position: \"fixed\",\n                                flexDirection: \"column\",\n                                alignItems: \"center\",\n                                top: \"0\",\n                                left: \"0\",\n                                width: \"100vw\",\n                                height: \"100vh\",\n                                padding: \"1.6rem\",\n                                transition: \"opacity 0.125s cubic-bezier(0.175, 0.885, 0.32, 1.275),visibility 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)\",\n                                backgroundColor: \"background\",\n                                zIndex: 99,\n                                \"& > a\": {\n                                    marginBottom: \".8rem\"\n                                },\n                                \"&.active\": {\n                                    visibility: \"visible\",\n                                    opacity: 1\n                                }\n                            },\n                            /** Desktop styles (reset mobile) */ \"@media (min-width: 768px)\": {\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                width: \"auto\",\n                                height: \"auto\",\n                                padding: 0,\n                                position: \"relative\"\n                            }\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                sx: {\n                                    alignSelf: \"flex-end\",\n                                    padding: \".8rem\",\n                                    ...!isMobileMenuActive && {\n                                        display: \"none\"\n                                    }\n                                },\n                                onClick: ()=>setIsMobileMenuActive(false)\n                                ,\n                                children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_icons__WEBPACK_IMPORTED_MODULE_5__.CloseIcon, {}, void 0, false, {\n                                    fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                                    lineNumber: 128,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                                lineNumber: 119,\n                                columnNumber: 13\n                            }, undefined),\n                            isChangingFarmId && /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Input, {\n                                sx: {\n                                    fontSize: \"1.1rem\",\n                                    padding: \".4rem\",\n                                    border: \"none\",\n                                    borderBottom: \"1px solid\",\n                                    borderRadius: 0,\n                                    width: \"auto\"\n                                },\n                                value: farmId,\n                                onChange: (e)=>setFarmId(e.target.value)\n                            }, void 0, false, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                                lineNumber: 131,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                tabIndex: 0,\n                                sx: {\n                                    margin: \"0 auto\",\n                                    fontSize: \"1.1rem\",\n                                    whiteSpace: \"nowrap\"\n                                },\n                                onClick: ()=>setIsChangingFarmId((prev)=>!prev\n                                    )\n                                ,\n                                children: \"(Change Farm ID)\"\n                            }, void 0, false, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                                lineNumber: 145,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_WalletManager_WalletManager__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                                lineNumber: 157,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                        lineNumber: 75,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_theme_ui_components__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                        sx: {\n                            padding: \".8rem\",\n                            \"@media(min-width: 768px)\": {\n                                display: \"none\"\n                            }\n                        },\n                        onClick: ()=>setIsMobileMenuActive(true)\n                        ,\n                        children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_icons__WEBPACK_IMPORTED_MODULE_5__.MenuIcon, {}, void 0, false, {\n                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                            lineNumber: 168,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                        lineNumber: 159,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n                lineNumber: 29,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n            lineNumber: 28,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/Header/Header.tsx\",\n        lineNumber: 18,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Header);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Header/Header.tsx\n");

/***/ }),

/***/ "./components/WalletManager/WalletManager.tsx":
/*!****************************************************!*\
  !*** ./components/WalletManager/WalletManager.tsx ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui/jsx-dev-runtime */ \"theme-ui/jsx-dev-runtime\");\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"@solana/wallet-adapter-react\");\n/* harmony import */ var _solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/wallet-adapter-react-ui */ \"@solana/wallet-adapter-react-ui\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! theme-ui */ \"theme-ui\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(theme_ui__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../icons */ \"./components/icons/index.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_1__, _solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_2__]);\n([_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_1__, _solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n/** @jsxImportSource theme-ui */ \n\n\n\nconst WalletManager = ()=>{\n    const wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_1__.useWallet)();\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_3__.Flex, {\n        sx: {\n            alignSelf: \"stretch\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            \".wallet-adapter-dropdown\": {\n                display: \"flex\",\n                justifyContent: \"center\"\n            }\n        },\n        children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_3__.Flex, {\n            sx: {\n                justifyContent: \"center\"\n            },\n            children: (wallet === null || wallet === void 0 ? void 0 : wallet.publicKey) ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_2__.WalletMultiButton, {\n                sx: {\n                    backgroundColor: \"unset\",\n                    transition: \"all .3s linear\",\n                    color: \"heading\",\n                    lineHeight: \"body\",\n                    fontSize: \"1.4rem\",\n                    padding: \"0\",\n                    height: \"unset\",\n                    alignSelf: \"flex-end\",\n                    \"&:hover\": {\n                        background: \"unset\",\n                        backgroundImage: \"unset!important\",\n                        color: \"primary\",\n                        cursor: \"pointer\"\n                    }\n                },\n                startIcon: null,\n                children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_icons__WEBPACK_IMPORTED_MODULE_4__.SettingsIcon, {\n                    sx: {\n                        transition: \"all .125s linear\",\n                        \"&:hover\": {\n                            stroke: \"primary\"\n                        }\n                    }\n                }, void 0, false, {\n                    fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/WalletManager/WalletManager.tsx\",\n                    lineNumber: 49,\n                    columnNumber: 13\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/WalletManager/WalletManager.tsx\",\n                lineNumber: 29,\n                columnNumber: 11\n            }, undefined) : /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_solana_wallet_adapter_react_ui__WEBPACK_IMPORTED_MODULE_2__.WalletMultiButton, {\n                startIcon: null,\n                sx: {\n                    backgroundColor: \"unset\",\n                    color: \"heading\",\n                    lineHeight: \"body\",\n                    fontSize: \"1.4rem\",\n                    padding: \".8rem 1.6rem\",\n                    height: \"unset\",\n                    alignSelf: \"flex-end\",\n                    display: \"flex\",\n                    background: (theme)=>{\n                        var ref;\n                        return (ref = theme.colors) === null || ref === void 0 ? void 0 : ref.primaryGradient;\n                    },\n                    border: \".2rem solid transparent\",\n                    transition: \"all .125s linear\",\n                    alignItems: \"center\",\n                    borderColor: \"primary\",\n                    opacity: 1,\n                    fontWeight: 500,\n                    \"&:not(:disabled):hover\": {\n                        bg: \"background\",\n                        cursor: \"pointer\",\n                        borderWidth: \".2rem\",\n                        opacity: 0.7\n                    },\n                    \"&:disabled\": {\n                        bg: \"background\",\n                        cursor: \"not-allowed\",\n                        opacity: 0.3\n                    }\n                }\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/WalletManager/WalletManager.tsx\",\n                lineNumber: 59,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/WalletManager/WalletManager.tsx\",\n            lineNumber: 23,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/WalletManager/WalletManager.tsx\",\n        lineNumber: 11,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WalletManager);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1dhbGxldE1hbmFnZXIvV2FsbGV0TWFuYWdlci50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQURBLGdDQUFnQyxDQUN3QjtBQUNXO0FBQ3RCO0FBQ047QUFFdkMsTUFBTUksYUFBYSxHQUFHLElBQU07SUFDMUIsTUFBTUMsTUFBTSxHQUFHTCx1RUFBUyxFQUFFO0lBRTFCLHFCQUNFLGlFQUFDRSwwQ0FBSTtRQUNISSxFQUFFLEVBQUU7WUFDRkMsU0FBUyxFQUFFLFNBQVM7WUFDcEJDLGNBQWMsRUFBRSxRQUFRO1lBQ3hCQyxVQUFVLEVBQUUsUUFBUTtZQUVwQiwwQkFBMEIsRUFBRTtnQkFDMUJDLE9BQU8sRUFBRSxNQUFNO2dCQUNmRixjQUFjLEVBQUUsUUFBUTthQUN6QjtTQUNGO2tCQUVELCtFQUFDTiwwQ0FBSTtZQUNISSxFQUFFLEVBQUU7Z0JBQ0ZFLGNBQWMsRUFBRSxRQUFRO2FBQ3pCO3NCQUVBSCxDQUFBQSxNQUFNLGFBQU5BLE1BQU0sV0FBVyxHQUFqQkEsS0FBQUEsQ0FBaUIsR0FBakJBLE1BQU0sQ0FBRU0sU0FBUyxrQkFDaEIsaUVBQUNWLDhFQUFpQjtnQkFDaEJLLEVBQUUsRUFBRTtvQkFDRk0sZUFBZSxFQUFFLE9BQU87b0JBQ3hCQyxVQUFVLEVBQUUsZ0JBQWdCO29CQUM1QkMsS0FBSyxFQUFFLFNBQVM7b0JBQ2hCQyxVQUFVLEVBQUUsTUFBTTtvQkFDbEJDLFFBQVEsRUFBRSxRQUFRO29CQUNsQkMsT0FBTyxFQUFFLEdBQUc7b0JBQ1pDLE1BQU0sRUFBRSxPQUFPO29CQUNmWCxTQUFTLEVBQUUsVUFBVTtvQkFFckIsU0FBUyxFQUFFO3dCQUNUWSxVQUFVLEVBQUUsT0FBTzt3QkFDbkJDLGVBQWUsRUFBRSxpQkFBaUI7d0JBQ2xDTixLQUFLLEVBQUUsU0FBUzt3QkFDaEJPLE1BQU0sRUFBRSxTQUFTO3FCQUNsQjtpQkFDRjtnQkFDREMsU0FBUyxFQUFFLElBQUk7MEJBRWYsK0VBQUNuQixnREFBWTtvQkFDWEcsRUFBRSxFQUFFO3dCQUNGTyxVQUFVLEVBQUUsa0JBQWtCO3dCQUM5QixTQUFTLEVBQUU7NEJBQ1RVLE1BQU0sRUFBRSxTQUFTO3lCQUNsQjtxQkFDRjs7Ozs7NkJBQ0Q7Ozs7O3lCQUNnQixpQkFFcEIsaUVBQUN0Qiw4RUFBaUI7Z0JBQ2hCcUIsU0FBUyxFQUFFLElBQUk7Z0JBQ2ZoQixFQUFFLEVBQUU7b0JBQ0ZNLGVBQWUsRUFBRSxPQUFPO29CQUN4QkUsS0FBSyxFQUFFLFNBQVM7b0JBQ2hCQyxVQUFVLEVBQUUsTUFBTTtvQkFDbEJDLFFBQVEsRUFBRSxRQUFRO29CQUNsQkMsT0FBTyxFQUFFLGNBQWM7b0JBQ3ZCQyxNQUFNLEVBQUUsT0FBTztvQkFDZlgsU0FBUyxFQUFFLFVBQVU7b0JBQ3JCRyxPQUFPLEVBQUUsTUFBTTtvQkFDZlMsVUFBVSxFQUFFLENBQUNLLEtBQUs7NEJBQUtBLEdBQVk7d0JBQVpBLE9BQUFBLENBQUFBLEdBQVksR0FBWkEsS0FBSyxDQUFDQyxNQUFNLGNBQVpELEdBQVksV0FBaUIsR0FBN0JBLEtBQUFBLENBQTZCLEdBQTdCQSxHQUFZLENBQUVFLGVBQWU7cUJBQUE7b0JBQ3BEQyxNQUFNLEVBQUUseUJBQXlCO29CQUNqQ2QsVUFBVSxFQUFFLGtCQUFrQjtvQkFDOUJKLFVBQVUsRUFBRSxRQUFRO29CQUNwQm1CLFdBQVcsRUFBRSxTQUFTO29CQUN0QkMsT0FBTyxFQUFFLENBQUM7b0JBQ1ZDLFVBQVUsRUFBRSxHQUFHO29CQUVmLHdCQUF3QixFQUFFO3dCQUN4QkMsRUFBRSxFQUFFLFlBQVk7d0JBQ2hCVixNQUFNLEVBQUUsU0FBUzt3QkFDakJXLFdBQVcsRUFBRSxPQUFPO3dCQUNwQkgsT0FBTyxFQUFFLEdBQUc7cUJBQ2I7b0JBRUQsWUFBWSxFQUFFO3dCQUNaRSxFQUFFLEVBQUUsWUFBWTt3QkFDaEJWLE1BQU0sRUFBRSxhQUFhO3dCQUNyQlEsT0FBTyxFQUFFLEdBQUc7cUJBQ2I7aUJBQ0Y7Ozs7O3lCQUNrQjs7Ozs7cUJBRWxCOzs7OztpQkFDRixDQUNSO0NBQ0Y7QUFFRCxpRUFBZXpCLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZW0tZmFybS11aS8uL2NvbXBvbmVudHMvV2FsbGV0TWFuYWdlci9XYWxsZXRNYW5hZ2VyLnRzeD8yMTRiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4SW1wb3J0U291cmNlIHRoZW1lLXVpICovXG5pbXBvcnQgeyB1c2VXYWxsZXQgfSBmcm9tIFwiQHNvbGFuYS93YWxsZXQtYWRhcHRlci1yZWFjdFwiXG5pbXBvcnQgeyBXYWxsZXRNdWx0aUJ1dHRvbiB9IGZyb20gXCJAc29sYW5hL3dhbGxldC1hZGFwdGVyLXJlYWN0LXVpXCJcbmltcG9ydCB7IEJ1dHRvbiwgRmxleCwgVGV4dCB9IGZyb20gXCJ0aGVtZS11aVwiXG5pbXBvcnQgeyBTZXR0aW5nc0ljb24gfSBmcm9tIFwiLi4vaWNvbnNcIlxuXG5jb25zdCBXYWxsZXRNYW5hZ2VyID0gKCkgPT4ge1xuICBjb25zdCB3YWxsZXQgPSB1c2VXYWxsZXQoKVxuXG4gIHJldHVybiAoXG4gICAgPEZsZXhcbiAgICAgIHN4PXt7XG4gICAgICAgIGFsaWduU2VsZjogXCJzdHJldGNoXCIsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICAgICAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuXG4gICAgICAgIFwiLndhbGxldC1hZGFwdGVyLWRyb3Bkb3duXCI6IHtcbiAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIlxuICAgICAgICB9XG4gICAgICB9fVxuICAgID5cbiAgICAgIDxGbGV4XG4gICAgICAgIHN4PXt7XG4gICAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCJcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAge3dhbGxldD8ucHVibGljS2V5ID8gKFxuICAgICAgICAgIDxXYWxsZXRNdWx0aUJ1dHRvblxuICAgICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInVuc2V0XCIsXG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IFwiYWxsIC4zcyBsaW5lYXJcIixcbiAgICAgICAgICAgICAgY29sb3I6IFwiaGVhZGluZ1wiLFxuICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiBcImJvZHlcIixcbiAgICAgICAgICAgICAgZm9udFNpemU6IFwiMS40cmVtXCIsXG4gICAgICAgICAgICAgIHBhZGRpbmc6IFwiMFwiLFxuICAgICAgICAgICAgICBoZWlnaHQ6IFwidW5zZXRcIixcbiAgICAgICAgICAgICAgYWxpZ25TZWxmOiBcImZsZXgtZW5kXCIsXG5cbiAgICAgICAgICAgICAgXCImOmhvdmVyXCI6IHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBcInVuc2V0XCIsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZEltYWdlOiBcInVuc2V0IWltcG9ydGFudFwiLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcInByaW1hcnlcIixcbiAgICAgICAgICAgICAgICBjdXJzb3I6IFwicG9pbnRlclwiXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBzdGFydEljb249e251bGwgYXMgYW55fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxTZXR0aW5nc0ljb25cbiAgICAgICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBcImFsbCAuMTI1cyBsaW5lYXJcIixcbiAgICAgICAgICAgICAgICBcIiY6aG92ZXJcIjoge1xuICAgICAgICAgICAgICAgICAgc3Ryb2tlOiBcInByaW1hcnlcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9XYWxsZXRNdWx0aUJ1dHRvbj5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8V2FsbGV0TXVsdGlCdXR0b25cbiAgICAgICAgICAgIHN0YXJ0SWNvbj17bnVsbCBhcyBhbnl9XG4gICAgICAgICAgICBzeD17e1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidW5zZXRcIixcbiAgICAgICAgICAgICAgY29sb3I6IFwiaGVhZGluZ1wiLFxuICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiBcImJvZHlcIixcbiAgICAgICAgICAgICAgZm9udFNpemU6IFwiMS40cmVtXCIsXG4gICAgICAgICAgICAgIHBhZGRpbmc6IFwiLjhyZW0gMS42cmVtXCIsXG4gICAgICAgICAgICAgIGhlaWdodDogXCJ1bnNldFwiLFxuICAgICAgICAgICAgICBhbGlnblNlbGY6IFwiZmxleC1lbmRcIixcbiAgICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICh0aGVtZSkgPT4gdGhlbWUuY29sb3JzPy5wcmltYXJ5R3JhZGllbnQsXG4gICAgICAgICAgICAgIGJvcmRlcjogXCIuMnJlbSBzb2xpZCB0cmFuc3BhcmVudFwiLFxuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBcImFsbCAuMTI1cyBsaW5lYXJcIixcbiAgICAgICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwicHJpbWFyeVwiLFxuICAgICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgICBmb250V2VpZ2h0OiA1MDAsXG5cbiAgICAgICAgICAgICAgXCImOm5vdCg6ZGlzYWJsZWQpOmhvdmVyXCI6IHtcbiAgICAgICAgICAgICAgICBiZzogXCJiYWNrZ3JvdW5kXCIsXG4gICAgICAgICAgICAgICAgY3Vyc29yOiBcInBvaW50ZXJcIixcbiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogXCIuMnJlbVwiLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuN1xuICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgIFwiJjpkaXNhYmxlZFwiOiB7XG4gICAgICAgICAgICAgICAgYmc6IFwiYmFja2dyb3VuZFwiLFxuICAgICAgICAgICAgICAgIGN1cnNvcjogXCJub3QtYWxsb3dlZFwiLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuM1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgID48L1dhbGxldE11bHRpQnV0dG9uPlxuICAgICAgICApfVxuICAgICAgPC9GbGV4PlxuICAgIDwvRmxleD5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBXYWxsZXRNYW5hZ2VyXG4iXSwibmFtZXMiOlsidXNlV2FsbGV0IiwiV2FsbGV0TXVsdGlCdXR0b24iLCJGbGV4IiwiU2V0dGluZ3NJY29uIiwiV2FsbGV0TWFuYWdlciIsIndhbGxldCIsInN4IiwiYWxpZ25TZWxmIiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwiZGlzcGxheSIsInB1YmxpY0tleSIsImJhY2tncm91bmRDb2xvciIsInRyYW5zaXRpb24iLCJjb2xvciIsImxpbmVIZWlnaHQiLCJmb250U2l6ZSIsInBhZGRpbmciLCJoZWlnaHQiLCJiYWNrZ3JvdW5kIiwiYmFja2dyb3VuZEltYWdlIiwiY3Vyc29yIiwic3RhcnRJY29uIiwic3Ryb2tlIiwidGhlbWUiLCJjb2xvcnMiLCJwcmltYXJ5R3JhZGllbnQiLCJib3JkZXIiLCJib3JkZXJDb2xvciIsIm9wYWNpdHkiLCJmb250V2VpZ2h0IiwiYmciLCJib3JkZXJXaWR0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/WalletManager/WalletManager.tsx\n");

/***/ }),

/***/ "./components/icons/LoadingIcon.tsx":
/*!******************************************!*\
  !*** ./components/icons/LoadingIcon.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LoadingIcon\": () => (/* binding */ LoadingIcon)\n/* harmony export */ });\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui/jsx-dev-runtime */ \"theme-ui/jsx-dev-runtime\");\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react */ \"@emotion/react\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_emotion_react__WEBPACK_IMPORTED_MODULE_1__);\n\n/** @jsxImportSource theme-ui */ \nconst rotate = _emotion_react__WEBPACK_IMPORTED_MODULE_1__.keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst LoadingIcon = ({ size =\"2.4rem\" , className =\"\"  })=>/*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        width: size,\n        height: size,\n        sx: {\n            stroke: \"primary\"\n        },\n        className: className,\n        viewBox: \"0 0 100 100\",\n        preserveAspectRatio: \"xMidYMid\",\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                cx: \"50\",\n                opacity: \"0.4\",\n                cy: \"50\",\n                fill: \"none\",\n                strokeWidth: \"14\",\n                r: \"40\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/LoadingIcon.tsx\",\n                lineNumber: 22,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                cx: \"50\",\n                cy: \"50\",\n                fill: \"none\",\n                strokeWidth: \"12\",\n                r: \"40\",\n                strokeDasharray: \"60 900\",\n                strokeLinecap: \"round\",\n                transform: \"rotate(25.6557 50 50)\",\n                sx: {\n                    animation: `${rotate} 1.5s infinite linear`,\n                    transformOrigin: \"50px 50px\"\n                }\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/LoadingIcon.tsx\",\n                lineNumber: 23,\n                columnNumber: 5\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/LoadingIcon.tsx\",\n        lineNumber: 14,\n        columnNumber: 3\n    }, undefined)\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2ljb25zL0xvYWRpbmdJY29uLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBO0FBREEsZ0NBQWdDLENBQ1U7QUFFMUMsTUFBTUMsTUFBTSxHQUFHRCxxREFBUyxDQUFDOzs7Ozs7O0FBT3pCLENBQUM7QUFFTSxNQUFNRSxXQUFXLEdBQUcsQ0FBQyxFQUFFQyxJQUFJLEVBQUcsUUFBUSxHQUFFQyxTQUFTLEVBQUcsRUFBRSxHQUFFLGlCQUM3RCxpRUFBQ0MsS0FBRztRQUNGQyxLQUFLLEVBQUVILElBQUk7UUFDWEksTUFBTSxFQUFFSixJQUFJO1FBQ1pLLEVBQUUsRUFBRTtZQUFFQyxNQUFNLEVBQUUsU0FBUztTQUFFO1FBQ3pCTCxTQUFTLEVBQUVBLFNBQVM7UUFDcEJNLE9BQU8sRUFBQyxhQUFhO1FBQ3JCQyxtQkFBbUIsRUFBQyxVQUFVOzswQkFFOUIsaUVBQUNDLFFBQU07Z0JBQUNDLEVBQUUsRUFBQyxJQUFJO2dCQUFDQyxPQUFPLEVBQUMsS0FBSztnQkFBQ0MsRUFBRSxFQUFDLElBQUk7Z0JBQUNDLElBQUksRUFBQyxNQUFNO2dCQUFDQyxXQUFXLEVBQUMsSUFBSTtnQkFBQ0MsQ0FBQyxFQUFDLElBQUk7Ozs7O3lCQUFHOzBCQUM1RSxpRUFBQ04sUUFBTTtnQkFDTEMsRUFBRSxFQUFDLElBQUk7Z0JBQ1BFLEVBQUUsRUFBQyxJQUFJO2dCQUNQQyxJQUFJLEVBQUMsTUFBTTtnQkFDWEMsV0FBVyxFQUFDLElBQUk7Z0JBQ2hCQyxDQUFDLEVBQUMsSUFBSTtnQkFDTkMsZUFBZSxFQUFDLFFBQVE7Z0JBQ3hCQyxhQUFhLEVBQUMsT0FBTztnQkFDckJDLFNBQVMsRUFBQyx1QkFBdUI7Z0JBQ2pDYixFQUFFLEVBQUU7b0JBQ0ZjLFNBQVMsRUFBRSxDQUFDLEVBQUVyQixNQUFNLENBQUMscUJBQXFCLENBQUM7b0JBQzNDc0IsZUFBZSxFQUFFLFdBQVc7aUJBQzdCOzs7Ozt5QkFDTzs7Ozs7O2lCQUNOO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZW0tZmFybS11aS8uL2NvbXBvbmVudHMvaWNvbnMvTG9hZGluZ0ljb24udHN4PzlmYzQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3hJbXBvcnRTb3VyY2UgdGhlbWUtdWkgKi9cbmltcG9ydCB7IGtleWZyYW1lcyB9IGZyb20gXCJAZW1vdGlvbi9yZWFjdFwiXG5cbmNvbnN0IHJvdGF0ZSA9IGtleWZyYW1lc2BcbiAgZnJvbSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbmBcblxuZXhwb3J0IGNvbnN0IExvYWRpbmdJY29uID0gKHsgc2l6ZSA9IFwiMi40cmVtXCIsIGNsYXNzTmFtZSA9IFwiXCIgfSkgPT4gKFxuICA8c3ZnXG4gICAgd2lkdGg9e3NpemV9XG4gICAgaGVpZ2h0PXtzaXplfVxuICAgIHN4PXt7IHN0cm9rZTogXCJwcmltYXJ5XCIgfX1cbiAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICB2aWV3Qm94PVwiMCAwIDEwMCAxMDBcIlxuICAgIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZFwiXG4gID5cbiAgICA8Y2lyY2xlIGN4PVwiNTBcIiBvcGFjaXR5PVwiMC40XCIgY3k9XCI1MFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlV2lkdGg9XCIxNFwiIHI9XCI0MFwiIC8+XG4gICAgPGNpcmNsZVxuICAgICAgY3g9XCI1MFwiXG4gICAgICBjeT1cIjUwXCJcbiAgICAgIGZpbGw9XCJub25lXCJcbiAgICAgIHN0cm9rZVdpZHRoPVwiMTJcIlxuICAgICAgcj1cIjQwXCJcbiAgICAgIHN0cm9rZURhc2hhcnJheT1cIjYwIDkwMFwiXG4gICAgICBzdHJva2VMaW5lY2FwPVwicm91bmRcIlxuICAgICAgdHJhbnNmb3JtPVwicm90YXRlKDI1LjY1NTcgNTAgNTApXCJcbiAgICAgIHN4PXt7XG4gICAgICAgIGFuaW1hdGlvbjogYCR7cm90YXRlfSAxLjVzIGluZmluaXRlIGxpbmVhcmAsXG4gICAgICAgIHRyYW5zZm9ybU9yaWdpbjogXCI1MHB4IDUwcHhcIlxuICAgICAgfX1cbiAgICA+PC9jaXJjbGU+XG4gIDwvc3ZnPlxuKVxuIl0sIm5hbWVzIjpbImtleWZyYW1lcyIsInJvdGF0ZSIsIkxvYWRpbmdJY29uIiwic2l6ZSIsImNsYXNzTmFtZSIsInN2ZyIsIndpZHRoIiwiaGVpZ2h0Iiwic3giLCJzdHJva2UiLCJ2aWV3Qm94IiwicHJlc2VydmVBc3BlY3RSYXRpbyIsImNpcmNsZSIsImN4Iiwib3BhY2l0eSIsImN5IiwiZmlsbCIsInN0cm9rZVdpZHRoIiwiciIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZUxpbmVjYXAiLCJ0cmFuc2Zvcm0iLCJhbmltYXRpb24iLCJ0cmFuc2Zvcm1PcmlnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/icons/LoadingIcon.tsx\n");

/***/ }),

/***/ "./components/icons/index.tsx":
/*!************************************!*\
  !*** ./components/icons/index.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SettingsIcon\": () => (/* binding */ SettingsIcon),\n/* harmony export */   \"CloseIcon\": () => (/* binding */ CloseIcon),\n/* harmony export */   \"MenuIcon\": () => (/* binding */ MenuIcon),\n/* harmony export */   \"SolanaLogoMark\": () => (/* binding */ SolanaLogoMark),\n/* harmony export */   \"PlusSign\": () => (/* binding */ PlusSign),\n/* harmony export */   \"DotsIcon\": () => (/* binding */ DotsIcon),\n/* harmony export */   \"SolanaLogo\": () => (/* binding */ SolanaLogo),\n/* harmony export */   \"DiscordIcon\": () => (/* binding */ DiscordIcon),\n/* harmony export */   \"TwitterIcon\": () => (/* binding */ TwitterIcon)\n/* harmony export */ });\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui/jsx-dev-runtime */ \"theme-ui/jsx-dev-runtime\");\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\n/** @jsxImportSource theme-ui */ function DotsIcon({ className =\"\"  }) {\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        sx: {\n            stroke: \"text\"\n        },\n        className: className,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"1.5\",\n        viewBox: \"0 0 24 24\",\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                stroke: \"none\",\n                d: \"M0 0h24v24H0z\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 19,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                cx: \"12\",\n                cy: \"12\",\n                r: \"9\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 20,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M8 12L8 12.01\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 21,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M12 12L12 12.01\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 22,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M16 12L16 12.01\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 23,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n        lineNumber: 5,\n        columnNumber: 5\n    }, this);\n}\nfunction SettingsIcon({ className =\"\"  }) {\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        className: className,\n        sx: {\n            stroke: \"text\"\n        },\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        fill: \"none\",\n        stroke: \"#2c3e50\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"1.5\",\n        viewBox: \"0 0 24 24\",\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                stroke: \"none\",\n                d: \"M0 0h24v24H0z\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 45,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37 1 .608 2.296.07 2.572-1.065z\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 46,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                cx: \"12\",\n                cy: \"12\",\n                r: \"3\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 47,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n        lineNumber: 30,\n        columnNumber: 5\n    }, this);\n}\nconst CloseIcon = ()=>{\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        sx: {\n            stroke: \"text\"\n        },\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"1.5\",\n        viewBox: \"0 0 24 24\",\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                stroke: \"none\",\n                d: \"M0 0h24v24H0z\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 67,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M18 6L6 18\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 68,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M6 6L18 18\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 69,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n        lineNumber: 54,\n        columnNumber: 5\n    }, undefined);\n};\nconst MenuIcon = ()=>{\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        sx: {\n            stroke: \"text\"\n        },\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"1.5\",\n        viewBox: \"0 0 24 24\",\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                stroke: \"none\",\n                d: \"M0 0h24v24H0z\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 89,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M4 6L20 6\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 90,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M4 12L20 12\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 91,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M4 18L20 18\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 92,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n        lineNumber: 76,\n        columnNumber: 5\n    }, undefined);\n};\nconst SolanaLogo = ()=>{\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 646 96\",\n        fill: \"none\",\n        sx: {\n            maxWidth: \"9.6rem\",\n            height: \"auto\",\n            verticalAlign: \"middle\"\n        },\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                clipPath: \"url(#clip0_4_583)\",\n                children: [\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M108.53 75.6899L90.81 94.6899C90.4267 95.1026 89.9626 95.432 89.4464 95.6573C88.9303 95.8827 88.3732 95.9994 87.81 95.9999H3.81C3.40937 95.9997 3.01749 95.8827 2.68235 95.6631C2.34722 95.4436 2.08338 95.1311 1.92313 94.7639C1.76288 94.3967 1.71318 93.9908 1.78012 93.5958C1.84706 93.2008 2.02772 92.8338 2.3 92.5399L20 73.5399C20.3833 73.1272 20.8474 72.7979 21.3636 72.5725C21.8797 72.3472 22.4368 72.2305 23 72.2299H107C107.404 72.2216 107.802 72.333 108.143 72.5502C108.484 72.7674 108.754 73.0806 108.917 73.4504C109.081 73.8203 109.131 74.2303 109.062 74.6288C108.993 75.0273 108.808 75.3965 108.53 75.6899ZM90.81 37.4199C90.4253 37.0091 89.9608 36.6811 89.445 36.4558C88.9292 36.2306 88.3728 36.1129 87.81 36.11H3.81C3.40937 36.1102 3.01749 36.2272 2.68235 36.4468C2.34722 36.6663 2.08338 36.9788 1.92313 37.346C1.76288 37.7132 1.71318 38.1191 1.78012 38.5141C1.84706 38.9091 2.02772 39.2761 2.3 39.57L20 58.58C20.3847 58.9908 20.8492 59.3188 21.365 59.5441C21.8808 59.7693 22.4372 59.887 23 59.8899H107C107.4 59.8878 107.79 59.7693 108.124 59.5491C108.458 59.3288 108.72 59.0162 108.879 58.6494C109.038 58.2826 109.087 57.8774 109.019 57.4833C108.952 57.0892 108.772 56.7232 108.5 56.43L90.81 37.4199ZM3.81 23.7699H87.81C88.3732 23.7694 88.9303 23.6527 89.4464 23.4273C89.9626 23.202 90.4267 22.8726 90.81 22.4599L108.53 3.45995C108.808 3.16647 108.993 2.79726 109.062 2.39877C109.131 2.00028 109.081 1.59031 108.917 1.22045C108.754 0.850591 108.484 0.537368 108.143 0.320195C107.802 0.103021 107.404 -0.0084012 107 -5.10783e-05H23C22.4368 0.000541762 21.8797 0.117167 21.3636 0.342553C20.8474 0.567938 20.3833 0.897249 20 1.30995L2.3 20.3099C2.02772 20.6038 1.84706 20.9708 1.78012 21.3658C1.71318 21.7608 1.76288 22.1667 1.92313 22.5339C2.08338 22.9011 2.34722 23.2136 2.68235 23.4331C3.01749 23.6527 3.40937 23.7697 3.81 23.7699V23.7699Z\",\n                        fill: \"url(#paint0_linear_4_583)\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                        lineNumber: 110,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M210.94 40.6002H166V25.8002H222.62V11.0002H165.85C163.91 10.9897 161.988 11.3613 160.192 12.0938C158.396 12.8264 156.761 13.9055 155.383 15.2696C154.004 16.6337 152.907 18.2561 152.155 20.044C151.403 21.832 151.01 23.7506 151 25.6902V40.6902C151.008 42.6315 151.398 44.5523 152.149 46.3425C152.9 48.1328 153.996 49.7575 155.375 51.1237C156.755 52.49 158.39 53.5709 160.187 54.3047C161.984 55.0385 163.909 55.4107 165.85 55.4002H210.85V70.2002H152.07V85.0002H210.94C212.88 85.0108 214.802 84.6391 216.598 83.9066C218.394 83.174 220.028 82.0949 221.407 80.7308C222.786 79.3667 223.883 77.7444 224.635 75.9564C225.387 74.1684 225.78 72.2498 225.79 70.3102V55.3102C225.782 53.3689 225.392 51.4482 224.641 49.6579C223.89 47.8676 222.794 46.2429 221.415 44.8767C220.035 43.5105 218.4 42.4296 216.603 41.6958C214.806 40.962 212.881 40.5897 210.94 40.6002V40.6002Z\",\n                        fill: \"white\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                        lineNumber: 114,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M298 11H252.89C250.947 10.9842 249.02 11.3519 247.219 12.0821C245.419 12.8123 243.78 13.8905 242.397 15.2552C241.013 16.6198 239.913 18.2439 239.159 20.0345C238.404 21.8251 238.01 23.747 238 25.69V70.31C238.01 72.253 238.404 74.1749 239.159 75.9655C239.913 77.7561 241.013 79.3802 242.397 80.7448C243.78 82.1095 245.419 83.1877 247.219 83.9179C249.02 84.6481 250.947 85.0158 252.89 85H298C299.94 85.0105 301.862 84.6389 303.658 83.9064C305.454 83.1738 307.089 82.0947 308.467 80.7306C309.846 79.3665 310.943 77.7441 311.695 75.9562C312.447 74.1682 312.84 72.2496 312.85 70.31V25.69C312.84 23.7504 312.447 21.8318 311.695 20.0438C310.943 18.2559 309.846 16.6335 308.467 15.2694C307.089 13.9053 305.454 12.8262 303.658 12.0936C301.862 11.3611 299.94 10.9895 298 11V11ZM297.89 70.2H253V25.8H297.87L297.89 70.2Z\",\n                        fill: \"white\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                        lineNumber: 118,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M456 11.0001H412C410.06 10.9896 408.138 11.3612 406.342 12.0937C404.546 12.8263 402.911 13.9054 401.533 15.2695C400.154 16.6336 399.057 18.256 398.305 20.0439C397.553 21.8319 397.16 23.7505 397.15 25.6901V85.0001H412.15V60.6901H455.95V85.0001H470.95V25.6901C470.94 23.742 470.544 21.8152 469.786 20.0206C469.027 18.2261 467.922 16.5993 466.532 15.2338C465.143 13.8684 463.497 12.7914 461.689 12.0648C459.881 11.3382 457.948 10.9764 456 11.0001V11.0001ZM455.89 45.8901H412.09V25.8001H455.89V45.8901Z\",\n                        fill: \"white\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                        lineNumber: 122,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M631.15 11.0002H587.15C585.21 10.9897 583.288 11.3613 581.492 12.0938C579.696 12.8264 578.062 13.9055 576.683 15.2696C575.304 16.6337 574.207 18.2561 573.455 20.044C572.703 21.832 572.31 23.7506 572.3 25.6902V85.0002H587.3V60.6902H631V85.0002H646V25.6902C645.99 23.7506 645.597 21.832 644.845 20.044C644.093 18.2561 642.996 16.6337 641.617 15.2696C640.238 13.9055 638.604 12.8264 636.808 12.0938C635.012 11.3613 633.09 10.9897 631.15 11.0002ZM631 45.8902H587.2V25.8002H631V45.8902Z\",\n                        fill: \"white\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                        lineNumber: 126,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M544 70.2001H538L516.55 17.2001C515.815 15.3716 514.55 13.8045 512.918 12.6999C511.286 11.5952 509.361 11.0033 507.39 11.0001H494.08C492.786 10.9935 491.504 11.2418 490.307 11.7307C489.109 12.2197 488.02 12.9397 487.1 13.8497C486.181 14.7598 485.45 15.8419 484.949 17.0345C484.448 18.227 484.187 19.5066 484.18 20.8001V85.0001H499.18V25.8001H505.18L526.62 78.8001C527.367 80.6251 528.642 82.1858 530.281 83.283C531.919 84.3803 533.848 84.9641 535.82 84.9601H549.13C550.424 84.9667 551.706 84.7185 552.903 84.2295C554.101 83.7406 555.19 83.0205 556.11 82.1105C557.029 81.2005 557.76 80.1183 558.261 78.9258C558.762 77.7332 559.023 76.4537 559.03 75.1601V11.0001H544V70.2001Z\",\n                        fill: \"white\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                        lineNumber: 130,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M341.1 11H326.1V70.31C326.11 72.2539 326.505 74.1766 327.26 75.9678C328.015 77.7591 329.116 79.3836 330.5 80.7484C331.884 82.1132 333.525 83.1912 335.326 83.9208C337.128 84.6504 339.056 85.0171 341 85H386V70.2H341.1V11Z\",\n                        fill: \"white\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                        lineNumber: 134,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 109,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"defs\", {\n                children: [\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"linearGradient\", {\n                        id: \"paint0_linear_4_583\",\n                        x1: \"10.81\",\n                        y1: \"98.29\",\n                        x2: \"98.89\",\n                        y2: \"-1.01005\",\n                        gradientUnits: \"userSpaceOnUse\",\n                        children: [\n                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                offset: \"0.08\",\n                                stopColor: \"#9945FF\"\n                            }, void 0, false, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                                lineNumber: 148,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                offset: \"0.3\",\n                                stopColor: \"#8752F3\"\n                            }, void 0, false, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                                lineNumber: 149,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                offset: \"0.5\",\n                                stopColor: \"#5497D5\"\n                            }, void 0, false, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                                lineNumber: 150,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                offset: \"0.6\",\n                                stopColor: \"#43B4CA\"\n                            }, void 0, false, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                                lineNumber: 151,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                offset: \"0.72\",\n                                stopColor: \"#28E0B9\"\n                            }, void 0, false, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                                lineNumber: 152,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                offset: \"0.97\",\n                                stopColor: \"#19FB9B\"\n                            }, void 0, false, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                                lineNumber: 153,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                        lineNumber: 140,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"clipPath\", {\n                        id: \"clip0_4_583\",\n                        children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                            width: \"646\",\n                            height: \"96\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                            lineNumber: 156,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                        lineNumber: 155,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 139,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n        lineNumber: 99,\n        columnNumber: 5\n    }, undefined);\n};\nfunction DiscordIcon({ className =\"\"  }) {\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        sx: {\n            stroke: \"text\",\n            verticalAlign: \"middle\"\n        },\n        className: className,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"1.5\",\n        viewBox: \"0 0 24 24\",\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                stroke: \"none\",\n                d: \"M0 0h24v24H0z\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 180,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                cx: \"9\",\n                cy: \"12\",\n                r: \"1\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 181,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                cx: \"15\",\n                cy: \"12\",\n                r: \"1\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 182,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M7.5 7.5c3.5-1 5.5-1 9 0M7 16.5c3.5 1 6.5 1 10 0\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 183,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M15.5 17c0 1 1.5 3 2 3 1.5 0 2.833-1.667 3.5-3 .667-1.667.5-5.833-1.5-11.5-1.457-1.015-3-1.34-4.5-1.5l-1 2.5M8.5 17c0 1-1.356 3-1.832 3-1.429 0-2.698-1.667-3.333-3-.635-1.667-.476-5.833 1.428-11.5C6.151 4.485 7.545 4.16 9 4l1 2.5\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 184,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n        lineNumber: 165,\n        columnNumber: 5\n    }, this);\n}\nfunction TwitterIcon({ className =\"\"  }) {\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        sx: {\n            stroke: \"text\",\n            verticalAlign: \"middle\"\n        },\n        className: className,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"1.5\",\n        viewBox: \"0 0 24 24\",\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                stroke: \"none\",\n                d: \"M0 0h24v24H0z\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 206,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M22 4.01c-1 .49-1.98.689-3 .99-1.121-1.265-2.783-1.335-4.38-.737S11.977 6.323 12 8v1c-3.245.083-6.135-1.395-8-4 0 0-4.182 7.433 4 11-1.872 1.247-3.739 2.088-6 2 3.308 1.803 6.913 2.423 10.034 1.517 3.58-1.04 6.522-3.723 7.651-7.742a13.84 13.84 0 00.497-3.753C20.18 7.773 21.692 5.25 22 4.009z\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 207,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n        lineNumber: 191,\n        columnNumber: 5\n    }, this);\n}\nfunction PlusSign({ className =\"\"  }) {\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        sx: {\n            stroke: \"text\",\n            verticalAlign: \"middle\"\n        },\n        className: className,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"44\",\n        height: \"44\",\n        fill: \"none\",\n        stroke: \"#2c3e50\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"1.5\",\n        viewBox: \"0 0 24 24\",\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                stroke: \"none\",\n                d: \"M0 0h24v24H0z\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 230,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M12 5L12 19\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 231,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                d: \"M5 12L19 12\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 232,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n        lineNumber: 214,\n        columnNumber: 5\n    }, this);\n}\nfunction SolanaLogoMark({ className =\"\"  }) {\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"101\",\n        height: \"88\",\n        fill: \"none\",\n        viewBox: \"0 0 101 88\",\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                fill: \"url(#paint0_linear_174_4403)\",\n                d: \"M100.48 69.382l-16.673 17.42c-.363.378-.801.68-1.288.886a3.959 3.959 0 01-1.545.312H1.936c-.378 0-.746-.107-1.062-.309a1.9 1.9 0 01-.714-.825 1.841 1.841 0 01-.132-1.072c.064-.362.235-.698.492-.966l16.686-17.42a3.872 3.872 0 011.284-.885 3.96 3.96 0 011.54-.313h79.034c.378 0 .746.107 1.062.308.315.202.563.489.714.826.15.337.196.709.132 1.071a1.87 1.87 0 01-.492.967zM83.807 34.303a3.873 3.873 0 00-1.288-.886 3.96 3.96 0 00-1.545-.312H1.936c-.378 0-.746.107-1.062.309a1.9 1.9 0 00-.714.825c-.15.337-.196.71-.132 1.071.064.362.235.698.492.967l16.686 17.42c.362.377.799.678 1.284.884a3.96 3.96 0 001.54.314h79.034c.378 0 .746-.107 1.062-.309.315-.201.563-.488.714-.825a1.844 1.844 0 00-.36-2.038l-16.673-17.42zM1.936 21.791h79.038a3.96 3.96 0 001.544-.313 3.873 3.873 0 001.289-.886l16.673-17.42a1.87 1.87 0 00.492-.967 1.843 1.843 0 00-.132-1.07 1.906 1.906 0 00-.714-.826A1.974 1.974 0 0099.064 0H20.03a3.96 3.96 0 00-1.54.314 3.873 3.873 0 00-1.284.884L.525 18.618a1.868 1.868 0 00-.492.966c-.065.362-.019.734.13 1.07.15.337.398.624.713.826.315.202.683.31 1.06.31z\"\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 246,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"defs\", {\n                children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"linearGradient\", {\n                    id: \"paint0_linear_174_4403\",\n                    x1: \"8.526\",\n                    x2: \"88.993\",\n                    y1: \"90.097\",\n                    y2: \"-3.016\",\n                    gradientUnits: \"userSpaceOnUse\",\n                    children: [\n                        /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                            offset: \"0.08\",\n                            stopColor: \"#9945FF\"\n                        }, void 0, false, {\n                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                            lineNumber: 259,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                            offset: \"0.3\",\n                            stopColor: \"#8752F3\"\n                        }, void 0, false, {\n                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                            lineNumber: 260,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                            offset: \"0.5\",\n                            stopColor: \"#5497D5\"\n                        }, void 0, false, {\n                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                            lineNumber: 261,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                            offset: \"0.6\",\n                            stopColor: \"#43B4CA\"\n                        }, void 0, false, {\n                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                            lineNumber: 262,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                            offset: \"0.72\",\n                            stopColor: \"#28E0B9\"\n                        }, void 0, false, {\n                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                            lineNumber: 263,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                            offset: \"0.97\",\n                            stopColor: \"#19FB9B\"\n                        }, void 0, false, {\n                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                            lineNumber: 264,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                    lineNumber: 251,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n                lineNumber: 250,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/components/icons/index.tsx\",\n        lineNumber: 239,\n        columnNumber: 5\n    }, this);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/icons/index.tsx\n");

/***/ }),

/***/ "./hooks/useGemFarmStaking.ts":
/*!************************************!*\
  !*** ./hooks/useGemFarmStaking.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @gemworks/gem-farm-ts */ \"@gemworks/gem-farm-ts\");\n/* harmony import */ var _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"@solana/wallet-adapter-react\");\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @project-serum/anchor */ \"@project-serum/anchor\");\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @solana/web3.js */ \"@solana/web3.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_solana_web3_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var hooks_useWalletNFTs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! hooks/useWalletNFTs */ \"./hooks/useWalletNFTs.tsx\");\n/* harmony import */ var lib_gem_farm_common_gem_bank__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/gem-farm/common/gem-bank */ \"./lib/gem-farm/common/gem-bank/index.ts\");\n/* harmony import */ var lib_gem_farm_common_gem_farm__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lib/gem-farm/common/gem-farm */ \"./lib/gem-farm/common/gem-farm/index.ts\");\n/* harmony import */ var utils_nfts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! utils/nfts */ \"./utils/nfts.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__, hooks_useWalletNFTs__WEBPACK_IMPORTED_MODULE_5__]);\n([_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__, hooks_useWalletNFTs__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\nconst useGemFarmStaking = (farmId)=>{\n    const { connection  } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__.useConnection)();\n    const wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__.useAnchorWallet)();\n    const { walletNFTs  } = (0,hooks_useWalletNFTs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n    const { 0: farmAccount , 1: setFarmAccount  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null) // @TODO add type to farmAccount\n    ;\n    const { 0: farmerAccount , 1: setFarmerAccount  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null) // @TODO add type to farmerAccount\n    ;\n    const { 0: farmerStatus , 1: setFarmerStatus  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { 0: farmerVaultAccount , 1: setFarmerVaultAccount  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { 0: farmerVaultNFTs , 1: setFarmerVaultNFTs  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { 0: selectedWalletItems , 1: setSelectedWalletItems  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const { 0: selectedVaultItems , 1: setSelectedVaultItems  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const { 0: gemBankClient , 1: setGemBankClient  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { 0: gemFarmClient , 1: setGemFarmClient  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { 0: feedbackStatus , 1: setFeedbackStatus  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const fetchFarmerAccount = async (farmClient, bankClient)=>{\n        if (connection && (wallet === null || wallet === void 0 ? void 0 : wallet.publicKey) && farmClient && bankClient) {\n            console.log(\"[Staking Hook] Fetching farmer account...\");\n            try {\n                if (!farmId) throw \"No farm ID has been configured.\";\n                setFeedbackStatus(\"Fetching farmer account...\");\n                const [farmerPDA] = await (0,_gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0__.findFarmerPDA)(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmId), wallet === null || wallet === void 0 ? void 0 : wallet.publicKey);\n                const farmerAcc = await farmClient.fetchFarmerAcc(farmerPDA);\n                setFarmerAccount(farmerAcc);\n                const vaultAcc = await bankClient.fetchVaultAcc(farmerAcc.vault);\n                setFarmerVaultAccount(vaultAcc);\n                const farmerState = farmClient.parseFarmerState(farmerAcc);\n                setFarmerStatus(farmerState);\n                setFeedbackStatus(\"\");\n            } catch (e) {\n                /**\n         * Couldn't fetch farmer; so set it as an empty object\n         * For the user to init their farmer account\n         */ console.error(e);\n                setFarmerAccount({});\n            }\n        }\n    };\n    /**\n   * Init clients, farm and farmer account on mount\n   */ (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        (async ()=>{\n            if (connection && (wallet === null || wallet === void 0 ? void 0 : wallet.publicKey)) {\n                try {\n                    if (!farmId) throw \"No farm ID has been configured.\";\n                    console.log(\"[Staking Hook] Initializing clients...\");\n                    const bankClient = await (0,lib_gem_farm_common_gem_bank__WEBPACK_IMPORTED_MODULE_6__.initGemBank)(connection, wallet);\n                    setGemBankClient(bankClient);\n                    const farmClient = await (0,lib_gem_farm_common_gem_farm__WEBPACK_IMPORTED_MODULE_7__.initGemFarm)(connection, wallet);\n                    setGemFarmClient(farmClient);\n                    const farmAcc = await farmClient.fetchFarmAcc(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmId));\n                    setFarmAccount(farmAcc);\n                    await fetchFarmerAccount(farmClient, bankClient);\n                } catch (e) {\n                    setFarmAccount(null);\n                    setFarmerAccount(null);\n                    console.error(e);\n                }\n            }\n        })();\n    }, [\n        connection,\n        wallet === null || wallet === void 0 ? void 0 : wallet.publicKey,\n        farmId\n    ]);\n    /**\n   * Set Farmer Vault NFTs state\n   *\n   * Depends on @var farmerAccount\n   */ (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchVaultNFTs = async ()=>{\n            if (gemBankClient && farmerAccount && (farmerAccount === null || farmerAccount === void 0 ? void 0 : farmerAccount.identity) && (wallet === null || wallet === void 0 ? void 0 : wallet.publicKey)) {\n                try {\n                    console.log(\"[Staking Hook] Fetching farmer vault...\");\n                    /**\n           * Fetch GDR (Gem Deposit Receipts) from the farmer vault\n           */ const foundGDRs = await gemBankClient.fetchAllGdrPDAs(farmerAccount.vault);\n                    const mints = foundGDRs.map((gdr)=>{\n                        return {\n                            mint: gdr.account.gemMint\n                        };\n                    });\n                    /** Fetch metadatas for Vault NFTs */ const currentVaultNFTs = await (0,utils_nfts__WEBPACK_IMPORTED_MODULE_8__.getNFTMetadataForMany)(mints, connection);\n                    /** Transform to use on the UI */ console.log(currentVaultNFTs);\n                    /**\n           * Set Vault NFTs state\n           */ setFarmerVaultNFTs(currentVaultNFTs);\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        };\n        if (gemBankClient && farmerAccount && (wallet === null || wallet === void 0 ? void 0 : wallet.publicKey)) {\n            fetchVaultNFTs();\n        }\n    }, [\n        wallet === null || wallet === void 0 ? void 0 : wallet.publicKey,\n        gemBankClient,\n        farmerAccount,\n        farmId\n    ]);\n    /**\n   * Handles selected items.\n   */ const handleWalletItemClick = (item)=>{\n        setSelectedWalletItems((prev)=>{\n            const exists = prev.find((NFT)=>NFT.onchainMetadata.mint === item.onchainMetadata.mint\n            );\n            /** Remove if exists */ if (exists) {\n                return prev.filter((NFT)=>NFT.onchainMetadata.mint !== item.onchainMetadata.mint\n                );\n            }\n            return prev === null || prev === void 0 ? void 0 : prev.concat(item);\n        });\n    };\n    const handleVaultItemClick = (item)=>{\n        setSelectedVaultItems((prev)=>{\n            const exists = prev.find((NFT)=>NFT.onchainMetadata.mint === item.onchainMetadata.mint\n            );\n            /** Remove if exists */ if (exists) {\n                return prev.filter((NFT)=>NFT.onchainMetadata.mint !== item.onchainMetadata.mint\n                );\n            }\n            return prev === null || prev === void 0 ? void 0 : prev.concat(item);\n        });\n    };\n    const depositGem = async (mint, creator, source)=>{\n        if (!gemBankClient) throw new Error(\"No Gem Bank client has been initialized.\");\n        const { txSig  } = await gemBankClient.depositGemWallet(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmAccount.bank), new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmerAccount.vault), new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_3__.BN(1), mint, source, creator);\n        await connection.confirmTransaction(txSig);\n        console.log(\"[Staking Hook] deposit done\", txSig);\n        return txSig;\n    };\n    const withdrawGem = async (mint)=>{\n        if (!gemBankClient) throw new Error(\"No Gem Bank client has been initialized.\");\n        const { txSig  } = await gemBankClient.withdrawGemWallet(farmAccount.bank, farmerAccount.vault, new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_3__.BN(1), mint);\n        await connection.confirmTransaction(txSig);\n        console.log(\"[Staking Hook] withdrawal done\", txSig);\n        return txSig;\n    };\n    const handleMoveToVaultButtonClick = async ()=>{\n        if (!gemFarmClient || !gemBankClient) throw new Error(\"No Gem Bank client has been initialized.\");\n        setFeedbackStatus(\"Depositing Gems to the vault...\");\n        for (const nft of selectedWalletItems){\n            var ref;\n            const creator = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(((ref = nft.onchainMetadata.data.creators) === null || ref === void 0 ? void 0 : ref[0].address) || \"\");\n            await depositGem(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(nft.onchainMetadata.mint), creator, nft.pubkey);\n        }\n        await fetchFarmerAccount(gemFarmClient, gemBankClient);\n        // await refetchNFTs()\n        setFeedbackStatus(\"\");\n        setSelectedVaultItems([]);\n        setSelectedWalletItems([]);\n    };\n    const handleMoveToWalletButtonClick = async ()=>{\n        if (!gemFarmClient || !gemBankClient) throw new Error(\"No Gem Bank client has been initialized.\");\n        setFeedbackStatus(\"Withdrawing Gems...\");\n        for (const nft of selectedVaultItems){\n            await withdrawGem(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(nft.onchainMetadata.mint));\n        }\n        await fetchFarmerAccount(gemFarmClient, gemBankClient);\n        // await refetchNFTs()\n        setFeedbackStatus(\"\");\n        setSelectedVaultItems([]);\n        setSelectedWalletItems([]);\n    };\n    const handleStakeButtonClick = async ()=>{\n        if (!gemFarmClient || !gemBankClient) throw new Error(\"No Gem Bank client has been initialized.\");\n        setFeedbackStatus(\"Staking...\");\n        const { txSig  } = await gemFarmClient.stakeWallet(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmId));\n        await connection.confirmTransaction(txSig);\n        await fetchFarmerAccount(gemFarmClient, gemBankClient);\n        // await refetchNFTs()\n        setFeedbackStatus(\"\");\n    // selectedNFTs.value = [];\n    };\n    const handleUnstakeButtonClick = async ()=>{\n        if (!gemFarmClient || !gemBankClient) throw new Error(\"No Gem Bank client has been initialized.\");\n        setFeedbackStatus(\"Unstaking wallet...\");\n        const { txSig  } = await gemFarmClient.unstakeWallet(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmId));\n        await connection.confirmTransaction(txSig);\n        await fetchFarmerAccount(gemFarmClient, gemBankClient);\n        // await refetchNFTs()\n        setFeedbackStatus(\"\");\n    // selectedNFTs.value = [];\n    };\n    const handleClaimButtonClick = async ()=>{\n        if (!gemFarmClient || !gemBankClient) throw new Error(\"No Gem Bank client has been initialized.\");\n        setFeedbackStatus(\"Claiming rewards...\");\n        const { txSig  } = await gemFarmClient.claimWallet(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmId), new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmAccount.rewardA.rewardMint), new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmAccount.rewardB.rewardMint));\n        await connection.confirmTransaction(txSig);\n        await fetchFarmerAccount(gemFarmClient, gemBankClient);\n        // await refetchNFTs()\n        setFeedbackStatus(\"\");\n    // await fetchFarmer();\n    };\n    const handleInitStakingButtonClick = async ()=>{\n        if (!gemFarmClient || !gemBankClient) throw new Error(\"No Gem Bank client has been initialized.\");\n        setFeedbackStatus(\"Initializing farmer...\");\n        const { txSig  } = await gemFarmClient.initFarmerWallet(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmId));\n        await connection.confirmTransaction(txSig);\n        // await fetchFarmer();\n        await fetchFarmerAccount(gemFarmClient, gemBankClient);\n        // await refetchNFTs()\n        setFeedbackStatus(\"\");\n    };\n    const handleRefreshRewardsButtonClick = async ()=>{\n        if (!gemFarmClient || !gemBankClient || !farmerAccount.identity) return true;\n        console.log(\"[Staking Hook] Refreshing farmer...\");\n        setFeedbackStatus(\"Refreshing rewards...\");\n        const { txSig  } = await gemFarmClient.refreshFarmerWallet(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_4__.PublicKey(farmId), farmerAccount.identity);\n        await connection.confirmTransaction(txSig);\n        await fetchFarmerAccount(gemFarmClient, gemBankClient);\n        // await refetchNFTs()\n        setFeedbackStatus(\"\");\n    };\n    const isLocked = farmerVaultAccount === null || farmerVaultAccount === void 0 ? void 0 : farmerVaultAccount.locked;\n    const availableA = (farmerAccount === null || farmerAccount === void 0 ? void 0 : farmerAccount.rewardA) ? farmerAccount.rewardA.accruedReward.sub(farmerAccount.rewardA.paidOutReward).toString() : null;\n    return {\n        walletNFTs,\n        farmerAccount,\n        farmerVaultAccount,\n        farmerStatus,\n        selectedWalletItems,\n        isLocked,\n        availableA,\n        feedbackStatus,\n        handleStakeButtonClick,\n        handleUnstakeButtonClick,\n        handleClaimButtonClick,\n        handleWalletItemClick,\n        handleMoveToVaultButtonClick,\n        handleInitStakingButtonClick,\n        farmerVaultNFTs,\n        selectedVaultItems,\n        handleMoveToWalletButtonClick,\n        handleVaultItemClick,\n        handleRefreshRewardsButtonClick\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useGemFarmStaking);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/useGemFarmStaking.ts\n");

/***/ }),

/***/ "./hooks/useOutsideClick.ts":
/*!**********************************!*\
  !*** ./hooks/useOutsideClick.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst useOutsideClick = (ref, onClickOutside)=>{\n    /**\n   * Alert if clicked on outside of element\n   */ function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n            onClickOutside();\n        }\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        document.addEventListener(\"keypress\", handleClickOutside);\n        return ()=>{\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n            document.removeEventListener(\"keypress\", handleClickOutside);\n        };\n    });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useOutsideClick);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rcy91c2VPdXRzaWRlQ2xpY2sudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBRWpDLE1BQU1DLGVBQWUsR0FBRyxDQUFDQyxHQUFRLEVBQUVDLGNBQW1CLEdBQUs7SUFDekQ7O0tBRUcsQ0FDSCxTQUFTQyxrQkFBa0IsQ0FBQ0MsS0FBVSxFQUFFO1FBQ3RDLElBQUlILEdBQUcsQ0FBQ0ksT0FBTyxJQUFJLENBQUNKLEdBQUcsQ0FBQ0ksT0FBTyxDQUFDQyxRQUFRLENBQUNGLEtBQUssQ0FBQ0csTUFBTSxDQUFDLEVBQUU7WUFDdERMLGNBQWMsRUFBRTtTQUNqQjtLQUNGO0lBRURILGdEQUFTLENBQUMsSUFBTTtRQUNkLDBCQUEwQjtRQUMxQlMsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUVOLGtCQUFrQixDQUFDO1FBQzFESyxRQUFRLENBQUNDLGdCQUFnQixDQUFDLFVBQVUsRUFBRU4sa0JBQWtCLENBQUM7UUFDekQsT0FBTyxJQUFNO1lBQ1gsd0NBQXdDO1lBQ3hDSyxRQUFRLENBQUNFLG1CQUFtQixDQUFDLFdBQVcsRUFBRVAsa0JBQWtCLENBQUM7WUFDN0RLLFFBQVEsQ0FBQ0UsbUJBQW1CLENBQUMsVUFBVSxFQUFFUCxrQkFBa0IsQ0FBQztTQUM3RDtLQUNGLENBQUM7Q0FDSDtBQUVELGlFQUFlSCxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2VtLWZhcm0tdWkvLi9ob29rcy91c2VPdXRzaWRlQ2xpY2sudHM/Y2ExYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIlxuXG5jb25zdCB1c2VPdXRzaWRlQ2xpY2sgPSAocmVmOiBhbnksIG9uQ2xpY2tPdXRzaWRlOiBhbnkpID0+IHtcbiAgLyoqXG4gICAqIEFsZXJ0IGlmIGNsaWNrZWQgb24gb3V0c2lkZSBvZiBlbGVtZW50XG4gICAqL1xuICBmdW5jdGlvbiBoYW5kbGVDbGlja091dHNpZGUoZXZlbnQ6IGFueSkge1xuICAgIGlmIChyZWYuY3VycmVudCAmJiAhcmVmLmN1cnJlbnQuY29udGFpbnMoZXZlbnQudGFyZ2V0KSkge1xuICAgICAgb25DbGlja091dHNpZGUoKVxuICAgIH1cbiAgfVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gQmluZCB0aGUgZXZlbnQgbGlzdGVuZXJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGhhbmRsZUNsaWNrT3V0c2lkZSlcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5cHJlc3NcIiwgaGFuZGxlQ2xpY2tPdXRzaWRlKVxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAvLyBVbmJpbmQgdGhlIGV2ZW50IGxpc3RlbmVyIG9uIGNsZWFuIHVwXG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGhhbmRsZUNsaWNrT3V0c2lkZSlcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlwcmVzc1wiLCBoYW5kbGVDbGlja091dHNpZGUpXG4gICAgfVxuICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCB1c2VPdXRzaWRlQ2xpY2tcbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VPdXRzaWRlQ2xpY2siLCJyZWYiLCJvbkNsaWNrT3V0c2lkZSIsImhhbmRsZUNsaWNrT3V0c2lkZSIsImV2ZW50IiwiY3VycmVudCIsImNvbnRhaW5zIiwidGFyZ2V0IiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./hooks/useOutsideClick.ts\n");

/***/ }),

/***/ "./hooks/useWalletNFTs.tsx":
/*!*********************************!*\
  !*** ./hooks/useWalletNFTs.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var utils_nfts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! utils/nfts */ \"./utils/nfts.ts\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"@solana/wallet-adapter-react\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__]);\n_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst useWalletNFTs = ()=>{\n    const { connection  } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__.useConnection)();\n    const { publicKey  } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__.useWallet)();\n    const { 0: walletNFTs , 1: setWalletNFTs  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const fetchNFTs = async ()=>{\n            const NFTs = await (0,utils_nfts__WEBPACK_IMPORTED_MODULE_1__.getNFTsByOwner)(publicKey, connection);\n            setWalletNFTs(NFTs);\n        };\n        if (publicKey) {\n            fetchNFTs();\n        }\n    }, [\n        publicKey\n    ]);\n    return {\n        walletNFTs\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useWalletNFTs);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rcy91c2VXYWxsZXRORlRzLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUUyQztBQUNBO0FBQzRCO0FBdUJ2RSxNQUFNSyxhQUFhLEdBQUcsSUFBTTtJQUMxQixNQUFNLEVBQUVDLFVBQVUsR0FBRSxHQUFHSCwyRUFBYSxFQUFFO0lBQ3RDLE1BQU0sRUFBRUksU0FBUyxHQUFFLEdBQUdILHVFQUFTLEVBQUU7SUFDakMsTUFBTSxFQTlCUixHQThCU0ksVUFBVSxHQTlCbkIsR0E4QnFCQyxhQUFhLE1BQUlSLCtDQUFRLENBQWEsRUFBRSxDQUFDO0lBRTVERCxnREFBUyxDQUFDLElBQU07UUFDZCxNQUFNVSxTQUFTLEdBQUcsVUFBWTtZQUM1QixNQUFNQyxJQUFJLEdBQUcsTUFBTVQsMERBQWMsQ0FBQ0ssU0FBUyxFQUFFRCxVQUFVLENBQUM7WUFDeERHLGFBQWEsQ0FBQ0UsSUFBSSxDQUFDO1NBQ3BCO1FBRUQsSUFBSUosU0FBUyxFQUFFO1lBQ2JHLFNBQVMsRUFBRTtTQUNaO0tBQ0YsRUFBRTtRQUFDSCxTQUFTO0tBQUMsQ0FBQztJQUVmLE9BQU87UUFBRUMsVUFBVTtLQUFFO0NBQ3RCO0FBRUQsaUVBQWVILGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZW0tZmFybS11aS8uL2hvb2tzL3VzZVdhbGxldE5GVHMudHN4Pzk1YmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiXG5pbXBvcnQgeyBwcm9ncmFtcyB9IGZyb20gXCJAbWV0YXBsZXgvanNcIlxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBnZXRORlRzQnlPd25lciB9IGZyb20gXCJ1dGlscy9uZnRzXCJcbmltcG9ydCB7IHVzZUNvbm5lY3Rpb24sIHVzZVdhbGxldCB9IGZyb20gXCJAc29sYW5hL3dhbGxldC1hZGFwdGVyLXJlYWN0XCJcblxuZXhwb3J0IHR5cGUgTkZUID0ge1xuICBwdWJrZXk/OiBQdWJsaWNLZXlcbiAgbWludDogUHVibGljS2V5XG4gIG9uY2hhaW5NZXRhZGF0YTogcHJvZ3JhbXMubWV0YWRhdGEuTWV0YWRhdGFEYXRhXG4gIGV4dGVybmFsTWV0YWRhdGE6IHtcbiAgICBhdHRyaWJ1dGVzOiBBcnJheTxhbnk+XG4gICAgY29sbGVjdGlvbjogYW55XG4gICAgZGVzY3JpcHRpb246IHN0cmluZ1xuICAgIGVkaXRpb246IG51bWJlclxuICAgIGV4dGVybmFsX3VybDogc3RyaW5nXG4gICAgaW1hZ2U6IHN0cmluZ1xuICAgIG5hbWU6IHN0cmluZ1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIGZpbGVzOiBBcnJheTxzdHJpbmc+XG4gICAgICBjYXRlZ29yeTogc3RyaW5nXG4gICAgICBjcmVhdG9yczogQXJyYXk8c3RyaW5nPlxuICAgIH1cbiAgICBzZWxsZXJfZmVlX2Jhc2lzX3BvaW50czogbnVtYmVyXG4gIH1cbn1cblxuY29uc3QgdXNlV2FsbGV0TkZUcyA9ICgpID0+IHtcbiAgY29uc3QgeyBjb25uZWN0aW9uIH0gPSB1c2VDb25uZWN0aW9uKClcbiAgY29uc3QgeyBwdWJsaWNLZXkgfSA9IHVzZVdhbGxldCgpXG4gIGNvbnN0IFt3YWxsZXRORlRzLCBzZXRXYWxsZXRORlRzXSA9IHVzZVN0YXRlPEFycmF5PE5GVD4+KFtdKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZmV0Y2hORlRzID0gYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgTkZUcyA9IGF3YWl0IGdldE5GVHNCeU93bmVyKHB1YmxpY0tleSwgY29ubmVjdGlvbilcbiAgICAgIHNldFdhbGxldE5GVHMoTkZUcylcbiAgICB9XG5cbiAgICBpZiAocHVibGljS2V5KSB7XG4gICAgICBmZXRjaE5GVHMoKVxuICAgIH1cbiAgfSwgW3B1YmxpY0tleV0pXG5cbiAgcmV0dXJuIHsgd2FsbGV0TkZUcyB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVdhbGxldE5GVHNcbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImdldE5GVHNCeU93bmVyIiwidXNlQ29ubmVjdGlvbiIsInVzZVdhbGxldCIsInVzZVdhbGxldE5GVHMiLCJjb25uZWN0aW9uIiwicHVibGljS2V5Iiwid2FsbGV0TkZUcyIsInNldFdhbGxldE5GVHMiLCJmZXRjaE5GVHMiLCJORlRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./hooks/useWalletNFTs.tsx\n");

/***/ }),

/***/ "./lib/gem-farm/common/gem-bank/index.ts":
/*!***********************************************!*\
  !*** ./lib/gem-farm/common/gem-bank/index.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFakeWallet\": () => (/* binding */ createFakeWallet),\n/* harmony export */   \"initGemBank\": () => (/* binding */ initGemBank),\n/* harmony export */   \"GemBank\": () => (/* binding */ GemBank)\n/* harmony export */ });\n/* harmony import */ var _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @gemworks/gem-farm-ts */ \"@gemworks/gem-farm-ts\");\n/* harmony import */ var _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"@solana/web3.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_solana_web3_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _metaplex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @metaplex/js */ \"@metaplex/js\");\n/* harmony import */ var _metaplex_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_metaplex_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _gemworks_gem_farm_ts_dist_types_gem_bank__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @gemworks/gem-farm-ts/dist/types/gem_bank */ \"@gemworks/gem-farm-ts/dist/types/gem_bank\");\n/* harmony import */ var _gemworks_gem_farm_ts_dist_types_gem_bank__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_gemworks_gem_farm_ts_dist_types_gem_bank__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n//when we only want to view vaults, no need to connect a real wallet.\nfunction createFakeWallet() {\n    const leakedKp = _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Keypair.fromSecretKey(Uint8Array.from([\n        208,\n        175,\n        150,\n        242,\n        88,\n        34,\n        108,\n        88,\n        177,\n        16,\n        168,\n        75,\n        115,\n        181,\n        199,\n        242,\n        120,\n        4,\n        78,\n        75,\n        19,\n        227,\n        13,\n        215,\n        184,\n        108,\n        226,\n        53,\n        111,\n        149,\n        179,\n        84,\n        137,\n        121,\n        79,\n        1,\n        160,\n        223,\n        124,\n        241,\n        202,\n        203,\n        220,\n        237,\n        50,\n        242,\n        57,\n        158,\n        226,\n        207,\n        203,\n        188,\n        43,\n        28,\n        70,\n        110,\n        214,\n        234,\n        251,\n        15,\n        249,\n        157,\n        62,\n        80\n    ]));\n    return new _metaplex_js__WEBPACK_IMPORTED_MODULE_2__.NodeWallet(leakedKp);\n}\n//need a separate func coz fetching IDL is async and can't be done in constructor\nasync function initGemBank(conn, wallet) {\n    const walletToUse = wallet !== null && wallet !== void 0 ? wallet : createFakeWallet();\n    return new GemBank(conn, walletToUse, _gemworks_gem_farm_ts_dist_types_gem_bank__WEBPACK_IMPORTED_MODULE_3__.IDL);\n}\nclass GemBank extends _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0__.GemBankClient {\n    constructor(conn, wallet, idl){\n        super(conn, wallet, idl, _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0__.GEM_BANK_PROG_ID);\n    }\n    async initBankWallet() {\n        const bank = _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Keypair.generate();\n        const txSig = await this.initBank(bank, this.wallet.publicKey, this.wallet.publicKey);\n        return {\n            bank,\n            txSig\n        };\n    }\n    async initVaultWallet(bank) {\n        return this.initVault(bank, this.wallet.publicKey, this.wallet.publicKey, this.wallet.publicKey, \"test_vault\");\n    }\n    async setVaultLockWallet(bank, vault, vaultLocked) {\n        return this.setVaultLock(bank, vault, this.wallet.publicKey, vaultLocked);\n    }\n    async depositGemWallet(bank, vault, gemAmount, gemMint, gemSource, creator) {\n        const [mintProof, bump] = await (0,_gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0__.findWhitelistProofPDA)(bank, gemMint);\n        const [creatorProof, bump2] = await (0,_gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_0__.findWhitelistProofPDA)(bank, creator);\n        const metadata = await _metaplex_js__WEBPACK_IMPORTED_MODULE_2__.programs.metadata.Metadata.getPDA(gemMint);\n        return this.depositGem(bank, vault, this.wallet.publicKey, gemAmount, gemMint, gemSource, mintProof, metadata, creatorProof);\n    }\n    async withdrawGemWallet(bank, vault, gemAmount, gemMint) {\n        return this.withdrawGem(bank, vault, this.wallet.publicKey, gemAmount, gemMint, this.wallet.publicKey);\n    }\n    async addToWhitelistWallet(bank, addressToWhitelist, whitelistType) {\n        return this.addToWhitelist(bank, this.wallet.publicKey, addressToWhitelist, whitelistType);\n    }\n    async removeFromWhitelistWallet(bank, addressToRemove) {\n        return this.removeFromWhitelist(bank, this.wallet.publicKey, addressToRemove);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/gem-farm/common/gem-bank/index.ts\n");

/***/ }),

/***/ "./lib/gem-farm/common/gem-farm/index.ts":
/*!***********************************************!*\
  !*** ./lib/gem-farm/common/gem-farm/index.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initGemFarm\": () => (/* binding */ initGemFarm),\n/* harmony export */   \"GemFarm\": () => (/* binding */ GemFarm)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"@solana/web3.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @project-serum/anchor */ \"@project-serum/anchor\");\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _gem_bank__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../gem-bank */ \"./lib/gem-farm/common/gem-bank/index.ts\");\n/* harmony import */ var _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @gemworks/gem-farm-ts */ \"@gemworks/gem-farm-ts\");\n/* harmony import */ var _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _metaplex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @metaplex/js */ \"@metaplex/js\");\n/* harmony import */ var _metaplex_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_metaplex_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _gemworks_gem_farm_ts_dist_types_gem_bank__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @gemworks/gem-farm-ts/dist/types/gem_bank */ \"@gemworks/gem-farm-ts/dist/types/gem_bank\");\n/* harmony import */ var _gemworks_gem_farm_ts_dist_types_gem_bank__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_gemworks_gem_farm_ts_dist_types_gem_bank__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _gemworks_gem_farm_ts_dist_types_gem_farm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @gemworks/gem-farm-ts/dist/types/gem_farm */ \"@gemworks/gem-farm-ts/dist/types/gem_farm\");\n/* harmony import */ var _gemworks_gem_farm_ts_dist_types_gem_farm__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_gemworks_gem_farm_ts_dist_types_gem_farm__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\nasync function initGemFarm(conn, wallet) {\n    const walletToUse = wallet !== null && wallet !== void 0 ? wallet : (0,_gem_bank__WEBPACK_IMPORTED_MODULE_2__.createFakeWallet)();\n    return new GemFarm(conn, walletToUse, _gemworks_gem_farm_ts_dist_types_gem_farm__WEBPACK_IMPORTED_MODULE_6__.IDL, _gemworks_gem_farm_ts_dist_types_gem_bank__WEBPACK_IMPORTED_MODULE_5__.IDL);\n}\nclass GemFarm extends _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_3__.GemFarmClient {\n    constructor(conn, wallet, farmIdl, bankIdl){\n        super(conn, wallet, farmIdl, _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_3__.GEM_FARM_PROG_ID, bankIdl, _gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_3__.GEM_BANK_PROG_ID);\n    }\n    async initFarmWallet(rewardAMint, rewardAType, rewardBMint, rewardBType, farmConfig) {\n        const farm = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair.generate();\n        const bank = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair.generate();\n        const result = await this.initFarm(farm, this.wallet.publicKey, this.wallet.publicKey, bank, rewardAMint, rewardAType, rewardBMint, rewardBType, farmConfig);\n        console.log(\"new farm started!\", farm.publicKey.toBase58());\n        console.log(\"bank is:\", bank.publicKey.toBase58());\n        return {\n            farm,\n            bank,\n            ...result\n        };\n    }\n    async updateFarmWallet(farm, newConfig, newManager) {\n        const result = await this.updateFarm(farm, this.wallet.publicKey, newConfig, newManager);\n        console.log(\"updated the farm\");\n        return result;\n    }\n    async authorizeFunderWallet(farm, funder) {\n        const result = await this.authorizeFunder(farm, this.wallet.publicKey, funder);\n        console.log(\"authorized funder\", funder.toBase58());\n        return result;\n    }\n    async deauthorizeFunderWallet(farm, funder) {\n        const result = await this.deauthorizeFunder(farm, this.wallet.publicKey, funder);\n        console.log(\"DEauthorized funder\", funder.toBase58());\n        return result;\n    }\n    async fundVariableRewardWallet(farm, rewardMint, amount, duration) {\n        const rewardSource = await this.findATA(rewardMint, this.wallet.publicKey);\n        const config = {\n            amount: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(amount),\n            durationSec: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(duration)\n        };\n        const result = this.fundReward(farm, rewardMint, this.wallet.publicKey, rewardSource, config);\n        console.log(\"funded variable reward with mint:\", rewardMint.toBase58());\n        return result;\n    }\n    async fundFixedRewardWallet(farm, rewardMint, amount, duration, baseRate, denominator, t1RewardRate, t1RequiredTenure, t2RewardRate, t2RequiredTenure, t3RewardRate, t3RequiredTenure) {\n        const rewardSource = await this.findATA(rewardMint, this.wallet.publicKey);\n        const config = {\n            schedule: {\n                baseRate: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(baseRate),\n                tier1: t1RewardRate ? {\n                    rewardRate: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(t1RewardRate),\n                    requiredTenure: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(t1RequiredTenure)\n                } : null,\n                tier2: t2RewardRate ? {\n                    rewardRate: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(t2RewardRate),\n                    requiredTenure: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(t2RequiredTenure)\n                } : null,\n                tier3: t3RewardRate ? {\n                    rewardRate: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(t3RewardRate),\n                    requiredTenure: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(t3RequiredTenure)\n                } : null,\n                denominator: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(denominator)\n            },\n            amount: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(amount),\n            durationSec: new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(duration)\n        };\n        const result = await this.fundReward(farm, rewardMint, this.wallet.publicKey, rewardSource, undefined, config);\n        console.log(\"funded fixed reward with mint:\", rewardMint.toBase58());\n        return result;\n    }\n    async cancelRewardWallet(farm, rewardMint) {\n        const result = await this.cancelReward(farm, this.wallet.publicKey, rewardMint, this.wallet.publicKey);\n        console.log(\"cancelled reward\", rewardMint.toBase58());\n        return result;\n    }\n    async lockRewardWallet(farm, rewardMint) {\n        const result = await this.lockReward(farm, this.wallet.publicKey, rewardMint);\n        console.log(\"locked reward\", rewardMint.toBase58());\n        return result;\n    }\n    async refreshFarmerWallet(farm, farmerIdentity) {\n        const result = await this.refreshFarmer(farm, farmerIdentity);\n        console.log(\"refreshed farmer\", farmerIdentity.toBase58());\n        return result;\n    }\n    async treasuryPayoutWallet(farm, destination, lamports) {\n        const result = await this.payoutFromTreasury(farm, this.wallet.publicKey, destination, new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(lamports));\n        console.log(\"paid out from treasury\", lamports);\n        return result;\n    }\n    async initFarmerWallet(farm) {\n        const result = await this.initFarmer(farm, this.wallet.publicKey, this.wallet.publicKey);\n        console.log(\"initialized new farmer\", this.wallet.publicKey.toBase58());\n        return result;\n    }\n    async stakeWallet(farm) {\n        const result = await this.stake(farm, this.wallet.publicKey);\n        console.log(\"begun staking for farmer\", this.wallet.publicKey.toBase58());\n        return result;\n    }\n    async unstakeWallet(farm) {\n        const result = await this.unstake(farm, this.wallet.publicKey);\n        console.log(\"ended staking for farmer\", this.wallet.publicKey.toBase58());\n        return result;\n    }\n    async claimWallet(farm, rewardAMint, rewardBMint) {\n        const result = await this.claim(farm, this.wallet.publicKey, rewardAMint, rewardBMint);\n        console.log(\"claimed rewards for farmer\", this.wallet.publicKey.toBase58());\n        return result;\n    }\n    async flashDepositWallet(farm, gemAmount, gemMint, gemSource, creator) {\n        const farmAcc = await this.fetchFarmAcc(farm);\n        const bank = farmAcc.bank;\n        const [mintProof, bump] = await (0,_gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_3__.findWhitelistProofPDA)(bank, gemMint);\n        const [creatorProof, bump2] = await (0,_gemworks_gem_farm_ts__WEBPACK_IMPORTED_MODULE_3__.findWhitelistProofPDA)(bank, creator);\n        const metadata = await _metaplex_js__WEBPACK_IMPORTED_MODULE_4__.programs.metadata.Metadata.getPDA(gemMint);\n        const result = await this.flashDeposit(farm, this.wallet.publicKey, new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(gemAmount), gemMint, gemSource, mintProof, metadata, creatorProof);\n        console.log(\"added extra gem for farmer\", this.wallet.publicKey.toBase58());\n        return result;\n    }\n    async addToBankWhitelistWallet(farm, addressToWhitelist, whitelistType) {\n        const result = await this.addToBankWhitelist(farm, this.wallet.publicKey, addressToWhitelist, whitelistType);\n        console.log(`${addressToWhitelist.toBase58()} added to whitelist`);\n        return result;\n    }\n    async removeFromBankWhitelistWallet(farm, addressToRemove) {\n        const result = await this.removeFromBankWhitelist(farm, this.wallet.publicKey, addressToRemove);\n        console.log(`${addressToRemove.toBase58()} removed from whitelist`);\n        return result;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/gem-farm/common/gem-farm/index.ts\n");

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\");\nvar _router1 = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst prefetched = {};\nfunction prefetch(router, href, as, options) {\n    if (true) return;\n    if (!(0, _router).isLocalURL(href)) return;\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    router.prefetch(href, as, options).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n    const curLocale = options && typeof options.locale !== \"undefined\" ? options.locale : router && router.locale;\n    // Join on an invalid URI character\n    prefetched[href + \"%\" + as + (curLocale ? \"%\" + curLocale : \"\")] = true;\n}\nfunction isModifiedEvent(event) {\n    const { target  } = event.currentTarget;\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale) {\n    const { nodeName  } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    // replace state instead of push if prop is present\n    router[replace ? \"replace\" : \"push\"](href, as, {\n        shallow,\n        locale,\n        scroll\n    });\n}\nfunction Link(props) {\n    if (true) {\n        function createPropError(args) {\n            return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + ( false ? 0 : \"\"));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === \"href\") {\n                if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: props[key] === null ? \"null\" : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === \"as\") {\n                if (props[key] && valType !== \"string\" && valType !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"locale\") {\n                if (props[key] && valType !== \"string\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"replace\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\") {\n                if (props[key] != null && valType !== \"boolean\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`boolean`\",\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current) {\n            hasWarned.current = true;\n            console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n        }\n    }\n    const p = props.prefetch !== false;\n    const router = (0, _router1).useRouter();\n    const { href , as  } = _react.default.useMemo(()=>{\n        const [resolvedHref, resolvedAs] = (0, _router).resolveHref(router, props.href, true);\n        return {\n            href: resolvedHref,\n            as: props.as ? (0, _router).resolveHref(router, props.as) : resolvedAs || resolvedHref\n        };\n    }, [\n        router,\n        props.href,\n        props.as\n    ]);\n    let { children , replace , shallow , scroll , locale  } = props;\n    if (typeof children === \"string\") {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (true) {\n        try {\n            child = _react.default.Children.only(children);\n        } catch (err) {\n            if (!children) {\n                throw new Error(`No children were passed to <Link> with \\`href\\` of \\`${props.href}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`);\n            }\n            throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${props.href}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + ( false ? 0 : \"\"));\n        }\n    } else {}\n    const childRef = child && typeof child === \"object\" && child.ref;\n    const [setIntersectionRef, isVisible] = (0, _useIntersection).useIntersection({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        childRef,\n        setIntersectionRef\n    ]);\n    _react.default.useEffect(()=>{\n        const shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n        const curLocale = typeof locale !== \"undefined\" ? locale : router && router.locale;\n        const isPrefetched = prefetched[href + \"%\" + as + (curLocale ? \"%\" + curLocale : \"\")];\n        if (shouldPrefetch && !isPrefetched) {\n            prefetch(router, href, as, {\n                locale: curLocale\n            });\n        }\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        p,\n        router\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick: (e)=>{\n            if (true) {\n                if (!e) {\n                    throw new Error(`Component rendered inside next/link has to pass click event to \"onClick\" prop.`);\n                }\n            }\n            if (child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!e.defaultPrevented) {\n                linkClicked(e, router, href, as, replace, shallow, scroll, locale);\n            }\n        }\n    };\n    childProps.onMouseEnter = (e)=>{\n        if (child.props && typeof child.props.onMouseEnter === \"function\") {\n            child.props.onMouseEnter(e);\n        }\n        if ((0, _router).isLocalURL(href)) {\n            prefetch(router, href, as, {\n                priority: true\n            });\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (props.passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : router && router.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = router && router.isLocaleDomain && (0, _router).getDomainLocale(as, curLocale, router && router.locales, router && router.domainLocales);\n        childProps.href = localeDomain || (0, _router).addBasePath((0, _router).addLocale(as, curLocale, router && router.defaultLocale));\n    }\n    return /*#__PURE__*/ _react.default.cloneElement(child, childProps);\n}\nvar _default = Link;\nexports[\"default\"] = _default; //# sourceMappingURL=link.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removePathTrailingSlash = removePathTrailingSlash;\nexports.normalizePathTrailingSlash = void 0;\nfunction removePathTrailingSlash(path) {\n    return path.endsWith(\"/\") && path !== \"/\" ? path.slice(0, -1) : path;\n}\nconst normalizePathTrailingSlash =  false ? 0 : removePathTrailingSlash;\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash; //# sourceMappingURL=normalize-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxLQUFLLEVBQUUsSUFBSTtDQUNkLEVBQUMsQ0FBQztBQUNIRCwrQkFBK0IsR0FBR0UsdUJBQXVCLENBQUM7QUFDMURGLGtDQUFrQyxHQUFHLEtBQUssQ0FBQyxDQUFDO0FBQzVDLFNBQVNFLHVCQUF1QixDQUFDRSxJQUFJLEVBQUU7SUFDbkMsT0FBT0EsSUFBSSxDQUFDQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUlELElBQUksS0FBSyxHQUFHLEdBQUdBLElBQUksQ0FBQ0UsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHRixJQUFJLENBQUM7Q0FDeEU7QUFDRCxNQUFNRCwwQkFBMEIsR0FBR0ksTUFBaUMsR0FBRyxDQVF0RSxHQUFHTCx1QkFBdUI7QUFDM0JGLGtDQUFrQyxHQUFHRywwQkFBMEIsQ0FBQyxDQUVoRSxvREFBb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZW0tZmFybS11aS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L25vcm1hbGl6ZS10cmFpbGluZy1zbGFzaC5qcz80YzJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5yZW1vdmVQYXRoVHJhaWxpbmdTbGFzaCA9IHJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoO1xuZXhwb3J0cy5ub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IHZvaWQgMDtcbmZ1bmN0aW9uIHJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgICByZXR1cm4gcGF0aC5lbmRzV2l0aCgnLycpICYmIHBhdGggIT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn1cbmNvbnN0IG5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoID0gcHJvY2Vzcy5lbnYuX19ORVhUX1RSQUlMSU5HX1NMQVNIID8gKHBhdGgpPT57XG4gICAgaWYgKC9cXC5bXi9dK1xcLz8kLy50ZXN0KHBhdGgpKSB7XG4gICAgICAgIHJldHVybiByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaChwYXRoKTtcbiAgICB9IGVsc2UgaWYgKHBhdGguZW5kc1dpdGgoJy8nKSkge1xuICAgICAgICByZXR1cm4gcGF0aDtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gcGF0aCArICcvJztcbiAgICB9XG59IDogcmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2g7XG5leHBvcnRzLm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoID0gbm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2g7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vcm1hbGl6ZS10cmFpbGluZy1zbGFzaC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJyZW1vdmVQYXRoVHJhaWxpbmdTbGFzaCIsIm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoIiwicGF0aCIsImVuZHNXaXRoIiwic2xpY2UiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX1RSQUlMSU5HX1NMQVNIIiwidGVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\nconst requestIdleCallback = typeof self !== \"undefined\" && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {\n    let start = Date.now();\n    return setTimeout(function() {\n        cb({\n            didTimeout: false,\n            timeRemaining: function() {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n};\nexports.requestIdleCallback = requestIdleCallback;\nconst cancelIdleCallback = typeof self !== \"undefined\" && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {\n    return clearTimeout(id);\n};\nexports.cancelIdleCallback = cancelIdleCallback; //# sourceMappingURL=request-idle-callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxLQUFLLEVBQUUsSUFBSTtDQUNkLEVBQUMsQ0FBQztBQUNIRCwwQkFBMEIsR0FBR0EsMkJBQTJCLEdBQUcsS0FBSyxDQUFDLENBQUM7QUFDbEUsTUFBTUcsbUJBQW1CLEdBQUcsT0FBT0MsSUFBSSxLQUFLLFdBQVcsSUFBSUEsSUFBSSxDQUFDRCxtQkFBbUIsSUFBSUMsSUFBSSxDQUFDRCxtQkFBbUIsQ0FBQ0UsSUFBSSxDQUFDQyxNQUFNLENBQUMsSUFBSSxTQUFTQyxFQUFFLEVBQUU7SUFDekksSUFBSUMsS0FBSyxHQUFHQyxJQUFJLENBQUNDLEdBQUcsRUFBRTtJQUN0QixPQUFPQyxVQUFVLENBQUMsV0FBVztRQUN6QkosRUFBRSxDQUFDO1lBQ0NLLFVBQVUsRUFBRSxLQUFLO1lBQ2pCQyxhQUFhLEVBQUUsV0FBVztnQkFDdEIsT0FBT0MsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDTixJQUFJLENBQUNDLEdBQUcsRUFBRSxHQUFHRixLQUFLLENBQUMsQ0FBQyxDQUFDO2FBQ2pEO1NBQ0osQ0FBQyxDQUFDO0tBQ04sRUFBRSxDQUFDLENBQUMsQ0FBQztDQUNUO0FBQ0RSLDJCQUEyQixHQUFHRyxtQkFBbUIsQ0FBQztBQUNsRCxNQUFNRCxrQkFBa0IsR0FBRyxPQUFPRSxJQUFJLEtBQUssV0FBVyxJQUFJQSxJQUFJLENBQUNGLGtCQUFrQixJQUFJRSxJQUFJLENBQUNGLGtCQUFrQixDQUFDRyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxJQUFJLFNBQVNVLEVBQUUsRUFBRTtJQUN0SSxPQUFPQyxZQUFZLENBQUNELEVBQUUsQ0FBQyxDQUFDO0NBQzNCO0FBQ0RoQiwwQkFBMEIsR0FBR0Usa0JBQWtCLENBQUMsQ0FFaEQsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2VtLWZhcm0tdWkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanM/MWUyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY2FuY2VsSWRsZUNhbGxiYWNrID0gZXhwb3J0cy5yZXF1ZXN0SWRsZUNhbGxiYWNrID0gdm9pZCAwO1xuY29uc3QgcmVxdWVzdElkbGVDYWxsYmFjayA9IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyAmJiBzZWxmLnJlcXVlc3RJZGxlQ2FsbGJhY2sgJiYgc2VsZi5yZXF1ZXN0SWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihjYikge1xuICAgIGxldCBzdGFydCA9IERhdGUubm93KCk7XG4gICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGNiKHtcbiAgICAgICAgICAgIGRpZFRpbWVvdXQ6IGZhbHNlLFxuICAgICAgICAgICAgdGltZVJlbWFpbmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIDUwIC0gKERhdGUubm93KCkgLSBzdGFydCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LCAxKTtcbn07XG5leHBvcnRzLnJlcXVlc3RJZGxlQ2FsbGJhY2sgPSByZXF1ZXN0SWRsZUNhbGxiYWNrO1xuY29uc3QgY2FuY2VsSWRsZUNhbGxiYWNrID0gdHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihpZCkge1xuICAgIHJldHVybiBjbGVhclRpbWVvdXQoaWQpO1xufTtcbmV4cG9ydHMuY2FuY2VsSWRsZUNhbGxiYWNrID0gY2FuY2VsSWRsZUNhbGxiYWNrO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY2FuY2VsSWRsZUNhbGxiYWNrIiwicmVxdWVzdElkbGVDYWxsYmFjayIsInNlbGYiLCJiaW5kIiwid2luZG93IiwiY2IiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJzZXRUaW1lb3V0IiwiZGlkVGltZW91dCIsInRpbWVSZW1haW5pbmciLCJNYXRoIiwibWF4IiwiaWQiLCJjbGVhclRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.getMiddlewareManifest = getMiddlewareManifest;\nexports.createRouteLoader = createRouteLoader;\nvar _getAssetPathFromRoute = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/utils/get-asset-path-from-route */ \"../shared/lib/router/utils/get-asset-path-from-route\"));\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\nconst MS_MAX_IDLE_DELAY = 3800;\nfunction withFuture(key, map, generator) {\n    let entry = map.get(key);\n    if (entry) {\n        if (\"future\" in entry) {\n            return entry.future;\n        }\n        return Promise.resolve(entry);\n    }\n    let resolver;\n    const prom = new Promise((resolve)=>{\n        resolver = resolve;\n    });\n    map.set(key, entry = {\n        resolve: resolver,\n        future: prom\n    });\n    return generator ? generator() // eslint-disable-next-line no-sequences\n    .then((value)=>(resolver(value), value)\n    ).catch((err)=>{\n        map.delete(key);\n        throw err;\n    }) : prom;\n}\nfunction hasPrefetch(link) {\n    try {\n        link = document.createElement(\"link\");\n        return(// with relList.support\n        (!!window.MSInputMethodContext && !!document.documentMode) || link.relList.supports(\"prefetch\"));\n    } catch (e) {\n        return false;\n    }\n}\nconst canPrefetch = hasPrefetch();\nfunction prefetchViaDom(href, as, link) {\n    return new Promise((res, rej)=>{\n        const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`;\n        if (document.querySelector(selector)) {\n            return res();\n        }\n        link = document.createElement(\"link\");\n        // The order of property assignment here is intentional:\n        if (as) link.as = as;\n        link.rel = `prefetch`;\n        link.crossOrigin = undefined;\n        link.onload = res;\n        link.onerror = rej;\n        // `href` should always be last:\n        link.href = href;\n        document.head.appendChild(link);\n    });\n}\nconst ASSET_LOAD_ERROR = Symbol(\"ASSET_LOAD_ERROR\");\nfunction markAssetError(err) {\n    return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\nfunction isAssetError(err) {\n    return err && ASSET_LOAD_ERROR in err;\n}\nfunction appendScript(src, script) {\n    return new Promise((resolve, reject)=>{\n        script = document.createElement(\"script\");\n        // The order of property assignment here is intentional.\n        // 1. Setup success/failure hooks in case the browser synchronously\n        //    executes when `src` is set.\n        script.onload = resolve;\n        script.onerror = ()=>reject(markAssetError(new Error(`Failed to load script: ${src}`)))\n        ;\n        // 2. Configure the cross-origin attribute before setting `src` in case the\n        //    browser begins to fetch.\n        script.crossOrigin = undefined;\n        // 3. Finally, set the source and inject into the DOM in case the child\n        //    must be appended for fetching to start.\n        script.src = src;\n        document.body.appendChild(script);\n    });\n}\n// We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\nlet devBuildPromise;\n// Resolve a promise that times out after given amount of milliseconds.\nfunction resolvePromiseWithTimeout(p, ms, err) {\n    return new Promise((resolve, reject)=>{\n        let cancelled = false;\n        p.then((r)=>{\n            // Resolved, cancel the timeout\n            cancelled = true;\n            resolve(r);\n        }).catch(reject);\n        // We wrap these checks separately for better dead-code elimination in\n        // production bundles.\n        if (true) {\n            (devBuildPromise || Promise.resolve()).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>setTimeout(()=>{\n                        if (!cancelled) {\n                            reject(err);\n                        }\n                    }, ms)\n                );\n            });\n        }\n        if (false) {}\n    });\n}\nfunction getClientBuildManifest() {\n    if (self.__BUILD_MANIFEST) {\n        return Promise.resolve(self.__BUILD_MANIFEST);\n    }\n    const onBuildManifest = new Promise((resolve)=>{\n        // Mandatory because this is not concurrent safe:\n        const cb = self.__BUILD_MANIFEST_CB;\n        self.__BUILD_MANIFEST_CB = ()=>{\n            resolve(self.__BUILD_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error(\"Failed to load client build manifest\")));\n}\nfunction getMiddlewareManifest() {\n    if (self.__MIDDLEWARE_MANIFEST) {\n        return Promise.resolve(self.__MIDDLEWARE_MANIFEST);\n    }\n    const onMiddlewareManifest = new Promise((resolve)=>{\n        const cb = self.__MIDDLEWARE_MANIFEST_CB;\n        self.__MIDDLEWARE_MANIFEST_CB = ()=>{\n            resolve(self.__MIDDLEWARE_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onMiddlewareManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error(\"Failed to load client middleware manifest\")));\n}\nfunction getFilesForRoute(assetPrefix, route) {\n    if (true) {\n        return Promise.resolve({\n            scripts: [\n                assetPrefix + \"/_next/static/chunks/pages\" + encodeURI((0, _getAssetPathFromRoute).default(route, \".js\")), \n            ],\n            // Styles are handled by `style-loader` in development:\n            css: []\n        });\n    }\n    return getClientBuildManifest().then((manifest)=>{\n        if (!(route in manifest)) {\n            throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n        }\n        const allFiles = manifest[route].map((entry)=>assetPrefix + \"/_next/\" + encodeURI(entry)\n        );\n        return {\n            scripts: allFiles.filter((v)=>v.endsWith(\".js\")\n            ),\n            css: allFiles.filter((v)=>v.endsWith(\".css\")\n            )\n        };\n    });\n}\nfunction createRouteLoader(assetPrefix) {\n    const entrypoints = new Map();\n    const loadedScripts = new Map();\n    const styleSheets = new Map();\n    const routes = new Map();\n    function maybeExecuteScript(src) {\n        // With HMR we might need to \"reload\" scripts when they are\n        // disposed and readded. Executing scripts twice has no functional\n        // differences\n        if (false) {} else {\n            return appendScript(src);\n        }\n    }\n    function fetchStyleSheet(href) {\n        let prom = styleSheets.get(href);\n        if (prom) {\n            return prom;\n        }\n        styleSheets.set(href, prom = fetch(href).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to load stylesheet: ${href}`);\n            }\n            return res.text().then((text)=>({\n                    href: href,\n                    content: text\n                })\n            );\n        }).catch((err)=>{\n            throw markAssetError(err);\n        }));\n        return prom;\n    }\n    return {\n        whenEntrypoint (route) {\n            return withFuture(route, entrypoints);\n        },\n        onEntrypoint (route, execute) {\n            (execute ? Promise.resolve().then(()=>execute()\n            ).then((exports)=>({\n                    component: exports && exports.default || exports,\n                    exports: exports\n                })\n            , (err)=>({\n                    error: err\n                })\n            ) : Promise.resolve(undefined)).then((input)=>{\n                const old = entrypoints.get(route);\n                if (old && \"resolve\" in old) {\n                    if (input) {\n                        entrypoints.set(route, input);\n                        old.resolve(input);\n                    }\n                } else {\n                    if (input) {\n                        entrypoints.set(route, input);\n                    } else {\n                        entrypoints.delete(route);\n                    }\n                    // when this entrypoint has been resolved before\n                    // the route is outdated and we want to invalidate\n                    // this cache entry\n                    routes.delete(route);\n                }\n            });\n        },\n        loadRoute (route, prefetch) {\n            return withFuture(route, routes, ()=>{\n                let devBuildPromiseResolve;\n                if (true) {\n                    devBuildPromise = new Promise((resolve)=>{\n                        devBuildPromiseResolve = resolve;\n                    });\n                }\n                return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then(({ scripts , css  })=>{\n                    return Promise.all([\n                        entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)),\n                        Promise.all(css.map(fetchStyleSheet)), \n                    ]);\n                }).then((res)=>{\n                    return this.whenEntrypoint(route).then((entrypoint)=>({\n                            entrypoint,\n                            styles: res[1]\n                        })\n                    );\n                }), MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route}`))).then(({ entrypoint , styles  })=>{\n                    const res = Object.assign({\n                        styles: styles\n                    }, entrypoint);\n                    return \"error\" in entrypoint ? entrypoint : res;\n                }).catch((err)=>{\n                    if (prefetch) {\n                        // we don't want to cache errors during prefetch\n                        throw err;\n                    }\n                    return {\n                        error: err\n                    };\n                }).finally(()=>{\n                    return devBuildPromiseResolve === null || devBuildPromiseResolve === void 0 ? void 0 : devBuildPromiseResolve();\n                });\n            });\n        },\n        prefetch (route) {\n            // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n            // License: Apache 2.0\n            let cn;\n            if (cn = navigator.connection) {\n                // Don't prefetch if using 2G or if Save-Data is enabled.\n                if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n            }\n            return getFilesForRoute(assetPrefix, route).then((output)=>Promise.all(canPrefetch ? output.scripts.map((script)=>prefetchViaDom(script, \"script\")\n                ) : [])\n            ).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>this.loadRoute(route, true).catch(()=>{})\n                );\n            }).catch(()=>{});\n        }\n    };\n} //# sourceMappingURL=route-loader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yb3V0ZS1sb2FkZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxLQUFLLEVBQUUsSUFBSTtDQUNkLEVBQUMsQ0FBQztBQUNIRCxzQkFBc0IsR0FBR0UsY0FBYyxDQUFDO0FBQ3hDRixvQkFBb0IsR0FBR0csWUFBWSxDQUFDO0FBQ3BDSCw4QkFBOEIsR0FBR0ksc0JBQXNCLENBQUM7QUFDeERKLDZCQUE2QixHQUFHSyxxQkFBcUIsQ0FBQztBQUN0REwseUJBQXlCLEdBQUdNLGlCQUFpQixDQUFDO0FBQzlDLElBQUlDLHNCQUFzQixHQUFHQyxzQkFBc0IsQ0FBQ0MsbUJBQU8sQ0FBQyxrSEFBc0QsQ0FBQyxDQUFDO0FBQ3BILElBQUlDLG9CQUFvQixHQUFHRCxtQkFBTyxDQUFDLHlGQUF5QixDQUFDO0FBQzdELFNBQVNELHNCQUFzQixDQUFDRyxHQUFHLEVBQUU7SUFDakMsT0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVUsR0FBR0QsR0FBRyxHQUFHO1FBQ2pDRSxPQUFPLEVBQUVGLEdBQUc7S0FDZixDQUFDO0NBQ0w7QUFDRCx1RUFBdUU7QUFDdkUseUVBQXlFO0FBQ3pFLDJFQUEyRTtBQUMzRSxvQ0FBb0M7QUFDcEMsTUFBTUcsaUJBQWlCLEdBQUcsSUFBSTtBQUM5QixTQUFTQyxVQUFVLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxTQUFTLEVBQUU7SUFDckMsSUFBSUMsS0FBSyxHQUFHRixHQUFHLENBQUNHLEdBQUcsQ0FBQ0osR0FBRyxDQUFDO0lBQ3hCLElBQUlHLEtBQUssRUFBRTtRQUNQLElBQUksUUFBUSxJQUFJQSxLQUFLLEVBQUU7WUFDbkIsT0FBT0EsS0FBSyxDQUFDRSxNQUFNLENBQUM7U0FDdkI7UUFDRCxPQUFPQyxPQUFPLENBQUNDLE9BQU8sQ0FBQ0osS0FBSyxDQUFDLENBQUM7S0FDakM7SUFDRCxJQUFJSyxRQUFRO0lBQ1osTUFBTUMsSUFBSSxHQUFHLElBQUlILE9BQU8sQ0FBQyxDQUFDQyxPQUFPLEdBQUc7UUFDaENDLFFBQVEsR0FBR0QsT0FBTyxDQUFDO0tBQ3RCLENBQUM7SUFDRk4sR0FBRyxDQUFDUyxHQUFHLENBQUNWLEdBQUcsRUFBRUcsS0FBSyxHQUFHO1FBQ2pCSSxPQUFPLEVBQUVDLFFBQVE7UUFDakJILE1BQU0sRUFBRUksSUFBSTtLQUNmLENBQUMsQ0FBQztJQUNILE9BQU9QLFNBQVMsR0FBR0EsU0FBUyxFQUFFLHlDQUF3QztLQUNyRVMsSUFBSSxDQUFDLENBQUMxQixLQUFLLEdBQUcsQ0FBQ3VCLFFBQVEsQ0FBQ3ZCLEtBQUssQ0FBQyxFQUFFQSxLQUFLLENBQUM7SUFBQSxDQUN0QyxDQUFDMkIsS0FBSyxDQUFDLENBQUNDLEdBQUcsR0FBRztRQUNYWixHQUFHLENBQUNhLE1BQU0sQ0FBQ2QsR0FBRyxDQUFDLENBQUM7UUFDaEIsTUFBTWEsR0FBRyxDQUFDO0tBQ2IsQ0FBQyxHQUFHSixJQUFJLENBQUM7Q0FDYjtBQUNELFNBQVNNLFdBQVcsQ0FBQ0MsSUFBSSxFQUFFO0lBQ3ZCLElBQUk7UUFDQUEsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN0QyxPQUNBLHVCQUF1QjtRQUN2QixDQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFDQyxvQkFBb0IsSUFBSSxDQUFDLENBQUNILFFBQVEsQ0FBQ0ksWUFBWSxDQUFDLElBQUlMLElBQUksQ0FBQ00sT0FBTyxDQUFDQyxRQUFRLENBQUMsVUFBVSxDQUFDLEVBQUU7S0FDcEcsQ0FBQyxPQUFPQyxDQUFDLEVBQUU7UUFDUixPQUFPLEtBQUssQ0FBQztLQUNoQjtDQUNKO0FBQ0QsTUFBTUMsV0FBVyxHQUFHVixXQUFXLEVBQUU7QUFDakMsU0FBU1csY0FBYyxDQUFDQyxJQUFJLEVBQUVDLEVBQUUsRUFBRVosSUFBSSxFQUFFO0lBQ3BDLE9BQU8sSUFBSVYsT0FBTyxDQUFDLENBQUN1QixHQUFHLEVBQUVDLEdBQUcsR0FBRztRQUMzQixNQUFNQyxRQUFRLEdBQUcsQ0FBQztrQ0FDUSxFQUFFSixJQUFJLENBQUM7aUNBQ1IsRUFBRUEsSUFBSSxDQUFDO21CQUNyQixFQUFFQSxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3JCLElBQUlWLFFBQVEsQ0FBQ2UsYUFBYSxDQUFDRCxRQUFRLENBQUMsRUFBRTtZQUNsQyxPQUFPRixHQUFHLEVBQUUsQ0FBQztTQUNoQjtRQUNEYixJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3RDLHdEQUF3RDtRQUN4RCxJQUFJVSxFQUFFLEVBQUVaLElBQUksQ0FBQ1ksRUFBRSxHQUFHQSxFQUFFLENBQUM7UUFDckJaLElBQUksQ0FBQ2lCLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RCakIsSUFBSSxDQUFDa0IsV0FBVyxHQUFHQyxTQUErQixDQUFDO1FBQ25EbkIsSUFBSSxDQUFDc0IsTUFBTSxHQUFHVCxHQUFHLENBQUM7UUFDbEJiLElBQUksQ0FBQ3VCLE9BQU8sR0FBR1QsR0FBRyxDQUFDO1FBQ25CLGdDQUFnQztRQUNoQ2QsSUFBSSxDQUFDVyxJQUFJLEdBQUdBLElBQUksQ0FBQztRQUNqQlYsUUFBUSxDQUFDdUIsSUFBSSxDQUFDQyxXQUFXLENBQUN6QixJQUFJLENBQUMsQ0FBQztLQUNuQyxDQUFDLENBQUM7Q0FDTjtBQUNELE1BQU0wQixnQkFBZ0IsR0FBR0MsTUFBTSxDQUFDLGtCQUFrQixDQUFDO0FBQ25ELFNBQVN6RCxjQUFjLENBQUMyQixHQUFHLEVBQUU7SUFDekIsT0FBTy9CLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDOEIsR0FBRyxFQUFFNkIsZ0JBQWdCLEVBQUUsRUFBRSxDQUFDLENBQUM7Q0FDM0Q7QUFDRCxTQUFTdkQsWUFBWSxDQUFDMEIsR0FBRyxFQUFFO0lBQ3ZCLE9BQU9BLEdBQUcsSUFBSTZCLGdCQUFnQixJQUFJN0IsR0FBRyxDQUFDO0NBQ3pDO0FBQ0QsU0FBUytCLFlBQVksQ0FBQ0MsR0FBRyxFQUFFQyxNQUFNLEVBQUU7SUFDL0IsT0FBTyxJQUFJeEMsT0FBTyxDQUFDLENBQUNDLE9BQU8sRUFBRXdDLE1BQU0sR0FBRztRQUNsQ0QsTUFBTSxHQUFHN0IsUUFBUSxDQUFDQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDMUMsd0RBQXdEO1FBQ3hELG1FQUFtRTtRQUNuRSxpQ0FBaUM7UUFDakM0QixNQUFNLENBQUNSLE1BQU0sR0FBRy9CLE9BQU8sQ0FBQztRQUN4QnVDLE1BQU0sQ0FBQ1AsT0FBTyxHQUFHLElBQUlRLE1BQU0sQ0FBQzdELGNBQWMsQ0FBQyxJQUFJOEQsS0FBSyxDQUFDLENBQUMsdUJBQXVCLEVBQUVILEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQUEsQ0FDdEY7UUFDRCwyRUFBMkU7UUFDM0UsOEJBQThCO1FBQzlCQyxNQUFNLENBQUNaLFdBQVcsR0FBR0MsU0FBK0IsQ0FBQztRQUNyRCx1RUFBdUU7UUFDdkUsNkNBQTZDO1FBQzdDVyxNQUFNLENBQUNELEdBQUcsR0FBR0EsR0FBRyxDQUFDO1FBQ2pCNUIsUUFBUSxDQUFDZ0MsSUFBSSxDQUFDUixXQUFXLENBQUNLLE1BQU0sQ0FBQyxDQUFDO0tBQ3JDLENBQUMsQ0FBQztDQUNOO0FBQ0QsNEVBQTRFO0FBQzVFLHFFQUFxRTtBQUNyRSxJQUFJSSxlQUFlO0FBQ25CLHVFQUF1RTtBQUN2RSxTQUFTQyx5QkFBeUIsQ0FBQ0MsQ0FBQyxFQUFFQyxFQUFFLEVBQUV4QyxHQUFHLEVBQUU7SUFDM0MsT0FBTyxJQUFJUCxPQUFPLENBQUMsQ0FBQ0MsT0FBTyxFQUFFd0MsTUFBTSxHQUFHO1FBQ2xDLElBQUlPLFNBQVMsR0FBRyxLQUFLO1FBQ3JCRixDQUFDLENBQUN6QyxJQUFJLENBQUMsQ0FBQzRDLENBQUMsR0FBRztZQUNSLCtCQUErQjtZQUMvQkQsU0FBUyxHQUFHLElBQUksQ0FBQztZQUNqQi9DLE9BQU8sQ0FBQ2dELENBQUMsQ0FBQyxDQUFDO1NBQ2QsQ0FBQyxDQUFDM0MsS0FBSyxDQUFDbUMsTUFBTSxDQUFDLENBQUM7UUFDakIsc0VBQXNFO1FBQ3RFLHNCQUFzQjtRQUN0QixJQUFJWixJQUFzQyxFQUFFO1lBQ3hDLENBQUNlLGVBQWUsSUFBSTVDLE9BQU8sQ0FBQ0MsT0FBTyxFQUFFLENBQUMsQ0FBQ0ksSUFBSSxDQUFDLElBQUk7Z0JBQzVDLENBQUMsQ0FBQyxFQUFFakIsb0JBQW9CLENBQUMsQ0FBQzhELG1CQUFtQixDQUFDLElBQUlDLFVBQVUsQ0FBQyxJQUFJO3dCQUN6RCxJQUFJLENBQUNILFNBQVMsRUFBRTs0QkFDWlAsTUFBTSxDQUFDbEMsR0FBRyxDQUFDLENBQUM7eUJBQ2Y7cUJBQ0osRUFBRXdDLEVBQUUsQ0FBQztnQkFBQSxDQUNULENBQUM7YUFDTCxDQUFDLENBQUM7U0FDTjtRQUNELElBQUlsQixLQUFzQyxFQUFFLEVBTzNDO0tBQ0osQ0FBQyxDQUFDO0NBQ047QUFDRCxTQUFTL0Msc0JBQXNCLEdBQUc7SUFDOUIsSUFBSXNFLElBQUksQ0FBQ0MsZ0JBQWdCLEVBQUU7UUFDdkIsT0FBT3JELE9BQU8sQ0FBQ0MsT0FBTyxDQUFDbUQsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQyxDQUFDO0tBQ2pEO0lBQ0QsTUFBTUMsZUFBZSxHQUFHLElBQUl0RCxPQUFPLENBQUMsQ0FBQ0MsT0FBTyxHQUFHO1FBQzNDLGlEQUFpRDtRQUNqRCxNQUFNc0QsRUFBRSxHQUFHSCxJQUFJLENBQUNJLG1CQUFtQjtRQUNuQ0osSUFBSSxDQUFDSSxtQkFBbUIsR0FBRyxJQUFJO1lBQzNCdkQsT0FBTyxDQUFDbUQsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBQy9CRSxFQUFFLElBQUlBLEVBQUUsRUFBRSxDQUFDO1NBQ2QsQ0FBQztLQUNMLENBQUM7SUFDRixPQUFPVix5QkFBeUIsQ0FBQ1MsZUFBZSxFQUFFOUQsaUJBQWlCLEVBQUVaLGNBQWMsQ0FBQyxJQUFJOEQsS0FBSyxDQUFDLHNDQUFzQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0NBQzNJO0FBQ0QsU0FBUzNELHFCQUFxQixHQUFHO0lBQzdCLElBQUlxRSxJQUFJLENBQUNLLHFCQUFxQixFQUFFO1FBQzVCLE9BQU96RCxPQUFPLENBQUNDLE9BQU8sQ0FBQ21ELElBQUksQ0FBQ0sscUJBQXFCLENBQUMsQ0FBQztLQUN0RDtJQUNELE1BQU1DLG9CQUFvQixHQUFHLElBQUkxRCxPQUFPLENBQUMsQ0FBQ0MsT0FBTyxHQUFHO1FBQ2hELE1BQU1zRCxFQUFFLEdBQUdILElBQUksQ0FBQ08sd0JBQXdCO1FBQ3hDUCxJQUFJLENBQUNPLHdCQUF3QixHQUFHLElBQUk7WUFDaEMxRCxPQUFPLENBQUNtRCxJQUFJLENBQUNLLHFCQUFxQixDQUFDLENBQUM7WUFDcENGLEVBQUUsSUFBSUEsRUFBRSxFQUFFLENBQUM7U0FDZCxDQUFDO0tBQ0wsQ0FBQztJQUNGLE9BQU9WLHlCQUF5QixDQUFDYSxvQkFBb0IsRUFBRWxFLGlCQUFpQixFQUFFWixjQUFjLENBQUMsSUFBSThELEtBQUssQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDLENBQUMsQ0FBQztDQUNySjtBQUNELFNBQVNrQixnQkFBZ0IsQ0FBQ0MsV0FBVyxFQUFFQyxLQUFLLEVBQUU7SUFDMUMsSUFBSWpDLElBQXNDLEVBQUU7UUFDeEMsT0FBTzdCLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDO1lBQ25COEQsT0FBTyxFQUFFO2dCQUNMRixXQUFXLEdBQUcsNEJBQTRCLEdBQUdHLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRS9FLHNCQUFzQixDQUFDLENBQUNNLE9BQU8sQ0FBQ3VFLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQzthQUM1RztZQUNELHVEQUF1RDtZQUN2REcsR0FBRyxFQUFFLEVBQUU7U0FDVixDQUFDLENBQUM7S0FDTjtJQUNELE9BQU9uRixzQkFBc0IsRUFBRSxDQUFDdUIsSUFBSSxDQUFDLENBQUM2RCxRQUFRLEdBQUc7UUFDN0MsSUFBSSxDQUFDLENBQUNKLEtBQUssSUFBSUksUUFBUSxDQUFDLEVBQUU7WUFDdEIsTUFBTXRGLGNBQWMsQ0FBQyxJQUFJOEQsS0FBSyxDQUFDLENBQUMsd0JBQXdCLEVBQUVvQixLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN2RTtRQUNELE1BQU1LLFFBQVEsR0FBR0QsUUFBUSxDQUFDSixLQUFLLENBQUMsQ0FBQ25FLEdBQUcsQ0FBQyxDQUFDRSxLQUFLLEdBQUdnRSxXQUFXLEdBQUcsU0FBUyxHQUFHRyxTQUFTLENBQUNuRSxLQUFLLENBQUM7UUFBQSxDQUN2RjtRQUNELE9BQU87WUFDSGtFLE9BQU8sRUFBRUksUUFBUSxDQUFDQyxNQUFNLENBQUMsQ0FBQ0MsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLFFBQVEsQ0FBQyxLQUFLLENBQUM7WUFBQSxDQUM5QztZQUNETCxHQUFHLEVBQUVFLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDLENBQUNDLENBQUMsR0FBR0EsQ0FBQyxDQUFDQyxRQUFRLENBQUMsTUFBTSxDQUFDO1lBQUEsQ0FDM0M7U0FDSixDQUFDO0tBQ0wsQ0FBQyxDQUFDO0NBQ047QUFDRCxTQUFTdEYsaUJBQWlCLENBQUM2RSxXQUFXLEVBQUU7SUFDcEMsTUFBTVUsV0FBVyxHQUFHLElBQUlDLEdBQUcsRUFBRTtJQUM3QixNQUFNQyxhQUFhLEdBQUcsSUFBSUQsR0FBRyxFQUFFO0lBQy9CLE1BQU1FLFdBQVcsR0FBRyxJQUFJRixHQUFHLEVBQUU7SUFDN0IsTUFBTUcsTUFBTSxHQUFHLElBQUlILEdBQUcsRUFBRTtJQUN4QixTQUFTSSxrQkFBa0IsQ0FBQ3JDLEdBQUcsRUFBRTtRQUM3QiwyREFBMkQ7UUFDM0Qsa0VBQWtFO1FBQ2xFLGNBQWM7UUFDZCxJQUFJVixLQUFzQyxFQUFFLEVBVzNDLE1BQU07WUFDSCxPQUFPUyxZQUFZLENBQUNDLEdBQUcsQ0FBQyxDQUFDO1NBQzVCO0tBQ0o7SUFDRCxTQUFTc0MsZUFBZSxDQUFDeEQsSUFBSSxFQUFFO1FBQzNCLElBQUlsQixJQUFJLEdBQUd1RSxXQUFXLENBQUM1RSxHQUFHLENBQUN1QixJQUFJLENBQUM7UUFDaEMsSUFBSWxCLElBQUksRUFBRTtZQUNOLE9BQU9BLElBQUksQ0FBQztTQUNmO1FBQ0R1RSxXQUFXLENBQUN0RSxHQUFHLENBQUNpQixJQUFJLEVBQUVsQixJQUFJLEdBQUcyRSxLQUFLLENBQUN6RCxJQUFJLENBQUMsQ0FBQ2hCLElBQUksQ0FBQyxDQUFDa0IsR0FBRyxHQUFHO1lBQ2pELElBQUksQ0FBQ0EsR0FBRyxDQUFDd0QsRUFBRSxFQUFFO2dCQUNULE1BQU0sSUFBSXJDLEtBQUssQ0FBQyxDQUFDLDJCQUEyQixFQUFFckIsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3pEO1lBQ0QsT0FBT0UsR0FBRyxDQUFDeUQsSUFBSSxFQUFFLENBQUMzRSxJQUFJLENBQUMsQ0FBQzJFLElBQUksR0FBRyxDQUFDO29CQUN4QjNELElBQUksRUFBRUEsSUFBSTtvQkFDVjRELE9BQU8sRUFBRUQsSUFBSTtpQkFDaEIsQ0FBQztZQUFBLENBQ0wsQ0FBQztTQUNMLENBQUMsQ0FBQzFFLEtBQUssQ0FBQyxDQUFDQyxHQUFHLEdBQUc7WUFDWixNQUFNM0IsY0FBYyxDQUFDMkIsR0FBRyxDQUFDLENBQUM7U0FDN0IsQ0FBQyxDQUFDLENBQUM7UUFDSixPQUFPSixJQUFJLENBQUM7S0FDZjtJQUNELE9BQU87UUFDSCtFLGNBQWMsRUFBRXBCLEtBQUssRUFBRTtZQUNuQixPQUFPckUsVUFBVSxDQUFDcUUsS0FBSyxFQUFFUyxXQUFXLENBQUMsQ0FBQztTQUN6QztRQUNEWSxZQUFZLEVBQUVyQixLQUFLLEVBQUVzQixPQUFPLEVBQUU7WUFDMUIsQ0FBQ0EsT0FBTyxHQUFHcEYsT0FBTyxDQUFDQyxPQUFPLEVBQUUsQ0FBQ0ksSUFBSSxDQUFDLElBQUkrRSxPQUFPLEVBQUU7WUFBQSxDQUM5QyxDQUFDL0UsSUFBSSxDQUFDLENBQUMzQixPQUFPLEdBQUcsQ0FBQztvQkFDWDJHLFNBQVMsRUFBRTNHLE9BQU8sSUFBSUEsT0FBTyxDQUFDYSxPQUFPLElBQUliLE9BQU87b0JBQ2hEQSxPQUFPLEVBQUVBLE9BQU87aUJBQ25CLENBQUM7WUFBQSxFQUNKLENBQUM2QixHQUFHLEdBQUcsQ0FBQztvQkFDRitFLEtBQUssRUFBRS9FLEdBQUc7aUJBQ2IsQ0FBQztZQUFBLENBQ0wsR0FBR1AsT0FBTyxDQUFDQyxPQUFPLENBQUNzRixTQUFTLENBQUMsQ0FBQyxDQUFDbEYsSUFBSSxDQUFDLENBQUNtRixLQUFLLEdBQUc7Z0JBQzFDLE1BQU1DLEdBQUcsR0FBR2xCLFdBQVcsQ0FBQ3pFLEdBQUcsQ0FBQ2dFLEtBQUssQ0FBQztnQkFDbEMsSUFBSTJCLEdBQUcsSUFBSSxTQUFTLElBQUlBLEdBQUcsRUFBRTtvQkFDekIsSUFBSUQsS0FBSyxFQUFFO3dCQUNQakIsV0FBVyxDQUFDbkUsR0FBRyxDQUFDMEQsS0FBSyxFQUFFMEIsS0FBSyxDQUFDLENBQUM7d0JBQzlCQyxHQUFHLENBQUN4RixPQUFPLENBQUN1RixLQUFLLENBQUMsQ0FBQztxQkFDdEI7aUJBQ0osTUFBTTtvQkFDSCxJQUFJQSxLQUFLLEVBQUU7d0JBQ1BqQixXQUFXLENBQUNuRSxHQUFHLENBQUMwRCxLQUFLLEVBQUUwQixLQUFLLENBQUMsQ0FBQztxQkFDakMsTUFBTTt3QkFDSGpCLFdBQVcsQ0FBQy9ELE1BQU0sQ0FBQ3NELEtBQUssQ0FBQyxDQUFDO3FCQUM3QjtvQkFDRCxnREFBZ0Q7b0JBQ2hELGtEQUFrRDtvQkFDbEQsbUJBQW1CO29CQUNuQmEsTUFBTSxDQUFDbkUsTUFBTSxDQUFDc0QsS0FBSyxDQUFDLENBQUM7aUJBQ3hCO2FBQ0osQ0FBQyxDQUFDO1NBQ047UUFDRDRCLFNBQVMsRUFBRTVCLEtBQUssRUFBRTZCLFFBQVEsRUFBRTtZQUN4QixPQUFPbEcsVUFBVSxDQUFDcUUsS0FBSyxFQUFFYSxNQUFNLEVBQUUsSUFBSTtnQkFDakMsSUFBSWlCLHNCQUFzQjtnQkFDMUIsSUFBSS9ELElBQXNDLEVBQUU7b0JBQ3hDZSxlQUFlLEdBQUcsSUFBSTVDLE9BQU8sQ0FBQyxDQUFDQyxPQUFPLEdBQUc7d0JBQ3JDMkYsc0JBQXNCLEdBQUczRixPQUFPLENBQUM7cUJBQ3BDLENBQUMsQ0FBQztpQkFDTjtnQkFDRCxPQUFPNEMseUJBQXlCLENBQUNlLGdCQUFnQixDQUFDQyxXQUFXLEVBQUVDLEtBQUssQ0FBQyxDQUFDekQsSUFBSSxDQUFDLENBQUMsRUFBRTBELE9BQU8sR0FBR0UsR0FBRyxHQUFHLEdBQUc7b0JBQzdGLE9BQU9qRSxPQUFPLENBQUM2RixHQUFHLENBQUM7d0JBQ2Z0QixXQUFXLENBQUN1QixHQUFHLENBQUNoQyxLQUFLLENBQUMsR0FBRyxFQUFFLEdBQUc5RCxPQUFPLENBQUM2RixHQUFHLENBQUM5QixPQUFPLENBQUNwRSxHQUFHLENBQUNpRixrQkFBa0IsQ0FBQyxDQUFDO3dCQUMxRTVFLE9BQU8sQ0FBQzZGLEdBQUcsQ0FBQzVCLEdBQUcsQ0FBQ3RFLEdBQUcsQ0FBQ2tGLGVBQWUsQ0FBQyxDQUFDO3FCQUN4QyxDQUFDLENBQUM7aUJBQ04sQ0FBQyxDQUFDeEUsSUFBSSxDQUFDLENBQUNrQixHQUFHLEdBQUc7b0JBQ1gsT0FBTyxJQUFJLENBQUMyRCxjQUFjLENBQUNwQixLQUFLLENBQUMsQ0FBQ3pELElBQUksQ0FBQyxDQUFDMEYsVUFBVSxHQUFHLENBQUM7NEJBQzlDQSxVQUFVOzRCQUNWQyxNQUFNLEVBQUV6RSxHQUFHLENBQUMsQ0FBQyxDQUFDO3lCQUNqQixDQUFDO29CQUFBLENBQ0wsQ0FBQztpQkFDTCxDQUFDLEVBQUUvQixpQkFBaUIsRUFBRVosY0FBYyxDQUFDLElBQUk4RCxLQUFLLENBQUMsQ0FBQyxnQ0FBZ0MsRUFBRW9CLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUN6RCxJQUFJLENBQUMsQ0FBQyxFQUFFMEYsVUFBVSxHQUFHQyxNQUFNLEdBQUcsR0FBRztvQkFDM0gsTUFBTXpFLEdBQUcsR0FBRy9DLE1BQU0sQ0FBQ3lILE1BQU0sQ0FBQzt3QkFDdEJELE1BQU0sRUFBRUEsTUFBTTtxQkFDakIsRUFBRUQsVUFBVSxDQUFDO29CQUNkLE9BQU8sT0FBTyxJQUFJQSxVQUFVLEdBQUdBLFVBQVUsR0FBR3hFLEdBQUcsQ0FBQztpQkFDbkQsQ0FBQyxDQUFDakIsS0FBSyxDQUFDLENBQUNDLEdBQUcsR0FBRztvQkFDWixJQUFJb0YsUUFBUSxFQUFFO3dCQUNWLGdEQUFnRDt3QkFDaEQsTUFBTXBGLEdBQUcsQ0FBQztxQkFDYjtvQkFDRCxPQUFPO3dCQUNIK0UsS0FBSyxFQUFFL0UsR0FBRztxQkFDYixDQUFDO2lCQUNMLENBQUMsQ0FBQzJGLE9BQU8sQ0FBQyxJQUFJO29CQUNYLE9BQU9OLHNCQUFzQixLQUFLLElBQUksSUFBSUEsc0JBQXNCLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdBLHNCQUFzQixFQUFFLENBQUM7aUJBQ25ILENBQUMsQ0FBQzthQUNOLENBQUMsQ0FBQztTQUNOO1FBQ0RELFFBQVEsRUFBRTdCLEtBQUssRUFBRTtZQUNiLHNIQUFzSDtZQUN0SCxzQkFBc0I7WUFDdEIsSUFBSXFDLEVBQUU7WUFDTixJQUFJQSxFQUFFLEdBQUdDLFNBQVMsQ0FBQ0MsVUFBVSxFQUFFO2dCQUMzQix5REFBeUQ7Z0JBQ3pELElBQUlGLEVBQUUsQ0FBQ0csUUFBUSxJQUFJLEtBQUtDLElBQUksQ0FBQ0osRUFBRSxDQUFDSyxhQUFhLENBQUMsRUFBRSxPQUFPeEcsT0FBTyxDQUFDQyxPQUFPLEVBQUUsQ0FBQzthQUM1RTtZQUNELE9BQU8yRCxnQkFBZ0IsQ0FBQ0MsV0FBVyxFQUFFQyxLQUFLLENBQUMsQ0FBQ3pELElBQUksQ0FBQyxDQUFDb0csTUFBTSxHQUFHekcsT0FBTyxDQUFDNkYsR0FBRyxDQUFDMUUsV0FBVyxHQUFHc0YsTUFBTSxDQUFDMUMsT0FBTyxDQUFDcEUsR0FBRyxDQUFDLENBQUM2QyxNQUFNLEdBQUdwQixjQUFjLENBQUNvQixNQUFNLEVBQUUsUUFBUSxDQUFDO2dCQUFBLENBQzdJLEdBQUcsRUFBRSxDQUFDO1lBQUEsQ0FDVixDQUFDbkMsSUFBSSxDQUFDLElBQUk7Z0JBQ1AsQ0FBQyxDQUFDLEVBQUVqQixvQkFBb0IsQ0FBQyxDQUFDOEQsbUJBQW1CLENBQUMsSUFBSSxJQUFJLENBQUN3QyxTQUFTLENBQUM1QixLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUN4RCxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQUEsQ0FDMUYsQ0FBQzthQUNMLENBQUMsQ0FBQ0EsS0FBSyxDQUNSLElBQUksRUFBRSxDQUFDLENBQUM7U0FDWDtLQUNKLENBQUM7Q0FDTCxDQUVELHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2dlbS1mYXJtLXVpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcm91dGUtbG9hZGVyLmpzP2VhMzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLm1hcmtBc3NldEVycm9yID0gbWFya0Fzc2V0RXJyb3I7XG5leHBvcnRzLmlzQXNzZXRFcnJvciA9IGlzQXNzZXRFcnJvcjtcbmV4cG9ydHMuZ2V0Q2xpZW50QnVpbGRNYW5pZmVzdCA9IGdldENsaWVudEJ1aWxkTWFuaWZlc3Q7XG5leHBvcnRzLmdldE1pZGRsZXdhcmVNYW5pZmVzdCA9IGdldE1pZGRsZXdhcmVNYW5pZmVzdDtcbmV4cG9ydHMuY3JlYXRlUm91dGVMb2FkZXIgPSBjcmVhdGVSb3V0ZUxvYWRlcjtcbnZhciBfZ2V0QXNzZXRQYXRoRnJvbVJvdXRlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LWFzc2V0LXBhdGgtZnJvbS1yb3V0ZVwiKSk7XG52YXIgX3JlcXVlc3RJZGxlQ2FsbGJhY2sgPSByZXF1aXJlKFwiLi9yZXF1ZXN0LWlkbGUtY2FsbGJhY2tcIik7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG4vLyAzLjhzIHdhcyBhcmJpdHJhcmlseSBjaG9zZW4gYXMgaXQncyB3aGF0IGh0dHBzOi8vd2ViLmRldi9pbnRlcmFjdGl2ZVxuLy8gY29uc2lkZXJzIGFzIFwiR29vZFwiIHRpbWUtdG8taW50ZXJhY3RpdmUuIFdlIG11c3QgYXNzdW1lIHNvbWV0aGluZyB3ZW50XG4vLyB3cm9uZyBiZXlvbmQgdGhpcyBwb2ludCwgYW5kIHRoZW4gZmFsbC1iYWNrIHRvIGEgZnVsbCBwYWdlIHRyYW5zaXRpb24gdG9cbi8vIHNob3cgdGhlIHVzZXIgc29tZXRoaW5nIG9mIHZhbHVlLlxuY29uc3QgTVNfTUFYX0lETEVfREVMQVkgPSAzODAwO1xuZnVuY3Rpb24gd2l0aEZ1dHVyZShrZXksIG1hcCwgZ2VuZXJhdG9yKSB7XG4gICAgbGV0IGVudHJ5ID0gbWFwLmdldChrZXkpO1xuICAgIGlmIChlbnRyeSkge1xuICAgICAgICBpZiAoJ2Z1dHVyZScgaW4gZW50cnkpIHtcbiAgICAgICAgICAgIHJldHVybiBlbnRyeS5mdXR1cmU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShlbnRyeSk7XG4gICAgfVxuICAgIGxldCByZXNvbHZlcjtcbiAgICBjb25zdCBwcm9tID0gbmV3IFByb21pc2UoKHJlc29sdmUpPT57XG4gICAgICAgIHJlc29sdmVyID0gcmVzb2x2ZTtcbiAgICB9KTtcbiAgICBtYXAuc2V0KGtleSwgZW50cnkgPSB7XG4gICAgICAgIHJlc29sdmU6IHJlc29sdmVyLFxuICAgICAgICBmdXR1cmU6IHByb21cbiAgICB9KTtcbiAgICByZXR1cm4gZ2VuZXJhdG9yID8gZ2VuZXJhdG9yKCkvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VxdWVuY2VzXG4gICAgLnRoZW4oKHZhbHVlKT0+KHJlc29sdmVyKHZhbHVlKSwgdmFsdWUpXG4gICAgKS5jYXRjaCgoZXJyKT0+e1xuICAgICAgICBtYXAuZGVsZXRlKGtleSk7XG4gICAgICAgIHRocm93IGVycjtcbiAgICB9KSA6IHByb207XG59XG5mdW5jdGlvbiBoYXNQcmVmZXRjaChsaW5rKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpbmsnKTtcbiAgICAgICAgcmV0dXJuKC8vIGRldGVjdCBJRTExIHNpbmNlIGl0IHN1cHBvcnRzIHByZWZldGNoIGJ1dCBpc24ndCBkZXRlY3RlZFxuICAgICAgICAvLyB3aXRoIHJlbExpc3Quc3VwcG9ydFxuICAgICAgICAoISF3aW5kb3cuTVNJbnB1dE1ldGhvZENvbnRleHQgJiYgISFkb2N1bWVudC5kb2N1bWVudE1vZGUpIHx8IGxpbmsucmVsTGlzdC5zdXBwb3J0cygncHJlZmV0Y2gnKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuY29uc3QgY2FuUHJlZmV0Y2ggPSBoYXNQcmVmZXRjaCgpO1xuZnVuY3Rpb24gcHJlZmV0Y2hWaWFEb20oaHJlZiwgYXMsIGxpbmspIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlcywgcmVqKT0+e1xuICAgICAgICBjb25zdCBzZWxlY3RvciA9IGBcbiAgICAgIGxpbmtbcmVsPVwicHJlZmV0Y2hcIl1baHJlZl49XCIke2hyZWZ9XCJdLFxuICAgICAgbGlua1tyZWw9XCJwcmVsb2FkXCJdW2hyZWZePVwiJHtocmVmfVwiXSxcbiAgICAgIHNjcmlwdFtzcmNePVwiJHtocmVmfVwiXWA7XG4gICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlcygpO1xuICAgICAgICB9XG4gICAgICAgIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaW5rJyk7XG4gICAgICAgIC8vIFRoZSBvcmRlciBvZiBwcm9wZXJ0eSBhc3NpZ25tZW50IGhlcmUgaXMgaW50ZW50aW9uYWw6XG4gICAgICAgIGlmIChhcykgbGluay5hcyA9IGFzO1xuICAgICAgICBsaW5rLnJlbCA9IGBwcmVmZXRjaGA7XG4gICAgICAgIGxpbmsuY3Jvc3NPcmlnaW4gPSBwcm9jZXNzLmVudi5fX05FWFRfQ1JPU1NfT1JJR0lOO1xuICAgICAgICBsaW5rLm9ubG9hZCA9IHJlcztcbiAgICAgICAgbGluay5vbmVycm9yID0gcmVqO1xuICAgICAgICAvLyBgaHJlZmAgc2hvdWxkIGFsd2F5cyBiZSBsYXN0OlxuICAgICAgICBsaW5rLmhyZWYgPSBocmVmO1xuICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGxpbmspO1xuICAgIH0pO1xufVxuY29uc3QgQVNTRVRfTE9BRF9FUlJPUiA9IFN5bWJvbCgnQVNTRVRfTE9BRF9FUlJPUicpO1xuZnVuY3Rpb24gbWFya0Fzc2V0RXJyb3IoZXJyKSB7XG4gICAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlcnIsIEFTU0VUX0xPQURfRVJST1IsIHt9KTtcbn1cbmZ1bmN0aW9uIGlzQXNzZXRFcnJvcihlcnIpIHtcbiAgICByZXR1cm4gZXJyICYmIEFTU0VUX0xPQURfRVJST1IgaW4gZXJyO1xufVxuZnVuY3Rpb24gYXBwZW5kU2NyaXB0KHNyYywgc2NyaXB0KSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpPT57XG4gICAgICAgIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgICAgICAvLyBUaGUgb3JkZXIgb2YgcHJvcGVydHkgYXNzaWdubWVudCBoZXJlIGlzIGludGVudGlvbmFsLlxuICAgICAgICAvLyAxLiBTZXR1cCBzdWNjZXNzL2ZhaWx1cmUgaG9va3MgaW4gY2FzZSB0aGUgYnJvd3NlciBzeW5jaHJvbm91c2x5XG4gICAgICAgIC8vICAgIGV4ZWN1dGVzIHdoZW4gYHNyY2AgaXMgc2V0LlxuICAgICAgICBzY3JpcHQub25sb2FkID0gcmVzb2x2ZTtcbiAgICAgICAgc2NyaXB0Lm9uZXJyb3IgPSAoKT0+cmVqZWN0KG1hcmtBc3NldEVycm9yKG5ldyBFcnJvcihgRmFpbGVkIHRvIGxvYWQgc2NyaXB0OiAke3NyY31gKSkpXG4gICAgICAgIDtcbiAgICAgICAgLy8gMi4gQ29uZmlndXJlIHRoZSBjcm9zcy1vcmlnaW4gYXR0cmlidXRlIGJlZm9yZSBzZXR0aW5nIGBzcmNgIGluIGNhc2UgdGhlXG4gICAgICAgIC8vICAgIGJyb3dzZXIgYmVnaW5zIHRvIGZldGNoLlxuICAgICAgICBzY3JpcHQuY3Jvc3NPcmlnaW4gPSBwcm9jZXNzLmVudi5fX05FWFRfQ1JPU1NfT1JJR0lOO1xuICAgICAgICAvLyAzLiBGaW5hbGx5LCBzZXQgdGhlIHNvdXJjZSBhbmQgaW5qZWN0IGludG8gdGhlIERPTSBpbiBjYXNlIHRoZSBjaGlsZFxuICAgICAgICAvLyAgICBtdXN0IGJlIGFwcGVuZGVkIGZvciBmZXRjaGluZyB0byBzdGFydC5cbiAgICAgICAgc2NyaXB0LnNyYyA9IHNyYztcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICAgIH0pO1xufVxuLy8gV2Ugd2FpdCBmb3IgcGFnZXMgdG8gYmUgYnVpbHQgaW4gZGV2IGJlZm9yZSB3ZSBzdGFydCB0aGUgcm91dGUgdHJhbnNpdGlvblxuLy8gdGltZW91dCB0byBwcmV2ZW50IGFuIHVuLW5lY2Vzc2FyeSBoYXJkIG5hdmlnYXRpb24gaW4gZGV2ZWxvcG1lbnQuXG5sZXQgZGV2QnVpbGRQcm9taXNlO1xuLy8gUmVzb2x2ZSBhIHByb21pc2UgdGhhdCB0aW1lcyBvdXQgYWZ0ZXIgZ2l2ZW4gYW1vdW50IG9mIG1pbGxpc2Vjb25kcy5cbmZ1bmN0aW9uIHJlc29sdmVQcm9taXNlV2l0aFRpbWVvdXQocCwgbXMsIGVycikge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KT0+e1xuICAgICAgICBsZXQgY2FuY2VsbGVkID0gZmFsc2U7XG4gICAgICAgIHAudGhlbigocik9PntcbiAgICAgICAgICAgIC8vIFJlc29sdmVkLCBjYW5jZWwgdGhlIHRpbWVvdXRcbiAgICAgICAgICAgIGNhbmNlbGxlZCA9IHRydWU7XG4gICAgICAgICAgICByZXNvbHZlKHIpO1xuICAgICAgICB9KS5jYXRjaChyZWplY3QpO1xuICAgICAgICAvLyBXZSB3cmFwIHRoZXNlIGNoZWNrcyBzZXBhcmF0ZWx5IGZvciBiZXR0ZXIgZGVhZC1jb2RlIGVsaW1pbmF0aW9uIGluXG4gICAgICAgIC8vIHByb2R1Y3Rpb24gYnVuZGxlcy5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICAgICAgICAoZGV2QnVpbGRQcm9taXNlIHx8IFByb21pc2UucmVzb2x2ZSgpKS50aGVuKCgpPT57XG4gICAgICAgICAgICAgICAgKDAsIF9yZXF1ZXN0SWRsZUNhbGxiYWNrKS5yZXF1ZXN0SWRsZUNhbGxiYWNrKCgpPT5zZXRUaW1lb3V0KCgpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWNhbmNlbGxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LCBtcylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICAgICAgICAoMCwgX3JlcXVlc3RJZGxlQ2FsbGJhY2spLnJlcXVlc3RJZGxlQ2FsbGJhY2soKCk9PnNldFRpbWVvdXQoKCk9PntcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjYW5jZWxsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgbXMpXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5mdW5jdGlvbiBnZXRDbGllbnRCdWlsZE1hbmlmZXN0KCkge1xuICAgIGlmIChzZWxmLl9fQlVJTERfTUFOSUZFU1QpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShzZWxmLl9fQlVJTERfTUFOSUZFU1QpO1xuICAgIH1cbiAgICBjb25zdCBvbkJ1aWxkTWFuaWZlc3QgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSk9PntcbiAgICAgICAgLy8gTWFuZGF0b3J5IGJlY2F1c2UgdGhpcyBpcyBub3QgY29uY3VycmVudCBzYWZlOlxuICAgICAgICBjb25zdCBjYiA9IHNlbGYuX19CVUlMRF9NQU5JRkVTVF9DQjtcbiAgICAgICAgc2VsZi5fX0JVSUxEX01BTklGRVNUX0NCID0gKCk9PntcbiAgICAgICAgICAgIHJlc29sdmUoc2VsZi5fX0JVSUxEX01BTklGRVNUKTtcbiAgICAgICAgICAgIGNiICYmIGNiKCk7XG4gICAgICAgIH07XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc29sdmVQcm9taXNlV2l0aFRpbWVvdXQob25CdWlsZE1hbmlmZXN0LCBNU19NQVhfSURMRV9ERUxBWSwgbWFya0Fzc2V0RXJyb3IobmV3IEVycm9yKCdGYWlsZWQgdG8gbG9hZCBjbGllbnQgYnVpbGQgbWFuaWZlc3QnKSkpO1xufVxuZnVuY3Rpb24gZ2V0TWlkZGxld2FyZU1hbmlmZXN0KCkge1xuICAgIGlmIChzZWxmLl9fTUlERExFV0FSRV9NQU5JRkVTVCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHNlbGYuX19NSURETEVXQVJFX01BTklGRVNUKTtcbiAgICB9XG4gICAgY29uc3Qgb25NaWRkbGV3YXJlTWFuaWZlc3QgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSk9PntcbiAgICAgICAgY29uc3QgY2IgPSBzZWxmLl9fTUlERExFV0FSRV9NQU5JRkVTVF9DQjtcbiAgICAgICAgc2VsZi5fX01JRERMRVdBUkVfTUFOSUZFU1RfQ0IgPSAoKT0+e1xuICAgICAgICAgICAgcmVzb2x2ZShzZWxmLl9fTUlERExFV0FSRV9NQU5JRkVTVCk7XG4gICAgICAgICAgICBjYiAmJiBjYigpO1xuICAgICAgICB9O1xuICAgIH0pO1xuICAgIHJldHVybiByZXNvbHZlUHJvbWlzZVdpdGhUaW1lb3V0KG9uTWlkZGxld2FyZU1hbmlmZXN0LCBNU19NQVhfSURMRV9ERUxBWSwgbWFya0Fzc2V0RXJyb3IobmV3IEVycm9yKCdGYWlsZWQgdG8gbG9hZCBjbGllbnQgbWlkZGxld2FyZSBtYW5pZmVzdCcpKSk7XG59XG5mdW5jdGlvbiBnZXRGaWxlc0ZvclJvdXRlKGFzc2V0UHJlZml4LCByb3V0ZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICAgICAgICAgIHNjcmlwdHM6IFtcbiAgICAgICAgICAgICAgICBhc3NldFByZWZpeCArICcvX25leHQvc3RhdGljL2NodW5rcy9wYWdlcycgKyBlbmNvZGVVUkkoKDAsIF9nZXRBc3NldFBhdGhGcm9tUm91dGUpLmRlZmF1bHQocm91dGUsICcuanMnKSksIFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIC8vIFN0eWxlcyBhcmUgaGFuZGxlZCBieSBgc3R5bGUtbG9hZGVyYCBpbiBkZXZlbG9wbWVudDpcbiAgICAgICAgICAgIGNzczogW11cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBnZXRDbGllbnRCdWlsZE1hbmlmZXN0KCkudGhlbigobWFuaWZlc3QpPT57XG4gICAgICAgIGlmICghKHJvdXRlIGluIG1hbmlmZXN0KSkge1xuICAgICAgICAgICAgdGhyb3cgbWFya0Fzc2V0RXJyb3IobmV3IEVycm9yKGBGYWlsZWQgdG8gbG9va3VwIHJvdXRlOiAke3JvdXRlfWApKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhbGxGaWxlcyA9IG1hbmlmZXN0W3JvdXRlXS5tYXAoKGVudHJ5KT0+YXNzZXRQcmVmaXggKyAnL19uZXh0LycgKyBlbmNvZGVVUkkoZW50cnkpXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzY3JpcHRzOiBhbGxGaWxlcy5maWx0ZXIoKHYpPT52LmVuZHNXaXRoKCcuanMnKVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIGNzczogYWxsRmlsZXMuZmlsdGVyKCh2KT0+di5lbmRzV2l0aCgnLmNzcycpXG4gICAgICAgICAgICApXG4gICAgICAgIH07XG4gICAgfSk7XG59XG5mdW5jdGlvbiBjcmVhdGVSb3V0ZUxvYWRlcihhc3NldFByZWZpeCkge1xuICAgIGNvbnN0IGVudHJ5cG9pbnRzID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IGxvYWRlZFNjcmlwdHMgPSBuZXcgTWFwKCk7XG4gICAgY29uc3Qgc3R5bGVTaGVldHMgPSBuZXcgTWFwKCk7XG4gICAgY29uc3Qgcm91dGVzID0gbmV3IE1hcCgpO1xuICAgIGZ1bmN0aW9uIG1heWJlRXhlY3V0ZVNjcmlwdChzcmMpIHtcbiAgICAgICAgLy8gV2l0aCBITVIgd2UgbWlnaHQgbmVlZCB0byBcInJlbG9hZFwiIHNjcmlwdHMgd2hlbiB0aGV5IGFyZVxuICAgICAgICAvLyBkaXNwb3NlZCBhbmQgcmVhZGRlZC4gRXhlY3V0aW5nIHNjcmlwdHMgdHdpY2UgaGFzIG5vIGZ1bmN0aW9uYWxcbiAgICAgICAgLy8gZGlmZmVyZW5jZXNcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICAgICAgICBsZXQgcHJvbSA9IGxvYWRlZFNjcmlwdHMuZ2V0KHNyYyk7XG4gICAgICAgICAgICBpZiAocHJvbSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm9tO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gU2tpcCBleGVjdXRpbmcgc2NyaXB0IGlmIGl0J3MgYWxyZWFkeSBpbiB0aGUgRE9NOlxuICAgICAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYHNjcmlwdFtzcmNePVwiJHtzcmN9XCJdYCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsb2FkZWRTY3JpcHRzLnNldChzcmMsIHByb20gPSBhcHBlbmRTY3JpcHQoc3JjKSk7XG4gICAgICAgICAgICByZXR1cm4gcHJvbTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBhcHBlbmRTY3JpcHQoc3JjKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBmZXRjaFN0eWxlU2hlZXQoaHJlZikge1xuICAgICAgICBsZXQgcHJvbSA9IHN0eWxlU2hlZXRzLmdldChocmVmKTtcbiAgICAgICAgaWYgKHByb20pIHtcbiAgICAgICAgICAgIHJldHVybiBwcm9tO1xuICAgICAgICB9XG4gICAgICAgIHN0eWxlU2hlZXRzLnNldChocmVmLCBwcm9tID0gZmV0Y2goaHJlZikudGhlbigocmVzKT0+e1xuICAgICAgICAgICAgaWYgKCFyZXMub2spIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBsb2FkIHN0eWxlc2hlZXQ6ICR7aHJlZn1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXMudGV4dCgpLnRoZW4oKHRleHQpPT4oe1xuICAgICAgICAgICAgICAgICAgICBocmVmOiBocmVmLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiB0ZXh0XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0pLmNhdGNoKChlcnIpPT57XG4gICAgICAgICAgICB0aHJvdyBtYXJrQXNzZXRFcnJvcihlcnIpO1xuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiBwcm9tO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB3aGVuRW50cnlwb2ludCAocm91dGUpIHtcbiAgICAgICAgICAgIHJldHVybiB3aXRoRnV0dXJlKHJvdXRlLCBlbnRyeXBvaW50cyk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRW50cnlwb2ludCAocm91dGUsIGV4ZWN1dGUpIHtcbiAgICAgICAgICAgIChleGVjdXRlID8gUHJvbWlzZS5yZXNvbHZlKCkudGhlbigoKT0+ZXhlY3V0ZSgpXG4gICAgICAgICAgICApLnRoZW4oKGV4cG9ydHMpPT4oe1xuICAgICAgICAgICAgICAgICAgICBjb21wb25lbnQ6IGV4cG9ydHMgJiYgZXhwb3J0cy5kZWZhdWx0IHx8IGV4cG9ydHMsXG4gICAgICAgICAgICAgICAgICAgIGV4cG9ydHM6IGV4cG9ydHNcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgLCAoZXJyKT0+KHtcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVyclxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApIDogUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCkpLnRoZW4oKGlucHV0KT0+e1xuICAgICAgICAgICAgICAgIGNvbnN0IG9sZCA9IGVudHJ5cG9pbnRzLmdldChyb3V0ZSk7XG4gICAgICAgICAgICAgICAgaWYgKG9sZCAmJiAncmVzb2x2ZScgaW4gb2xkKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW50cnlwb2ludHMuc2V0KHJvdXRlLCBpbnB1dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbGQucmVzb2x2ZShpbnB1dCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVudHJ5cG9pbnRzLnNldChyb3V0ZSwgaW5wdXQpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW50cnlwb2ludHMuZGVsZXRlKHJvdXRlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyB3aGVuIHRoaXMgZW50cnlwb2ludCBoYXMgYmVlbiByZXNvbHZlZCBiZWZvcmVcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlIHJvdXRlIGlzIG91dGRhdGVkIGFuZCB3ZSB3YW50IHRvIGludmFsaWRhdGVcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBjYWNoZSBlbnRyeVxuICAgICAgICAgICAgICAgICAgICByb3V0ZXMuZGVsZXRlKHJvdXRlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgbG9hZFJvdXRlIChyb3V0ZSwgcHJlZmV0Y2gpIHtcbiAgICAgICAgICAgIHJldHVybiB3aXRoRnV0dXJlKHJvdXRlLCByb3V0ZXMsICgpPT57XG4gICAgICAgICAgICAgICAgbGV0IGRldkJ1aWxkUHJvbWlzZVJlc29sdmU7XG4gICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGRldkJ1aWxkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgZGV2QnVpbGRQcm9taXNlUmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZVByb21pc2VXaXRoVGltZW91dChnZXRGaWxlc0ZvclJvdXRlKGFzc2V0UHJlZml4LCByb3V0ZSkudGhlbigoeyBzY3JpcHRzICwgY3NzICB9KT0+e1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgICAgICAgICAgICAgZW50cnlwb2ludHMuaGFzKHJvdXRlKSA/IFtdIDogUHJvbWlzZS5hbGwoc2NyaXB0cy5tYXAobWF5YmVFeGVjdXRlU2NyaXB0KSksXG4gICAgICAgICAgICAgICAgICAgICAgICBQcm9taXNlLmFsbChjc3MubWFwKGZldGNoU3R5bGVTaGVldCkpLCBcbiAgICAgICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICAgICAgfSkudGhlbigocmVzKT0+e1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy53aGVuRW50cnlwb2ludChyb3V0ZSkudGhlbigoZW50cnlwb2ludCk9Pih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50cnlwb2ludCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXM6IHJlc1sxXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9KSwgTVNfTUFYX0lETEVfREVMQVksIG1hcmtBc3NldEVycm9yKG5ldyBFcnJvcihgUm91dGUgZGlkIG5vdCBjb21wbGV0ZSBsb2FkaW5nOiAke3JvdXRlfWApKSkudGhlbigoeyBlbnRyeXBvaW50ICwgc3R5bGVzICB9KT0+e1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXMgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlczogc3R5bGVzXG4gICAgICAgICAgICAgICAgICAgIH0sIGVudHJ5cG9pbnQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ2Vycm9yJyBpbiBlbnRyeXBvaW50ID8gZW50cnlwb2ludCA6IHJlcztcbiAgICAgICAgICAgICAgICB9KS5jYXRjaCgoZXJyKT0+e1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJlZmV0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdlIGRvbid0IHdhbnQgdG8gY2FjaGUgZXJyb3JzIGR1cmluZyBwcmVmZXRjaFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSkuZmluYWxseSgoKT0+e1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGV2QnVpbGRQcm9taXNlUmVzb2x2ZSA9PT0gbnVsbCB8fCBkZXZCdWlsZFByb21pc2VSZXNvbHZlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkZXZCdWlsZFByb21pc2VSZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgcHJlZmV0Y2ggKHJvdXRlKSB7XG4gICAgICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vR29vZ2xlQ2hyb21lTGFicy9xdWlja2xpbmsvYmxvYi80NTNhNjYxZmExZmE5NDBlMmQyZTA0NDQ1MjM5OGUzOGM2N2E5OGZiL3NyYy9pbmRleC5tanMjTDExNS1MMTE4XG4gICAgICAgICAgICAvLyBMaWNlbnNlOiBBcGFjaGUgMi4wXG4gICAgICAgICAgICBsZXQgY247XG4gICAgICAgICAgICBpZiAoY24gPSBuYXZpZ2F0b3IuY29ubmVjdGlvbikge1xuICAgICAgICAgICAgICAgIC8vIERvbid0IHByZWZldGNoIGlmIHVzaW5nIDJHIG9yIGlmIFNhdmUtRGF0YSBpcyBlbmFibGVkLlxuICAgICAgICAgICAgICAgIGlmIChjbi5zYXZlRGF0YSB8fCAvMmcvLnRlc3QoY24uZWZmZWN0aXZlVHlwZSkpIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBnZXRGaWxlc0ZvclJvdXRlKGFzc2V0UHJlZml4LCByb3V0ZSkudGhlbigob3V0cHV0KT0+UHJvbWlzZS5hbGwoY2FuUHJlZmV0Y2ggPyBvdXRwdXQuc2NyaXB0cy5tYXAoKHNjcmlwdCk9PnByZWZldGNoVmlhRG9tKHNjcmlwdCwgJ3NjcmlwdCcpXG4gICAgICAgICAgICAgICAgKSA6IFtdKVxuICAgICAgICAgICAgKS50aGVuKCgpPT57XG4gICAgICAgICAgICAgICAgKDAsIF9yZXF1ZXN0SWRsZUNhbGxiYWNrKS5yZXF1ZXN0SWRsZUNhbGxiYWNrKCgpPT50aGlzLmxvYWRSb3V0ZShyb3V0ZSwgdHJ1ZSkuY2F0Y2goKCk9Pnt9KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9KS5jYXRjaCgvLyBzd2FsbG93IHByZWZldGNoIGVycm9yc1xuICAgICAgICAgICAgKCk9Pnt9KTtcbiAgICAgICAgfVxuICAgIH07XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlLWxvYWRlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtYXJrQXNzZXRFcnJvciIsImlzQXNzZXRFcnJvciIsImdldENsaWVudEJ1aWxkTWFuaWZlc3QiLCJnZXRNaWRkbGV3YXJlTWFuaWZlc3QiLCJjcmVhdGVSb3V0ZUxvYWRlciIsIl9nZXRBc3NldFBhdGhGcm9tUm91dGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZXF1ZXN0SWRsZUNhbGxiYWNrIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJNU19NQVhfSURMRV9ERUxBWSIsIndpdGhGdXR1cmUiLCJrZXkiLCJtYXAiLCJnZW5lcmF0b3IiLCJlbnRyeSIsImdldCIsImZ1dHVyZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVzb2x2ZXIiLCJwcm9tIiwic2V0IiwidGhlbiIsImNhdGNoIiwiZXJyIiwiZGVsZXRlIiwiaGFzUHJlZmV0Y2giLCJsaW5rIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwid2luZG93IiwiTVNJbnB1dE1ldGhvZENvbnRleHQiLCJkb2N1bWVudE1vZGUiLCJyZWxMaXN0Iiwic3VwcG9ydHMiLCJlIiwiY2FuUHJlZmV0Y2giLCJwcmVmZXRjaFZpYURvbSIsImhyZWYiLCJhcyIsInJlcyIsInJlaiIsInNlbGVjdG9yIiwicXVlcnlTZWxlY3RvciIsInJlbCIsImNyb3NzT3JpZ2luIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9DUk9TU19PUklHSU4iLCJvbmxvYWQiLCJvbmVycm9yIiwiaGVhZCIsImFwcGVuZENoaWxkIiwiQVNTRVRfTE9BRF9FUlJPUiIsIlN5bWJvbCIsImFwcGVuZFNjcmlwdCIsInNyYyIsInNjcmlwdCIsInJlamVjdCIsIkVycm9yIiwiYm9keSIsImRldkJ1aWxkUHJvbWlzZSIsInJlc29sdmVQcm9taXNlV2l0aFRpbWVvdXQiLCJwIiwibXMiLCJjYW5jZWxsZWQiLCJyIiwicmVxdWVzdElkbGVDYWxsYmFjayIsInNldFRpbWVvdXQiLCJzZWxmIiwiX19CVUlMRF9NQU5JRkVTVCIsIm9uQnVpbGRNYW5pZmVzdCIsImNiIiwiX19CVUlMRF9NQU5JRkVTVF9DQiIsIl9fTUlERExFV0FSRV9NQU5JRkVTVCIsIm9uTWlkZGxld2FyZU1hbmlmZXN0IiwiX19NSURETEVXQVJFX01BTklGRVNUX0NCIiwiZ2V0RmlsZXNGb3JSb3V0ZSIsImFzc2V0UHJlZml4Iiwicm91dGUiLCJzY3JpcHRzIiwiZW5jb2RlVVJJIiwiY3NzIiwibWFuaWZlc3QiLCJhbGxGaWxlcyIsImZpbHRlciIsInYiLCJlbmRzV2l0aCIsImVudHJ5cG9pbnRzIiwiTWFwIiwibG9hZGVkU2NyaXB0cyIsInN0eWxlU2hlZXRzIiwicm91dGVzIiwibWF5YmVFeGVjdXRlU2NyaXB0IiwiZmV0Y2hTdHlsZVNoZWV0IiwiZmV0Y2giLCJvayIsInRleHQiLCJjb250ZW50Iiwid2hlbkVudHJ5cG9pbnQiLCJvbkVudHJ5cG9pbnQiLCJleGVjdXRlIiwiY29tcG9uZW50IiwiZXJyb3IiLCJ1bmRlZmluZWQiLCJpbnB1dCIsIm9sZCIsImxvYWRSb3V0ZSIsInByZWZldGNoIiwiZGV2QnVpbGRQcm9taXNlUmVzb2x2ZSIsImFsbCIsImhhcyIsImVudHJ5cG9pbnQiLCJzdHlsZXMiLCJhc3NpZ24iLCJmaW5hbGx5IiwiY24iLCJuYXZpZ2F0b3IiLCJjb25uZWN0aW9uIiwic2F2ZURhdGEiLCJ0ZXN0IiwiZWZmZWN0aXZlVHlwZSIsIm91dHB1dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"Router\", ({\n    enumerable: true,\n    get: function() {\n        return _router.default;\n    }\n}));\nObject.defineProperty(exports, \"withRouter\", ({\n    enumerable: true,\n    get: function() {\n        return _withRouter.default;\n    }\n}));\nexports.useRouter = useRouter;\nexports.createRouter = createRouter;\nexports.makePublicRouterInstance = makePublicRouterInstance;\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\"));\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"../shared/lib/router-context\");\nvar _isError = _interopRequireDefault(__webpack_require__(/*! ../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nvar _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ \"./node_modules/next/dist/client/with-router.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst singletonRouter = {\n    router: null,\n    readyCallbacks: [],\n    ready (cb) {\n        if (this.router) return cb();\n        if (false) {}\n    }\n};\n// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields = [\n    \"pathname\",\n    \"route\",\n    \"query\",\n    \"asPath\",\n    \"components\",\n    \"isFallback\",\n    \"basePath\",\n    \"locale\",\n    \"locales\",\n    \"defaultLocale\",\n    \"isReady\",\n    \"isPreview\",\n    \"isLocaleDomain\",\n    \"domainLocales\", \n];\nconst routerEvents = [\n    \"routeChangeStart\",\n    \"beforeHistoryChange\",\n    \"routeChangeComplete\",\n    \"routeChangeError\",\n    \"hashChangeStart\",\n    \"hashChangeComplete\", \n];\nconst coreMethodFields = [\n    \"push\",\n    \"replace\",\n    \"reload\",\n    \"back\",\n    \"prefetch\",\n    \"beforePopState\", \n];\n// Events is a static property on the router, the router doesn't have to be initialized to use it\nObject.defineProperty(singletonRouter, \"events\", {\n    get () {\n        return _router.default.events;\n    }\n});\nurlPropertyFields.forEach((field)=>{\n    // Here we need to use Object.defineProperty because we need to return\n    // the property assigned to the actual router\n    // The value might get changed as we change routes and this is the\n    // proper way to access it\n    Object.defineProperty(singletonRouter, field, {\n        get () {\n            const router = getRouter();\n            return router[field];\n        }\n    });\n});\ncoreMethodFields.forEach((field)=>{\n    singletonRouter[field] = (...args)=>{\n        const router = getRouter();\n        return router[field](...args);\n    };\n});\nrouterEvents.forEach((event)=>{\n    singletonRouter.ready(()=>{\n        _router.default.events.on(event, (...args)=>{\n            const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(1)}`;\n            const _singletonRouter = singletonRouter;\n            if (_singletonRouter[eventField]) {\n                try {\n                    _singletonRouter[eventField](...args);\n                } catch (err) {\n                    console.error(`Error when running the Router event: ${eventField}`);\n                    console.error((0, _isError).default(err) ? `${err.message}\\n${err.stack}` : err + \"\");\n                }\n            }\n        });\n    });\n});\nfunction getRouter() {\n    if (!singletonRouter.router) {\n        const message = \"No router instance found.\\n\" + 'You should only use \"next/router\" on the client side of your app.\\n';\n        throw new Error(message);\n    }\n    return singletonRouter.router;\n}\nvar _default = singletonRouter;\nexports[\"default\"] = _default;\nfunction useRouter() {\n    return _react.default.useContext(_routerContext.RouterContext);\n}\nfunction createRouter(...args) {\n    singletonRouter.router = new _router.default(...args);\n    singletonRouter.readyCallbacks.forEach((cb)=>cb()\n    );\n    singletonRouter.readyCallbacks = [];\n    return singletonRouter.router;\n}\nfunction makePublicRouterInstance(router) {\n    const scopedRouter = router;\n    const instance = {};\n    for (const property of urlPropertyFields){\n        if (typeof scopedRouter[property] === \"object\") {\n            instance[property] = Object.assign(Array.isArray(scopedRouter[property]) ? [] : {}, scopedRouter[property]) // makes sure query is not stateful\n            ;\n            continue;\n        }\n        instance[property] = scopedRouter[property];\n    }\n    // Events is a static property on the router, the router doesn't have to be initialized to use it\n    instance.events = _router.default.events;\n    coreMethodFields.forEach((field)=>{\n        instance[field] = (...args)=>{\n            return scopedRouter[field](...args);\n        };\n    });\n    return instance;\n} //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useIntersection = useIntersection;\nvar _react = __webpack_require__(/*! react */ \"react\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver !== \"undefined\";\nfunction useIntersection({ rootRef , rootMargin , disabled  }) {\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const unobserve = (0, _react).useRef();\n    const [visible, setVisible] = (0, _react).useState(false);\n    const [root, setRoot] = (0, _react).useState(rootRef ? rootRef.current : null);\n    const setRef = (0, _react).useCallback((el)=>{\n        if (unobserve.current) {\n            unobserve.current();\n            unobserve.current = undefined;\n        }\n        if (isDisabled || visible) return;\n        if (el && el.tagName) {\n            unobserve.current = observe(el, (isVisible)=>isVisible && setVisible(isVisible)\n            , {\n                root,\n                rootMargin\n            });\n        }\n    }, [\n        isDisabled,\n        root,\n        rootMargin,\n        visible\n    ]);\n    (0, _react).useEffect(()=>{\n        if (!hasIntersectionObserver) {\n            if (!visible) {\n                const idleCallback = (0, _requestIdleCallback).requestIdleCallback(()=>setVisible(true)\n                );\n                return ()=>(0, _requestIdleCallback).cancelIdleCallback(idleCallback)\n                ;\n            }\n        }\n    }, [\n        visible\n    ]);\n    (0, _react).useEffect(()=>{\n        if (rootRef) setRoot(rootRef.current);\n    }, [\n        rootRef\n    ]);\n    return [\n        setRef,\n        visible\n    ];\n}\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            let index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin\n            );\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    let existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin\n    );\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n    } else {\n        instance = observers.get(id);\n        idList.push(id);\n    }\n    if (instance) {\n        return instance;\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    observers.set(id, instance = {\n        id,\n        observer,\n        elements\n    });\n    return instance;\n} //# sourceMappingURL=use-intersection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = withRouter;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\nfunction withRouter(ComposedComponent) {\n    function WithRouterWrapper(props) {\n        return /*#__PURE__*/ _react.default.createElement(ComposedComponent, Object.assign({\n            router: (0, _router).useRouter()\n        }, props));\n    }\n    WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps;\n    WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;\n    if (true) {\n        const name = ComposedComponent.displayName || ComposedComponent.name || \"Unknown\";\n        WithRouterWrapper.displayName = `withRouter(${name})`;\n    }\n    return WithRouterWrapper;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n} //# sourceMappingURL=with-router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC93aXRoLXJvdXRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLEtBQUssRUFBRSxJQUFJO0NBQ2QsRUFBQyxDQUFDO0FBQ0hELGtCQUFlLEdBQUdHLFVBQVUsQ0FBQztBQUM3QixJQUFJQyxNQUFNLEdBQUdDLHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLG9CQUFPLENBQUMsQ0FBQztBQUNyRCxJQUFJQyxPQUFPLEdBQUdELG1CQUFPLENBQUMsMkRBQVUsQ0FBQztBQUNqQyxTQUFTSCxVQUFVLENBQUNLLGlCQUFpQixFQUFFO0lBQ25DLFNBQVNDLGlCQUFpQixDQUFDQyxLQUFLLEVBQUU7UUFDOUIsT0FBTyxhQUFhLENBQUNOLE1BQU0sQ0FBQ0YsT0FBTyxDQUFDUyxhQUFhLENBQUNILGlCQUFpQixFQUFFVixNQUFNLENBQUNjLE1BQU0sQ0FBQztZQUMvRUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFTixPQUFPLENBQUMsQ0FBQ08sU0FBUyxFQUFFO1NBQ25DLEVBQUVKLEtBQUssQ0FBQyxDQUFDLENBQUU7S0FDZjtJQUNERCxpQkFBaUIsQ0FBQ00sZUFBZSxHQUFHUCxpQkFBaUIsQ0FBQ08sZUFBZSxDQUFDO0lBQ3RFTixpQkFBaUIsQ0FBQ08sbUJBQW1CLEdBQUdSLGlCQUFpQixDQUFDUSxtQkFBbUIsQ0FBQztJQUM5RSxJQUFJQyxJQUFxQyxFQUFFO1FBQ3ZDLE1BQU1DLElBQUksR0FBR1YsaUJBQWlCLENBQUNXLFdBQVcsSUFBSVgsaUJBQWlCLENBQUNVLElBQUksSUFBSSxTQUFTO1FBQ2pGVCxpQkFBaUIsQ0FBQ1UsV0FBVyxHQUFHLENBQUMsV0FBVyxFQUFFRCxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDekQ7SUFDRCxPQUFPVCxpQkFBaUIsQ0FBQztDQUM1QjtBQUNELFNBQVNKLHNCQUFzQixDQUFDZSxHQUFHLEVBQUU7SUFDakMsT0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVUsR0FBR0QsR0FBRyxHQUFHO1FBQ2pDbEIsT0FBTyxFQUFFa0IsR0FBRztLQUNmLENBQUM7Q0FDTCxDQUVELHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2dlbS1mYXJtLXVpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvd2l0aC1yb3V0ZXIuanM/YWM3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHdpdGhSb3V0ZXI7XG52YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIF9yb3V0ZXIgPSByZXF1aXJlKFwiLi9yb3V0ZXJcIik7XG5mdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvc2VkQ29tcG9uZW50KSB7XG4gICAgZnVuY3Rpb24gV2l0aFJvdXRlcldyYXBwZXIocHJvcHMpIHtcbiAgICAgICAgcmV0dXJuKC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChDb21wb3NlZENvbXBvbmVudCwgT2JqZWN0LmFzc2lnbih7XG4gICAgICAgICAgICByb3V0ZXI6ICgwLCBfcm91dGVyKS51c2VSb3V0ZXIoKVxuICAgICAgICB9LCBwcm9wcykpKTtcbiAgICB9XG4gICAgV2l0aFJvdXRlcldyYXBwZXIuZ2V0SW5pdGlhbFByb3BzID0gQ29tcG9zZWRDb21wb25lbnQuZ2V0SW5pdGlhbFByb3BzO1xuICAgIFdpdGhSb3V0ZXJXcmFwcGVyLm9yaWdHZXRJbml0aWFsUHJvcHMgPSBDb21wb3NlZENvbXBvbmVudC5vcmlnR2V0SW5pdGlhbFByb3BzO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBDb21wb3NlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb3NlZENvbXBvbmVudC5uYW1lIHx8ICdVbmtub3duJztcbiAgICAgICAgV2l0aFJvdXRlcldyYXBwZXIuZGlzcGxheU5hbWUgPSBgd2l0aFJvdXRlcigke25hbWV9KWA7XG4gICAgfVxuICAgIHJldHVybiBXaXRoUm91dGVyV3JhcHBlcjtcbn1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2l0aC1yb3V0ZXIuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIndpdGhSb3V0ZXIiLCJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yb3V0ZXIiLCJDb21wb3NlZENvbXBvbmVudCIsIldpdGhSb3V0ZXJXcmFwcGVyIiwicHJvcHMiLCJjcmVhdGVFbGVtZW50IiwiYXNzaWduIiwicm91dGVyIiwidXNlUm91dGVyIiwiZ2V0SW5pdGlhbFByb3BzIiwib3JpZ0dldEluaXRpYWxQcm9wcyIsInByb2Nlc3MiLCJuYW1lIiwiZGlzcGxheU5hbWUiLCJvYmoiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/with-router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/router.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/router.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nexports.addLocale = addLocale;\nexports.delLocale = delLocale;\nexports.hasBasePath = hasBasePath;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports[\"default\"] = void 0;\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\nvar _isError = _interopRequireWildcard(__webpack_require__(/*! ../../../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nvar _denormalizePagePath = __webpack_require__(/*! ../../../server/denormalize-page-path */ \"../../../server/denormalize-page-path\");\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"../i18n/normalize-locale-path\");\nvar _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ \"../mitt\"));\nvar _utils = __webpack_require__(/*! ../utils */ \"../utils\");\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./utils/is-dynamic\");\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./utils/parse-relative-url\");\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./utils/querystring\");\nvar _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./utils/resolve-rewrites\"));\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./utils/route-matcher\");\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./utils/route-regex\");\nvar _formatUrl = __webpack_require__(/*! ./utils/format-url */ \"./utils/format-url\");\nvar _routingItems = __webpack_require__(/*! ./utils/routing-items */ \"./utils/routing-items\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};\n        if (obj != null) {\n            for(var key in obj){\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    } else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj.default = obj;\n        return newObj;\n    }\n}\nlet detectDomainLocale;\nif (false) {}\nconst basePath =  false || \"\";\nfunction buildCancellationError() {\n    return Object.assign(new Error(\"Route Cancelled\"), {\n        cancelled: true\n    });\n}\nfunction addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const pathname = pathNoQueryHash(path);\n    return (0, _normalizeTrailingSlash).normalizePathTrailingSlash(`${prefix}${pathname}`) + path.slice(pathname.length);\n}\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nfunction addLocale(path, locale, defaultLocale) {\n    if (false) {}\n    return path;\n}\nfunction delLocale(path, locale) {\n    if (false) {}\n    return path;\n}\nfunction pathNoQueryHash(path) {\n    const queryIndex = path.indexOf(\"?\");\n    const hashIndex = path.indexOf(\"#\");\n    if (queryIndex > -1 || hashIndex > -1) {\n        path = path.substring(0, queryIndex > -1 ? queryIndex : hashIndex);\n    }\n    return path;\n}\nfunction hasBasePath(path) {\n    path = pathNoQueryHash(path);\n    return path === basePath || path.startsWith(basePath + \"/\");\n}\nfunction addBasePath(path) {\n    // we only add the basepath on relative urls\n    return addPathPrefix(path, basePath);\n}\nfunction delBasePath(path) {\n    path = path.slice(basePath.length);\n    if (!path.startsWith(\"/\")) path = `/${path}`;\n    return path;\n}\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (url.startsWith(\"/\") || url.startsWith(\"#\") || url.startsWith(\"?\")) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils).getLocationOrigin();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n}\nfunction interpolateAs(route, asPathname, query) {\n    let interpolatedRoute = \"\";\n    const dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n    const dynamicGroups = dynamicRegex.groups;\n    const dynamicMatches = (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : \"\") || // TODO: should this take priority; also need to change in the router.\n    query;\n    interpolatedRoute = route;\n    const params = Object.keys(dynamicGroups);\n    if (!params.every((param)=>{\n        let value = dynamicMatches[param] || \"\";\n        const { repeat , optional  } = dynamicGroups[param];\n        // support single-level catch-all\n        // TODO: more robust handling for user-error (passing `/`)\n        let replaced = `[${repeat ? \"...\" : \"\"}${param}]`;\n        if (optional) {\n            replaced = `${!value ? \"/\" : \"\"}[${replaced}]`;\n        }\n        if (repeat && !Array.isArray(value)) value = [\n            value\n        ];\n        return (optional || param in dynamicMatches) && (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted\n        // into the URL and we expect URL encoded segments\n        // when parsing dynamic route params\n        (segment)=>encodeURIComponent(segment)\n        ).join(\"/\") : encodeURIComponent(value)) || \"/\");\n    })) {\n        interpolatedRoute = \"\" // did not satisfy all requirements\n        ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n    }\n    return {\n        params,\n        result: interpolatedRoute\n    };\n}\nfunction omitParmsFromQuery(query, params) {\n    const filteredQuery = {};\n    Object.keys(query).forEach((key)=>{\n        if (!params.includes(key)) {\n            filteredQuery[key] = query[key];\n        }\n    });\n    return filteredQuery;\n}\nfunction resolveHref(router, href, resolveAs) {\n    // we use a dummy base url for relative urls\n    let base;\n    let urlAsString = typeof href === \"string\" ? href : (0, _formatUrl).formatWithValidation(href);\n    // repeated slashes and backslashes in the URL are considered\n    // invalid and will never match a Next.js page/file\n    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n    const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;\n    const urlParts = urlAsStringNoProto.split(\"?\");\n    if ((urlParts[0] || \"\").match(/(\\/\\/|\\\\)/)) {\n        console.error(`Invalid href passed to next/router: ${urlAsString}, repeated forward-slashes (//) or backslashes \\\\ are not valid in the href`);\n        const normalizedUrl = (0, _utils).normalizeRepeatedSlashes(urlAsStringNoProto);\n        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : \"\") + normalizedUrl;\n    }\n    // Return because it cannot be routed by the Next.js router\n    if (!isLocalURL(urlAsString)) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n    try {\n        base = new URL(urlAsString.startsWith(\"#\") ? router.asPath : router.pathname, \"http://n\");\n    } catch (_) {\n        // fallback to / for invalid asPath values e.g. //\n        base = new URL(\"/\", \"http://n\");\n    }\n    try {\n        const finalUrl = new URL(urlAsString, base);\n        finalUrl.pathname = (0, _normalizeTrailingSlash).normalizePathTrailingSlash(finalUrl.pathname);\n        let interpolatedAs = \"\";\n        if ((0, _isDynamic).isDynamicRoute(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n            const query = (0, _querystring).searchParamsToUrlQuery(finalUrl.searchParams);\n            const { result , params  } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);\n            if (result) {\n                interpolatedAs = (0, _formatUrl).formatWithValidation({\n                    pathname: result,\n                    hash: finalUrl.hash,\n                    query: omitParmsFromQuery(query, params)\n                });\n            }\n        }\n        // if the origin didn't change, it means we received a relative href\n        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n        return resolveAs ? [\n            resolvedHref,\n            interpolatedAs || resolvedHref\n        ] : resolvedHref;\n    } catch (_1) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n}\nfunction stripOrigin(url) {\n    const origin = (0, _utils).getLocationOrigin();\n    return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\nfunction prepareUrlAs(router, url, as) {\n    // If url and as provided as an object representation,\n    // we'll format them into the string version here.\n    let [resolvedHref, resolvedAs] = resolveHref(router, url, true);\n    const origin = (0, _utils).getLocationOrigin();\n    const hrefHadOrigin = resolvedHref.startsWith(origin);\n    const asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);\n    resolvedHref = stripOrigin(resolvedHref);\n    resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n    const preparedUrl = hrefHadOrigin ? resolvedHref : addBasePath(resolvedHref);\n    const preparedAs = as ? stripOrigin(resolveHref(router, as)) : resolvedAs || resolvedHref;\n    return {\n        url: preparedUrl,\n        as: asHadOrigin ? preparedAs : addBasePath(preparedAs)\n    };\n}\nfunction resolveDynamicRoute(pathname, pages) {\n    const cleanPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _denormalizePagePath).denormalizePagePath(pathname));\n    if (cleanPathname === \"/404\" || cleanPathname === \"/_error\") {\n        return pathname;\n    }\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname)) {\n        // eslint-disable-next-line array-callback-return\n        pages.some((page)=>{\n            if ((0, _isDynamic).isDynamicRoute(page) && (0, _routeRegex).getRouteRegex(page).re.test(cleanPathname)) {\n                pathname = page;\n                return true;\n            }\n        });\n    }\n    return (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n}\nconst manualScrollRestoration =  false && 0;\nconst SSG_DATA_NOT_FOUND = Symbol(\"SSG_DATA_NOT_FOUND\");\nfunction fetchRetry(url, attempts, opts) {\n    return fetch(url, {\n        // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n        // Cookies may also be required for `getServerSideProps`.\n        //\n        // > `fetch` won’t send cookies, unless you set the credentials init\n        // > option.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n        //\n        // > For maximum browser compatibility when it comes to sending &\n        // > receiving cookies, always supply the `credentials: 'same-origin'`\n        // > option instead of relying on the default.\n        // https://github.com/github/fetch#caveats\n        credentials: \"same-origin\"\n    }).then((res)=>{\n        if (!res.ok) {\n            if (attempts > 1 && res.status >= 500) {\n                return fetchRetry(url, attempts - 1, opts);\n            }\n            if (res.status === 404) {\n                return res.json().then((data)=>{\n                    if (data.notFound) {\n                        return {\n                            notFound: SSG_DATA_NOT_FOUND\n                        };\n                    }\n                    throw new Error(`Failed to load static props`);\n                });\n            }\n            throw new Error(`Failed to load static props`);\n        }\n        return opts.text ? res.text() : res.json();\n    });\n}\nfunction fetchNextData(dataHref, isServerRender, text, inflightCache, persistCache) {\n    const { href: cacheKey  } = new URL(dataHref, window.location.href);\n    if (inflightCache[cacheKey] !== undefined) {\n        return inflightCache[cacheKey];\n    }\n    return inflightCache[cacheKey] = fetchRetry(dataHref, isServerRender ? 3 : 1, {\n        text\n    }).catch((err)=>{\n        // We should only trigger a server-side transition if this was caused\n        // on a client-side transition. Otherwise, we'd get into an infinite\n        // loop.\n        if (!isServerRender) {\n            (0, _routeLoader).markAssetError(err);\n        }\n        throw err;\n    }).then((data)=>{\n        if (!persistCache || \"development\" !== \"production\") {\n            delete inflightCache[cacheKey];\n        }\n        return data;\n    }).catch((err)=>{\n        delete inflightCache[cacheKey];\n        throw err;\n    });\n}\nclass Router {\n    constructor(pathname1, query1, as1, { initialProps , pageLoader , App , wrapApp , Component , err , subscription , isFallback , locale , locales , defaultLocale , domainLocales , isPreview , isRsc  }){\n        // Static Data Cache\n        this.sdc = {};\n        // In-flight Server Data Requests, for deduping\n        this.sdr = {};\n        // In-flight middleware preflight requests\n        this.sde = {};\n        this._idx = 0;\n        this.onPopState = (e)=>{\n            const state = e.state;\n            if (!state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname , query  } = this;\n                this.changeState(\"replaceState\", (0, _formatUrl).formatWithValidation({\n                    pathname: addBasePath(pathname),\n                    query\n                }), (0, _utils).getURL());\n                return;\n            }\n            if (!state.__N) {\n                return;\n            }\n            let forcedScroll;\n            const { url , as , options , idx  } = state;\n            if (false) {}\n            this._idx = idx;\n            const { pathname  } = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (this.isSsr && as === addBasePath(this.asPath) && pathname === addBasePath(this.pathname)) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(state)) {\n                return;\n            }\n            this.change(\"replaceState\", url, as, Object.assign({}, options, {\n                shallow: options.shallow && this._shallow,\n                locale: options.locale || this.defaultLocale\n            }), forcedScroll);\n        };\n        // represents the current component key\n        const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname1);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname1 !== \"/_error\") {\n            this.components[route] = {\n                Component,\n                initial: true,\n                props: initialProps,\n                err,\n                __N_SSG: initialProps && initialProps.__N_SSG,\n                __N_SSP: initialProps && initialProps.__N_SSP,\n                __N_RSC: !!isRsc\n            };\n        }\n        this.components[\"/_app\"] = {\n            Component: App,\n            styleSheets: []\n        };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        const autoExportDynamic = (0, _isDynamic).isDynamicRoute(pathname1) && self.__NEXT_DATA__.autoExport;\n        this.basePath = basePath;\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        // make sure to ignore extra popState in safari on navigating\n        // back from external site\n        this.isSsr = true;\n        this.isLocaleDomain = false;\n        this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !false);\n        if (false) {}\n        this.state = {\n            route,\n            pathname: pathname1,\n            query: query1,\n            asPath: autoExportDynamic ? pathname1 : as1,\n            isPreview: !!isPreview,\n            locale:  false ? 0 : undefined,\n            isFallback\n        };\n        if (false) {}\n    }\n    reload() {\n        window.location.reload();\n    }\n    /**\n   * Go back in history\n   */ back() {\n        window.history.back();\n    }\n    /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ push(url, as, options = {}) {\n        if (false) {}\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change(\"pushState\", url, as, options);\n    }\n    /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ replace(url, as, options = {}) {\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change(\"replaceState\", url, as, options);\n    }\n    async change(method, url, as, options, forcedScroll) {\n        if (!isLocalURL(url)) {\n            window.location.href = url;\n            return false;\n        }\n        const shouldResolveHref = options._h || options._shouldResolveHref || pathNoQueryHash(url) === pathNoQueryHash(as);\n        const nextState = {\n            ...this.state\n        };\n        // for static pages with query params in the URL we delay\n        // marking the router ready until after the query is updated\n        if (options._h) {\n            this.isReady = true;\n        }\n        const prevLocale = nextState.locale;\n        if (false) { var ref; }\n        if (!options._h) {\n            this.isSsr = false;\n        }\n        // marking route changes as a navigation start entry\n        if (_utils.ST) {\n            performance.mark(\"routeChange\");\n        }\n        const { shallow =false , scroll =true  } = options;\n        const routeProps = {\n            shallow\n        };\n        if (this._inFlightRoute) {\n            this.abortComponentLoad(this._inFlightRoute, routeProps);\n        }\n        as = addBasePath(addLocale(hasBasePath(as) ? delBasePath(as) : as, options.locale, this.defaultLocale));\n        const cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, nextState.locale);\n        this._inFlightRoute = as;\n        let localeChange = prevLocale !== nextState.locale;\n        // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n        // WARNING: `_h` is an internal option for handing Next.js client-side\n        // hydration. Your app should _never_ use this property. It may change at\n        // any time without notice.\n        if (!options._h && this.onlyAHashChange(cleanedAs) && !localeChange) {\n            nextState.asPath = cleanedAs;\n            Router.events.emit(\"hashChangeStart\", as, routeProps);\n            // TODO: do we need the resolved href when only a hash change?\n            this.changeState(method, url, as, {\n                ...options,\n                scroll: false\n            });\n            if (scroll) {\n                this.scrollToHash(cleanedAs);\n            }\n            this.set(nextState, this.components[nextState.route], null);\n            Router.events.emit(\"hashChangeComplete\", as, routeProps);\n            return true;\n        }\n        let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n        let { pathname , query  } = parsed;\n        // The build manifest needs to be loaded before auto-static dynamic pages\n        // get their query parameters to allow ensuring they can be parsed properly\n        // when rewritten to\n        let pages, rewrites;\n        try {\n            [pages, { __rewrites: rewrites  }] = await Promise.all([\n                this.pageLoader.getPageList(),\n                (0, _routeLoader).getClientBuildManifest(),\n                this.pageLoader.getMiddlewareList(), \n            ]);\n        } catch (err) {\n            // If we fail to resolve the page list or client-build manifest, we must\n            // do a server-side transition:\n            window.location.href = as;\n            return false;\n        }\n        // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n        if (!this.urlIsNew(cleanedAs) && !localeChange) {\n            method = \"replaceState\";\n        }\n        // we need to resolve the as value using rewrites for dynamic SSG\n        // pages to allow building the data URL correctly\n        let resolvedAs = as;\n        // url and as should always be prefixed with basePath by this\n        // point by either next/link or router.push/replace so strip the\n        // basePath from the pathname to match the pages dir 1-to-1\n        pathname = pathname ? (0, _normalizeTrailingSlash).removePathTrailingSlash(delBasePath(pathname)) : pathname;\n        if (shouldResolveHref && pathname !== \"/_error\") {\n            options._shouldResolveHref = true;\n            if (false) {} else {\n                parsed.pathname = resolveDynamicRoute(pathname, pages);\n                if (parsed.pathname !== pathname) {\n                    pathname = parsed.pathname;\n                    parsed.pathname = addBasePath(pathname);\n                    url = (0, _formatUrl).formatWithValidation(parsed);\n                }\n            }\n        }\n        if (!isLocalURL(as)) {\n            if (true) {\n                throw new Error(`Invalid href: \"${url}\" and as: \"${as}\", received relative href and external as` + `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`);\n            }\n            window.location.href = as;\n            return false;\n        }\n        resolvedAs = delLocale(delBasePath(resolvedAs), nextState.locale);\n        /**\n     * If the route update was triggered for client-side hydration and\n     * the rendered route is not dynamic do not check the preflight\n     * request as it is not necessary.\n     */ if ((!options.shallow || options._h === 1) && (options._h !== 1 || (0, _isDynamic).isDynamicRoute((0, _normalizeTrailingSlash).removePathTrailingSlash(pathname)))) {\n            const effect = await this._preflightRequest({\n                as,\n                cache: \"development\" === \"production\",\n                pages,\n                pathname,\n                query,\n                locale: nextState.locale,\n                isPreview: nextState.isPreview\n            });\n            if (effect.type === \"rewrite\") {\n                query = {\n                    ...query,\n                    ...effect.parsedAs.query\n                };\n                resolvedAs = effect.asPath;\n                pathname = effect.resolvedHref;\n                parsed.pathname = effect.resolvedHref;\n                url = (0, _formatUrl).formatWithValidation(parsed);\n            } else if (effect.type === \"redirect\" && effect.newAs) {\n                return this.change(method, effect.newUrl, effect.newAs, options);\n            } else if (effect.type === \"redirect\" && effect.destination) {\n                window.location.href = effect.destination;\n                return new Promise(()=>{});\n            } else if (effect.type === \"refresh\" && as !== window.location.pathname) {\n                window.location.href = as;\n                return new Promise(()=>{});\n            }\n        }\n        const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n        if ((0, _isDynamic).isDynamicRoute(route)) {\n            const parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs);\n            const asPathname = parsedAs.pathname;\n            const routeRegex = (0, _routeRegex).getRouteRegex(route);\n            const routeMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(asPathname);\n            const shouldInterpolate = route === asPathname;\n            const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n            if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {\n                const missingParams = Object.keys(routeRegex.groups).filter((param)=>!query[param]\n                );\n                if (missingParams.length > 0) {\n                    if (true) {\n                        console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \\`as\\` and \\`href\\``} failed to manually provide ` + `the params: ${missingParams.join(\", \")} in the \\`href\\`'s \\`query\\``);\n                    }\n                    throw new Error((shouldInterpolate ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(\", \")}) to be interpolated properly. ` : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) + `Read more: https://nextjs.org/docs/messages/${shouldInterpolate ? \"href-interpolation-failed\" : \"incompatible-href-as\"}`);\n                }\n            } else if (shouldInterpolate) {\n                as = (0, _formatUrl).formatWithValidation(Object.assign({}, parsedAs, {\n                    pathname: interpolatedAs.result,\n                    query: omitParmsFromQuery(query, interpolatedAs.params)\n                }));\n            } else {\n                // Merge params into `query`, overwriting any specified in search\n                Object.assign(query, routeMatch);\n            }\n        }\n        Router.events.emit(\"routeChangeStart\", as, routeProps);\n        try {\n            var ref1, ref2;\n            let routeInfo = await this.getRouteInfo(route, pathname, query, as, resolvedAs, routeProps, nextState.locale, nextState.isPreview);\n            let { error , props , __N_SSG , __N_SSP  } = routeInfo;\n            // handle redirect on client-transition\n            if ((__N_SSG || __N_SSP) && props) {\n                if (props.pageProps && props.pageProps.__N_REDIRECT) {\n                    const destination = props.pageProps.__N_REDIRECT;\n                    // check if destination is internal (resolves to a page) and attempt\n                    // client-navigation if it is falling back to hard navigation if\n                    // it's not\n                    if (destination.startsWith(\"/\") && props.pageProps.__N_REDIRECT_BASE_PATH !== false) {\n                        const parsedHref = (0, _parseRelativeUrl).parseRelativeUrl(destination);\n                        parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n                        const { url: newUrl , as: newAs  } = prepareUrlAs(this, destination, destination);\n                        return this.change(method, newUrl, newAs, options);\n                    }\n                    window.location.href = destination;\n                    return new Promise(()=>{});\n                }\n                nextState.isPreview = !!props.__N_PREVIEW;\n                // handle SSG data 404\n                if (props.notFound === SSG_DATA_NOT_FOUND) {\n                    let notFoundRoute;\n                    try {\n                        await this.fetchComponent(\"/404\");\n                        notFoundRoute = \"/404\";\n                    } catch (_) {\n                        notFoundRoute = \"/_error\";\n                    }\n                    routeInfo = await this.getRouteInfo(notFoundRoute, notFoundRoute, query, as, resolvedAs, {\n                        shallow: false\n                    }, nextState.locale, nextState.isPreview);\n                }\n            }\n            Router.events.emit(\"beforeHistoryChange\", as, routeProps);\n            this.changeState(method, url, as, options);\n            if (options._h && pathname === \"/_error\" && ((ref1 = self.__NEXT_DATA__.props) === null || ref1 === void 0 ? void 0 : (ref2 = ref1.pageProps) === null || ref2 === void 0 ? void 0 : ref2.statusCode) === 500 && (props === null || props === void 0 ? void 0 : props.pageProps)) {\n                // ensure statusCode is still correct for static 500 page\n                // when updating query information\n                props.pageProps.statusCode = 500;\n            }\n            // shallow routing is only allowed for same page URL changes.\n            const isValidShallowRoute = options.shallow && nextState.route === route;\n            var _scroll;\n            const shouldScroll = (_scroll = options.scroll) !== null && _scroll !== void 0 ? _scroll : !isValidShallowRoute;\n            const resetScroll = shouldScroll ? {\n                x: 0,\n                y: 0\n            } : null;\n            await this.set({\n                ...nextState,\n                route,\n                pathname,\n                query,\n                asPath: cleanedAs,\n                isFallback: false\n            }, routeInfo, forcedScroll !== null && forcedScroll !== void 0 ? forcedScroll : resetScroll).catch((e)=>{\n                if (e.cancelled) error = error || e;\n                else throw e;\n            });\n            if (error) {\n                Router.events.emit(\"routeChangeError\", error, cleanedAs, routeProps);\n                throw error;\n            }\n            if (false) {}\n            Router.events.emit(\"routeChangeComplete\", as, routeProps);\n            return true;\n        } catch (err1) {\n            if ((0, _isError).default(err1) && err1.cancelled) {\n                return false;\n            }\n            throw err1;\n        }\n    }\n    changeState(method, url, as, options = {}) {\n        if (true) {\n            if (typeof window.history === \"undefined\") {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method] === \"undefined\") {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== \"pushState\" || (0, _utils).getURL() !== as) {\n            this._shallow = options.shallow;\n            window.history[method]({\n                url,\n                as,\n                options,\n                __N: true,\n                idx: this._idx = method !== \"pushState\" ? this._idx : this._idx + 1\n            }, // Passing the empty string here should be safe against future changes to the method.\n            // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n            \"\", as);\n        }\n    }\n    async handleRouteInfoError(err, pathname, query, as, routeProps, loadErrorFail) {\n        if (err.cancelled) {\n            // bubble up cancellation errors\n            throw err;\n        }\n        if ((0, _routeLoader).isAssetError(err) || loadErrorFail) {\n            Router.events.emit(\"routeChangeError\", err, as, routeProps);\n            // If we can't load the page it could be one of following reasons\n            //  1. Page doesn't exists\n            //  2. Page does exist in a different zone\n            //  3. Internal error while loading the page\n            // So, doing a hard reload is the proper way to deal with this.\n            window.location.href = as;\n            // Changing the URL doesn't block executing the current code path.\n            // So let's throw a cancellation error stop the routing logic.\n            throw buildCancellationError();\n        }\n        try {\n            let Component;\n            let styleSheets;\n            let props;\n            if (typeof Component === \"undefined\" || typeof styleSheets === \"undefined\") {\n                ({ page: Component , styleSheets  } = await this.fetchComponent(\"/_error\"));\n            }\n            const routeInfo = {\n                props,\n                Component,\n                styleSheets,\n                err,\n                error: err\n            };\n            if (!routeInfo.props) {\n                try {\n                    routeInfo.props = await this.getInitialProps(Component, {\n                        err,\n                        pathname,\n                        query\n                    });\n                } catch (gipErr) {\n                    console.error(\"Error in error page `getInitialProps`: \", gipErr);\n                    routeInfo.props = {};\n                }\n            }\n            return routeInfo;\n        } catch (routeInfoErr) {\n            return this.handleRouteInfoError((0, _isError).default(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + \"\"), pathname, query, as, routeProps, true);\n        }\n    }\n    async getRouteInfo(route, pathname, query, as, resolvedAs, routeProps, locale, isPreview) {\n        try {\n            const existingRouteInfo = this.components[route];\n            if (routeProps.shallow && existingRouteInfo && this.route === route) {\n                return existingRouteInfo;\n            }\n            let cachedRouteInfo = undefined;\n            // can only use non-initial route info\n            // cannot reuse route info in development since it can change after HMR\n            if (false) {}\n            const routeInfo = cachedRouteInfo || await this.fetchComponent(route).then((res)=>({\n                    Component: res.page,\n                    styleSheets: res.styleSheets,\n                    __N_SSG: res.mod.__N_SSG,\n                    __N_SSP: res.mod.__N_SSP,\n                    __N_RSC: !!res.mod.__next_rsc__\n                })\n            );\n            const { Component , __N_SSG , __N_SSP , __N_RSC  } = routeInfo;\n            if (true) {\n                const { isValidElementType  } = __webpack_require__(/*! next/dist/compiled/react-is */ \"next/dist/compiled/react-is\");\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                }\n            }\n            let dataHref;\n            if (__N_SSG || __N_SSP || __N_RSC) {\n                dataHref = this.pageLoader.getDataHref({\n                    href: (0, _formatUrl).formatWithValidation({\n                        pathname,\n                        query\n                    }),\n                    asPath: resolvedAs,\n                    ssg: __N_SSG,\n                    rsc: __N_RSC,\n                    locale\n                });\n            }\n            const props = await this._getData(()=>__N_SSG || __N_SSP ? fetchNextData(dataHref, this.isSsr, false, __N_SSG ? this.sdc : this.sdr, !!__N_SSG && !isPreview) : this.getInitialProps(Component, {\n                    pathname,\n                    query,\n                    asPath: as,\n                    locale,\n                    locales: this.locales,\n                    defaultLocale: this.defaultLocale\n                })\n            );\n            if (__N_RSC) {\n                const { fresh , data  } = await this._getData(()=>this._getFlightData(dataHref)\n                );\n                props.pageProps = Object.assign(props.pageProps, {\n                    __flight_serialized__: data,\n                    __flight_fresh__: fresh\n                });\n            }\n            routeInfo.props = props;\n            this.components[route] = routeInfo;\n            return routeInfo;\n        } catch (err) {\n            return this.handleRouteInfoError((0, _isError).getProperError(err), pathname, query, as, routeProps);\n        }\n    }\n    set(state, data, resetScroll) {\n        this.state = state;\n        return this.sub(data, this.components[\"/_app\"].Component, resetScroll);\n    }\n    /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */ beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath) return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split(\"#\");\n        const [newUrlNoHash, newHash] = as.split(\"#\");\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash = \"\"] = as.split(\"#\");\n        // Scroll to top if the hash is just `#` with no value or `#top`\n        // To mirror browsers\n        if (hash === \"\" || hash === \"top\") {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */ async prefetch(url, asPath = url, options = {}) {\n        let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n        let { pathname , query  } = parsed;\n        if (false) {}\n        const pages = await this.pageLoader.getPageList();\n        let resolvedAs = asPath;\n        if (false) {} else {\n            parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n            if (parsed.pathname !== pathname) {\n                pathname = parsed.pathname;\n                parsed.pathname = pathname;\n                url = (0, _formatUrl).formatWithValidation(parsed);\n            }\n        }\n        // Prefetch is not supported in development mode because it would trigger on-demand-entries\n        if (true) {\n            return;\n        }\n        const effects = await this._preflightRequest({\n            as: addBasePath(asPath),\n            cache: true,\n            pages,\n            pathname,\n            query,\n            locale: this.locale,\n            isPreview: this.isPreview\n        });\n        if (effects.type === \"rewrite\") {\n            parsed.pathname = effects.resolvedHref;\n            pathname = effects.resolvedHref;\n            query = {\n                ...query,\n                ...effects.parsedAs.query\n            };\n            resolvedAs = effects.asPath;\n            url = (0, _formatUrl).formatWithValidation(parsed);\n        }\n        const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n        await Promise.all([\n            this.pageLoader._isSsg(route).then((isSsg)=>{\n                return isSsg ? fetchNextData(this.pageLoader.getDataHref({\n                    href: url,\n                    asPath: resolvedAs,\n                    ssg: true,\n                    locale: typeof options.locale !== \"undefined\" ? options.locale : this.locale\n                }), false, false, this.sdc, true) : false;\n            }),\n            this.pageLoader[options.priority ? \"loadPage\" : \"prefetch\"](route), \n        ]);\n    }\n    async fetchComponent(route) {\n        let cancelled = false;\n        const cancel = this.clc = ()=>{\n            cancelled = true;\n        };\n        const handleCancelled = ()=>{\n            if (cancelled) {\n                const error = new Error(`Abort fetching component for route: \"${route}\"`);\n                error.cancelled = true;\n                throw error;\n            }\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n        };\n        try {\n            const componentResult = await this.pageLoader.loadPage(route);\n            handleCancelled();\n            return componentResult;\n        } catch (err) {\n            handleCancelled();\n            throw err;\n        }\n    }\n    _getData(fn) {\n        let cancelled = false;\n        const cancel = ()=>{\n            cancelled = true;\n        };\n        this.clc = cancel;\n        return fn().then((data)=>{\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n            if (cancelled) {\n                const err = new Error(\"Loading initial props cancelled\");\n                err.cancelled = true;\n                throw err;\n            }\n            return data;\n        });\n    }\n    _getFlightData(dataHref) {\n        // Do not cache RSC flight response since it's not a static resource\n        return fetchNextData(dataHref, true, true, this.sdc, false).then((serialized)=>{\n            return {\n                fresh: true,\n                data: serialized\n            };\n        });\n    }\n    async _preflightRequest(options) {\n        const asPathname = pathNoQueryHash(options.as);\n        const cleanedAs = delLocale(hasBasePath(asPathname) ? delBasePath(asPathname) : asPathname, options.locale);\n        const middlewareList = await this.pageLoader.getMiddlewareList();\n        const middleware = middlewareList.map(([page, ssr])=>({\n                page,\n                ssr\n            })\n        );\n        const routingItems = (0, _routingItems).getRoutingItems(options.pages, middleware);\n        let requiresPreflight = false;\n        for (const item of routingItems){\n            if (item.match(cleanedAs)) {\n                if (item.isMiddleware) {\n                    requiresPreflight = true;\n                }\n                break;\n            }\n        }\n        if (!requiresPreflight) {\n            return {\n                type: \"next\"\n            };\n        }\n        let preflight;\n        try {\n            preflight = await this._getPreflightData({\n                preflightHref: options.as,\n                shouldCache: options.cache,\n                isPreview: options.isPreview\n            });\n        } catch (err) {\n            // If preflight request fails, we need to do a hard-navigation.\n            return {\n                type: \"redirect\",\n                destination: options.as\n            };\n        }\n        if (preflight.rewrite) {\n            // for external rewrites we need to do a hard navigation\n            // to the resource\n            if (!preflight.rewrite.startsWith(\"/\")) {\n                return {\n                    type: \"redirect\",\n                    destination: options.as\n                };\n            }\n            const parsed = (0, _parseRelativeUrl).parseRelativeUrl((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.rewrite) ? delBasePath(preflight.rewrite) : preflight.rewrite, this.locales).pathname);\n            const fsPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash(parsed.pathname);\n            let matchedPage;\n            let resolvedHref;\n            if (options.pages.includes(fsPathname)) {\n                matchedPage = true;\n                resolvedHref = fsPathname;\n            } else {\n                resolvedHref = resolveDynamicRoute(fsPathname, options.pages);\n                if (resolvedHref !== parsed.pathname && options.pages.includes(resolvedHref)) {\n                    matchedPage = true;\n                }\n            }\n            return {\n                type: \"rewrite\",\n                asPath: parsed.pathname,\n                parsedAs: parsed,\n                matchedPage,\n                resolvedHref\n            };\n        }\n        if (preflight.redirect) {\n            if (preflight.redirect.startsWith(\"/\")) {\n                const cleanRedirect = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.redirect) ? delBasePath(preflight.redirect) : preflight.redirect, this.locales).pathname);\n                const { url: newUrl , as: newAs  } = prepareUrlAs(this, cleanRedirect, cleanRedirect);\n                return {\n                    type: \"redirect\",\n                    newUrl,\n                    newAs\n                };\n            }\n            return {\n                type: \"redirect\",\n                destination: preflight.redirect\n            };\n        }\n        // For SSR requests, they will be handled like normal pages.\n        if (preflight.refresh && !preflight.ssr) {\n            return {\n                type: \"refresh\"\n            };\n        }\n        return {\n            type: \"next\"\n        };\n    }\n    _getPreflightData(params) {\n        const { preflightHref , shouldCache =false , isPreview  } = params;\n        const { href: cacheKey  } = new URL(preflightHref, window.location.href);\n        if (false) {}\n        return fetch(preflightHref, {\n            method: \"HEAD\",\n            credentials: \"same-origin\",\n            headers: {\n                \"x-middleware-preflight\": \"1\"\n            }\n        }).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to preflight request`);\n            }\n            return {\n                cache: res.headers.get(\"x-middleware-cache\"),\n                redirect: res.headers.get(\"Location\"),\n                refresh: res.headers.has(\"x-middleware-refresh\"),\n                rewrite: res.headers.get(\"x-middleware-rewrite\"),\n                ssr: !!res.headers.get(\"x-middleware-ssr\")\n            };\n        }).then((data)=>{\n            if (shouldCache && data.cache !== \"no-cache\") {\n                this.sde[cacheKey] = data;\n            }\n            return data;\n        }).catch((err)=>{\n            delete this.sde[cacheKey];\n            throw err;\n        });\n    }\n    getInitialProps(Component, ctx) {\n        const { Component: App  } = this.components[\"/_app\"];\n        const AppTree = this._wrapApp(App);\n        ctx.AppTree = AppTree;\n        return (0, _utils).loadGetInitialProps(App, {\n            AppTree,\n            Component,\n            router: this,\n            ctx\n        });\n    }\n    abortComponentLoad(as, routeProps) {\n        if (this.clc) {\n            Router.events.emit(\"routeChangeError\", buildCancellationError(), as, routeProps);\n            this.clc();\n            this.clc = null;\n        }\n    }\n    get route() {\n        return this.state.route;\n    }\n    get pathname() {\n        return this.state.pathname;\n    }\n    get query() {\n        return this.state.query;\n    }\n    get asPath() {\n        return this.state.asPath;\n    }\n    get locale() {\n        return this.state.locale;\n    }\n    get isFallback() {\n        return this.state.isFallback;\n    }\n    get isPreview() {\n        return this.state.isPreview;\n    }\n}\nexports[\"default\"] = Router;\nRouter.events = (0, _mitt).default(); //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/router.js\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui/jsx-dev-runtime */ \"theme-ui/jsx-dev-runtime\");\n/* harmony import */ var theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! theme-ui */ \"theme-ui\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(theme_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_CollectionItem_CollectionItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/CollectionItem/CollectionItem */ \"./components/CollectionItem/CollectionItem.tsx\");\n/* harmony import */ var hooks_useGemFarmStaking__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hooks/useGemFarmStaking */ \"./hooks/useGemFarmStaking.ts\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"@solana/wallet-adapter-react\");\n/* harmony import */ var react_tabs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-tabs */ \"react-tabs\");\n/* harmony import */ var react_tabs__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_tabs__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _components_Header_Header__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/Header/Header */ \"./components/Header/Header.tsx\");\n/* harmony import */ var _components_icons_LoadingIcon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/icons/LoadingIcon */ \"./components/icons/LoadingIcon.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([hooks_useGemFarmStaking__WEBPACK_IMPORTED_MODULE_3__, _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__, _components_Header_Header__WEBPACK_IMPORTED_MODULE_6__]);\n([hooks_useGemFarmStaking__WEBPACK_IMPORTED_MODULE_3__, _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__, _components_Header_Header__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n/** @jsxImportSource theme-ui */ \n\n\n\n// import { LoadingIcon } from \"@/components/icons/LoadingIcon\"\n\n\n\n\nconst StakePage = ()=>{\n    const { 0: farmId , 1: setFarmId  } = (0,react__WEBPACK_IMPORTED_MODULE_8__.useState)(\"B2Aa62gYYYBn1MXpQKL5zTdYXE3AytKzTPfjvFJFSMnk\" || 0);\n    const { walletNFTs , farmerAccount , farmerVaultAccount , farmerStatus , selectedWalletItems , isLocked , availableA , feedbackStatus , handleStakeButtonClick , handleUnstakeButtonClick , handleClaimButtonClick , handleWalletItemClick , handleMoveToVaultButtonClick , farmerVaultNFTs , selectedVaultItems , handleMoveToWalletButtonClick , handleVaultItemClick , handleInitStakingButtonClick , handleRefreshRewardsButtonClick ,  } = (0,hooks_useGemFarmStaking__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(farmId);\n    const { publicKey  } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__.useWallet)();\n    return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n        children: [\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Header_Header__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                farmId: farmId,\n                setFarmId: setFarmId\n            }, void 0, false, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                lineNumber: 43,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                sx: {\n                    flexDirection: \"column\",\n                    marginTop: \"3.2rem\",\n                    alignItems: \"center\",\n                    padding: \"0 1.6rem\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Heading, {\n                        children: \"Your staking account\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                        lineNumber: 53,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                        children: \"Below you can stake, unstake and collect rewards.\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                        lineNumber: 54,\n                        columnNumber: 9\n                    }, undefined),\n                    !publicKey ? /** Render nothing if there is no wallet connected. */ /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                        sx: {\n                            textAlign: \"center\",\n                            margin: \"3.2rem 0\"\n                        },\n                        children: \"Connect your wallet first.\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                        lineNumber: 58,\n                        columnNumber: 11\n                    }, undefined) : !farmerAccount ? // <LoadingIcon\n                    //   size={\"3.2rem\"}\n                    //   sx={{\n                    //     margin: \"3.2rem 0\"\n                    //   }}\n                    // />\n                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                        mt: \"1.6rem\",\n                        children: \"Farm ID is not configured.\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                        lineNumber: 73,\n                        columnNumber: 11\n                    }, undefined) : /** If there is farmerAccount variable, but no address, it means account isn't initialized */ farmerAccount && !(farmerAccount === null || farmerAccount === void 0 ? void 0 : farmerAccount.identity) ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n                        sx: {\n                            margin: \"3.2rem 0\"\n                        },\n                        onClick: handleInitStakingButtonClick,\n                        children: \"Init staking account\"\n                    }, void 0, false, {\n                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                        lineNumber: 76,\n                        columnNumber: 11\n                    }, undefined) : /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                        children: [\n                            (farmerAccount === null || farmerAccount === void 0 ? void 0 : farmerAccount.identity) ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                                        sx: {\n                                            flexDirection: \"column\",\n                                            margin: \"1.6rem 0\"\n                                        },\n                                        children: [\n                                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                                                sx: {\n                                                    gap: \".4rem\",\n                                                    alignItems: \"center\",\n                                                    justifyContent: \"center\"\n                                                },\n                                                children: [\n                                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                        sx: {\n                                                            maxHeight: \"2.4rem\"\n                                                        },\n                                                        src: \"images/gemtransparent.gif\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 103,\n                                                        columnNumber: 21\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                                        children: [\n                                                            \"NFTs staked:\\xa0\",\n                                                            farmerAccount === null || farmerAccount === void 0 ? void 0 : farmerAccount.gemsStaked.toNumber()\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 109,\n                                                        columnNumber: 21\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 96,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                                sx: {\n                                                    textAlign: \"center\"\n                                                },\n                                                children: [\n                                                    \"Vault state: \",\n                                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                                        children: isLocked ? \"locked\" : \"unlocked\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 119,\n                                                        columnNumber: 34\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 120,\n                                                        columnNumber: 21\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 114,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                                sx: {\n                                                    textAlign: \"center\"\n                                                },\n                                                children: [\n                                                    \"Account status: \",\n                                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                                        children: farmerStatus\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 127,\n                                                        columnNumber: 37\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 128,\n                                                        columnNumber: 21\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 122,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                        lineNumber: 90,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                                        sx: {\n                                            gap: \"1.6rem\",\n                                            margin: \"1.6rem 0\",\n                                            flexWrap: \"wrap\",\n                                            alignItems: \"center\",\n                                            alignSelf: \"stretch\",\n                                            justifyContent: \"center\",\n                                            \"@media (min-width: 768px\": {\n                                                flexDirection: \"row\"\n                                            }\n                                        },\n                                        children: [\n                                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n                                                onClick: handleStakeButtonClick,\n                                                disabled: !(farmerStatus === \"unstaked\" && (farmerVaultNFTs === null || farmerVaultNFTs === void 0 ? void 0 : farmerVaultNFTs.length)),\n                                                children: \"Stake\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 146,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n                                                onClick: handleUnstakeButtonClick,\n                                                disabled: !(farmerStatus === \"staked\" || farmerStatus === \"pendingCooldown\"),\n                                                children: farmerStatus === \"pendingCooldown\" ? \"End cooldown\" : \"Unstake\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 154,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n                                                onClick: handleClaimButtonClick,\n                                                disabled: !Number(availableA),\n                                                children: [\n                                                    \"Claim\",\n                                                    \" \",\n                                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                        sx: {\n                                                            margin: \"0 .4rem 0 .8rem\",\n                                                            maxHeight: \"2.4rem\"\n                                                        },\n                                                        src: \"images/icon-list-item.png\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 172,\n                                                        columnNumber: 21\n                                                    }, undefined),\n                                                    availableA ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                                                        children: (availableA / 1000000000).toFixed(2)\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 180,\n                                                        columnNumber: 23\n                                                    }, undefined) : 0\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 167,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n                                                onClick: handleRefreshRewardsButtonClick,\n                                                children: \"Refresh\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 185,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                        lineNumber: 132,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                                        sx: {\n                                            alignItems: \"center\",\n                                            gap: \".8rem\",\n                                            margin: \".8rem 0\"\n                                        },\n                                        children: [\n                                            feedbackStatus ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_icons_LoadingIcon__WEBPACK_IMPORTED_MODULE_7__.LoadingIcon, {\n                                                        size: \"1.6rem\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 198,\n                                                        columnNumber: 23\n                                                    }, undefined),\n                                                    \"  \",\n                                                    \" \",\n                                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                                        variant: \"small\",\n                                                        children: feedbackStatus\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 199,\n                                                        columnNumber: 30\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true) : \"\",\n                                            \"\\xa0\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                        lineNumber: 189,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true) : null,\n                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_tabs__WEBPACK_IMPORTED_MODULE_5__.Tabs, {\n                                sx: {\n                                    margin: \"3.2rem 0\",\n                                    alignSelf: \"stretch\",\n                                    minHeight: \"48rem\"\n                                },\n                                children: [\n                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_tabs__WEBPACK_IMPORTED_MODULE_5__.TabList, {\n                                        children: [\n                                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_tabs__WEBPACK_IMPORTED_MODULE_5__.Tab, {\n                                                children: \"Your wallet\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 217,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_tabs__WEBPACK_IMPORTED_MODULE_5__.Tab, {\n                                                children: \"Your vault\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 218,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                        lineNumber: 216,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_tabs__WEBPACK_IMPORTED_MODULE_5__.TabPanel, {\n                                        children: walletNFTs ? walletNFTs.length ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                                            sx: {\n                                                flexDirection: \"column\",\n                                                alignItems: \"center\"\n                                            },\n                                            children: [\n                                                /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    sx: {\n                                                        display: \"grid\",\n                                                        gridTemplateColumns: walletNFTs.length > 1 ? \"1fr 1fr\" : \"1fr\",\n                                                        gap: \"1.6rem\",\n                                                        alignItems: \"center\",\n                                                        \"@media (min-width: 768px)\": {\n                                                            gridTemplateColumns: walletNFTs.length > 9 ? \"1fr 1fr 1fr 1fr 1fr 1fr 1fr\" : walletNFTs.length > 4 ? \"1fr 1fr 1fr 1fr 1fr\" : walletNFTs.map(()=>\"1fr\"\n                                                            ).join(\" \")\n                                                        }\n                                                    },\n                                                    children: walletNFTs.map((item)=>{\n                                                        const isSelected = selectedWalletItems.find((NFT)=>NFT.onchainMetadata.mint === item.onchainMetadata.mint\n                                                        );\n                                                        return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CollectionItem_CollectionItem__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                                            item: item,\n                                                            onClick: !isLocked ? handleWalletItemClick : ()=>true\n                                                            ,\n                                                            sx: {\n                                                                maxWidth: \"16rem\",\n                                                                \"> img\": {\n                                                                    border: \"3px solid transparent\",\n                                                                    borderColor: isSelected ? \"primary\" : \"transparent\"\n                                                                }\n                                                            }\n                                                        }, item.onchainMetadata.mint, false, {\n                                                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                            lineNumber: 256,\n                                                            columnNumber: 29\n                                                        }, undefined);\n                                                    })\n                                                }, void 0, false, {\n                                                    fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                    lineNumber: 230,\n                                                    columnNumber: 23\n                                                }, undefined),\n                                                walletNFTs.length && !isLocked ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                                    sx: {\n                                                        margin: \"3.2rem 0 .8rem 0\"\n                                                    },\n                                                    variant: \"small\",\n                                                    children: \"Select NFTs to move them to your Vault.\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                    lineNumber: 276,\n                                                    columnNumber: 25\n                                                }, undefined) : null,\n                                                /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                                    children: (selectedWalletItems === null || selectedWalletItems === void 0 ? void 0 : selectedWalletItems.length) && !isLocked ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n                                                        onClick: handleMoveToVaultButtonClick,\n                                                        children: \"Deposit selected\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 293,\n                                                        columnNumber: 27\n                                                    }, undefined) : null\n                                                }, void 0, false, {\n                                                    fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                    lineNumber: 285,\n                                                    columnNumber: 23\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                            lineNumber: 224,\n                                            columnNumber: 21\n                                        }, undefined) : /** walletNFTs fetched but array is empty, means current wallet has no NFT. */ /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                                            sx: {\n                                                justifyContent: \"center\",\n                                                alignSelf: \"stretch\"\n                                            },\n                                            children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                                children: \"There are no NFTs on your wallet.\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 307,\n                                                columnNumber: 23\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                            lineNumber: 301,\n                                            columnNumber: 21\n                                        }, undefined) : /** No walletNFTs and public key, means it is loading */ publicKey ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                                            sx: {\n                                                justifyContent: \"center\",\n                                                alignSelf: \"stretch\"\n                                            },\n                                            children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Spinner, {\n                                                variant: \"styles.spinnerLarge\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 318,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                            lineNumber: 312,\n                                            columnNumber: 19\n                                        }, undefined) : null\n                                    }, void 0, false, {\n                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                        lineNumber: 221,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_tabs__WEBPACK_IMPORTED_MODULE_5__.TabPanel, {\n                                        children: farmerVaultAccount ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: farmerVaultNFTs ? farmerVaultNFTs.length ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                                                sx: {\n                                                    flexDirection: \"column\",\n                                                    justifyContent: \"center\",\n                                                    alignSelf: \"stretch\",\n                                                    alignItems: \"center\"\n                                                },\n                                                children: [\n                                                    /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        sx: {\n                                                            display: \"grid\",\n                                                            gridTemplateColumns: farmerVaultNFTs.length > 1 ? \"1fr 1fr\" : \"1fr\",\n                                                            gap: \"1.6rem\",\n                                                            \"@media (min-width: 768px)\": {\n                                                                gridTemplateColumns: farmerVaultNFTs.length > 9 ? \"1fr 1fr 1fr 1fr 1fr 1fr 1fr\" : farmerVaultNFTs.length > 4 ? \"1fr 1fr 1fr 1fr 1fr\" : farmerVaultNFTs.map(()=>\"1fr\"\n                                                                ).join(\" \")\n                                                            }\n                                                        },\n                                                        children: farmerVaultNFTs.map((item)=>{\n                                                            const isSelected = selectedVaultItems.find((NFT)=>NFT.onchainMetadata.mint === item.onchainMetadata.mint\n                                                            );\n                                                            return /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CollectionItem_CollectionItem__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                                                item: item,\n                                                                onClick: !isLocked ? handleVaultItemClick : ()=>true\n                                                                ,\n                                                                sx: {\n                                                                    maxWidth: \"16rem\",\n                                                                    \"> img\": {\n                                                                        border: \"3px solid transparent\",\n                                                                        borderColor: isSelected ? \"primary\" : \"transparent\"\n                                                                    }\n                                                                }\n                                                            }, item.onchainMetadata.mint, false, {\n                                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                                lineNumber: 373,\n                                                                columnNumber: 33\n                                                            }, undefined);\n                                                        })\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 346,\n                                                        columnNumber: 27\n                                                    }, undefined),\n                                                    farmerVaultNFTs.length && !isLocked ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                                        sx: {\n                                                            margin: \"3.2rem 0 .8rem 0\"\n                                                        },\n                                                        variant: \"small\",\n                                                        children: \"Select NFTs to withdraw them to your wallet.\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                        lineNumber: 395,\n                                                        columnNumber: 29\n                                                    }, undefined) : null,\n                                                    selectedVaultItems && selectedVaultItems.length ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                        children: !isLocked ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n                                                            onClick: handleMoveToWalletButtonClick,\n                                                            children: \"Withdraw selected\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                            lineNumber: 412,\n                                                            columnNumber: 33\n                                                        }, undefined) : null\n                                                    }, void 0, false) : null\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 338,\n                                                columnNumber: 25\n                                            }, undefined) : /** vaultNFTs fetched but array is empty, means current wallet has no NFT. */ /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                                                sx: {\n                                                    justifyContent: \"center\",\n                                                    alignSelf: \"stretch\"\n                                                },\n                                                children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Text, {\n                                                    children: \"There are no NFTs on your vault.\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                    lineNumber: 427,\n                                                    columnNumber: 27\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 421,\n                                                columnNumber: 25\n                                            }, undefined) : /** No vaultNFTs and public key, means it is loading */ publicKey ? /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Flex, {\n                                                sx: {\n                                                    justifyContent: \"center\",\n                                                    alignSelf: \"stretch\"\n                                                },\n                                                children: /*#__PURE__*/ (0,theme_ui_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Spinner, {\n                                                    variant: \"styles.spinnerLarge\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                    lineNumber: 438,\n                                                    columnNumber: 25\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                                lineNumber: 432,\n                                                columnNumber: 23\n                                            }, undefined) : null\n                                        }, void 0, false) : null\n                                    }, void 0, false, {\n                                        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                        lineNumber: 322,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                                lineNumber: 209,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n                lineNumber: 45,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nika110/Desktop/ducksvegas/nftstakecontract/gem-farm-ui/pages/index.tsx\",\n        lineNumber: 42,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StakePage);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "./utils/nfts.ts":
/*!***********************!*\
  !*** ./utils/nfts.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNFTMetadataForMany\": () => (/* binding */ getNFTMetadataForMany),\n/* harmony export */   \"getNFTsByOwner\": () => (/* binding */ getNFTsByOwner)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"@solana/web3.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/spl-token */ \"@solana/spl-token\");\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_solana_spl_token__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _metaplex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @metaplex/js */ \"@metaplex/js\");\n/* harmony import */ var _metaplex_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_metaplex_js__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst { metadata: { Metadata  } ,  } = _metaplex_js__WEBPACK_IMPORTED_MODULE_3__.programs;\nasync function getNFTMetadata(mint, conn, pubkey) {\n    try {\n        const metadataPDA = await Metadata.getPDA(mint);\n        const onchainMetadata = (await Metadata.load(conn, metadataPDA)).data;\n        const externalMetadata = (await axios__WEBPACK_IMPORTED_MODULE_2___default().get(onchainMetadata.data.uri)).data;\n        return {\n            pubkey: pubkey ? new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(pubkey) : undefined,\n            mint: new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(mint),\n            onchainMetadata,\n            externalMetadata\n        };\n    } catch (e) {\n        console.log(`failed to pull metadata for token ${mint}`);\n    }\n}\nasync function getNFTMetadataForMany(tokens, conn) {\n    const promises = [];\n    tokens.forEach((token)=>promises.push(getNFTMetadata(token.mint, conn, token.pubkey))\n    );\n    const nfts = (await Promise.all(promises)).filter((n)=>!!n\n    );\n    return nfts;\n}\n/**\n *\n * @author https://github.com/gemworks/gem-farm/tree/main/app/gem-farm\n */ async function getNFTsByOwner(owner, conn) {\n    const tokenAccounts = await conn.getParsedTokenAccountsByOwner(owner, {\n        programId: _solana_spl_token__WEBPACK_IMPORTED_MODULE_1__.TOKEN_PROGRAM_ID\n    });\n    const tokens = tokenAccounts.value.filter((tokenAccount)=>{\n        const amount = tokenAccount.account.data.parsed.info.tokenAmount;\n        return amount.decimals === 0 && amount.uiAmount === 1;\n    }).map((tokenAccount)=>{\n        return {\n            pubkey: tokenAccount.pubkey,\n            mint: tokenAccount.account.data.parsed.info.mint\n        };\n    });\n    return await getNFTMetadataForMany(tokens, conn);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9uZnRzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBdUQ7QUFDSDtBQUMzQjtBQUNjO0FBSXZDLE1BQU0sRUFDSkksUUFBUSxFQUFFLEVBQUVDLFFBQVEsR0FBRSxLQUN2QixHQUFHRixrREFBUTtBQUVaLGVBQWVHLGNBQWMsQ0FDM0JDLElBQVksRUFDWkMsSUFBZ0IsRUFDaEJDLE1BQWUsRUFDVztJQUMxQixJQUFJO1FBQ0YsTUFBTUMsV0FBVyxHQUFHLE1BQU1MLFFBQVEsQ0FBQ00sTUFBTSxDQUFDSixJQUFJLENBQUM7UUFDL0MsTUFBTUssZUFBZSxHQUFHLENBQUMsTUFBTVAsUUFBUSxDQUFDUSxJQUFJLENBQUNMLElBQUksRUFBRUUsV0FBVyxDQUFDLENBQUMsQ0FBQ0ksSUFBSTtRQUNyRSxNQUFNQyxnQkFBZ0IsR0FBRyxDQUFDLE1BQU1iLGdEQUFTLENBQUNVLGVBQWUsQ0FBQ0UsSUFBSSxDQUFDRyxHQUFHLENBQUMsQ0FBQyxDQUFDSCxJQUFJO1FBRXpFLE9BQU87WUFDTEwsTUFBTSxFQUFFQSxNQUFNLEdBQUcsSUFBSVQsc0RBQVMsQ0FBQ1MsTUFBTSxDQUFDLEdBQUdTLFNBQVM7WUFDbERYLElBQUksRUFBRSxJQUFJUCxzREFBUyxDQUFDTyxJQUFJLENBQUM7WUFDekJLLGVBQWU7WUFDZkcsZ0JBQWdCO1NBQ2pCO0tBQ0YsQ0FBQyxPQUFPSSxDQUFDLEVBQUU7UUFDVkMsT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBQyxrQ0FBa0MsRUFBRWQsSUFBSSxDQUFDLENBQUMsQ0FBQztLQUN6RDtDQUNGO0FBRU0sZUFBZWUscUJBQXFCLENBQ3pDQyxNQUFhLEVBQ2JmLElBQWdCLEVBQ0E7SUFDaEIsTUFBTWdCLFFBQVEsR0FBK0IsRUFBRTtJQUMvQ0QsTUFBTSxDQUFDRSxPQUFPLENBQUMsQ0FBQ0MsS0FBSyxHQUNuQkYsUUFBUSxDQUFDRyxJQUFJLENBQUNyQixjQUFjLENBQUNvQixLQUFLLENBQUNuQixJQUFJLEVBQUVDLElBQUksRUFBRWtCLEtBQUssQ0FBQ2pCLE1BQU0sQ0FBQyxDQUFDO0lBQUEsQ0FDOUQ7SUFDRCxNQUFNbUIsSUFBSSxHQUFHLENBQUMsTUFBTUMsT0FBTyxDQUFDQyxHQUFHLENBQUNOLFFBQVEsQ0FBQyxDQUFDLENBQUNPLE1BQU0sQ0FBQyxDQUFDQyxDQUFDLEdBQUssQ0FBQyxDQUFDQSxDQUFDO0lBQUEsQ0FBQztJQUU3RCxPQUFPSixJQUFJO0NBQ1o7QUFFRDs7O0dBR0csQ0FDSSxlQUFlSyxjQUFjLENBQ2xDQyxLQUFnQixFQUNoQjFCLElBQWdCLEVBQ0E7SUFDaEIsTUFBTTJCLGFBQWEsR0FBRyxNQUFNM0IsSUFBSSxDQUFDNEIsNkJBQTZCLENBQUNGLEtBQUssRUFBRTtRQUNwRUcsU0FBUyxFQUFFcEMsK0RBQWdCO0tBQzVCLENBQUM7SUFFRixNQUFNc0IsTUFBTSxHQUFHWSxhQUFhLENBQUNHLEtBQUssQ0FDL0JQLE1BQU0sQ0FBQyxDQUFDUSxZQUFZLEdBQUs7UUFDeEIsTUFBTUMsTUFBTSxHQUFHRCxZQUFZLENBQUNFLE9BQU8sQ0FBQzNCLElBQUksQ0FBQzRCLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDQyxXQUFXO1FBRWhFLE9BQU9KLE1BQU0sQ0FBQ0ssUUFBUSxLQUFLLENBQUMsSUFBSUwsTUFBTSxDQUFDTSxRQUFRLEtBQUssQ0FBQztLQUN0RCxDQUFDLENBQ0RDLEdBQUcsQ0FBQyxDQUFDUixZQUFZLEdBQUs7UUFDckIsT0FBTztZQUNMOUIsTUFBTSxFQUFFOEIsWUFBWSxDQUFDOUIsTUFBTTtZQUMzQkYsSUFBSSxFQUFFZ0MsWUFBWSxDQUFDRSxPQUFPLENBQUMzQixJQUFJLENBQUM0QixNQUFNLENBQUNDLElBQUksQ0FBQ3BDLElBQUk7U0FDakQ7S0FDRixDQUFDO0lBRUosT0FBTyxNQUFNZSxxQkFBcUIsQ0FBQ0MsTUFBTSxFQUFFZixJQUFJLENBQUM7Q0FDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZW0tZmFybS11aS8uL3V0aWxzL25mdHMudHM/OGE0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25uZWN0aW9uLCBQdWJsaWNLZXkgfSBmcm9tIFwiQHNvbGFuYS93ZWIzLmpzXCJcbmltcG9ydCB7IFRPS0VOX1BST0dSQU1fSUQgfSBmcm9tIFwiQHNvbGFuYS9zcGwtdG9rZW5cIlxuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiXG5pbXBvcnQgeyBwcm9ncmFtcyB9IGZyb20gXCJAbWV0YXBsZXgvanNcIlxuXG5pbXBvcnQgeyBORlQgfSBmcm9tIFwiQC9ob29rcy91c2VXYWxsZXRORlRzXCJcblxuY29uc3Qge1xuICBtZXRhZGF0YTogeyBNZXRhZGF0YSB9LFxufSA9IHByb2dyYW1zXG5cbmFzeW5jIGZ1bmN0aW9uIGdldE5GVE1ldGFkYXRhKFxuICBtaW50OiBzdHJpbmcsXG4gIGNvbm46IENvbm5lY3Rpb24sXG4gIHB1YmtleT86IHN0cmluZ1xuKTogUHJvbWlzZTxORlQgfCB1bmRlZmluZWQ+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBtZXRhZGF0YVBEQSA9IGF3YWl0IE1ldGFkYXRhLmdldFBEQShtaW50KVxuICAgIGNvbnN0IG9uY2hhaW5NZXRhZGF0YSA9IChhd2FpdCBNZXRhZGF0YS5sb2FkKGNvbm4sIG1ldGFkYXRhUERBKSkuZGF0YVxuICAgIGNvbnN0IGV4dGVybmFsTWV0YWRhdGEgPSAoYXdhaXQgYXhpb3MuZ2V0KG9uY2hhaW5NZXRhZGF0YS5kYXRhLnVyaSkpLmRhdGFcblxuICAgIHJldHVybiB7XG4gICAgICBwdWJrZXk6IHB1YmtleSA/IG5ldyBQdWJsaWNLZXkocHVia2V5KSA6IHVuZGVmaW5lZCxcbiAgICAgIG1pbnQ6IG5ldyBQdWJsaWNLZXkobWludCksXG4gICAgICBvbmNoYWluTWV0YWRhdGEsXG4gICAgICBleHRlcm5hbE1ldGFkYXRhLFxuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUubG9nKGBmYWlsZWQgdG8gcHVsbCBtZXRhZGF0YSBmb3IgdG9rZW4gJHttaW50fWApXG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE5GVE1ldGFkYXRhRm9yTWFueShcbiAgdG9rZW5zOiBhbnlbXSxcbiAgY29ubjogQ29ubmVjdGlvblxuKTogUHJvbWlzZTxORlRbXT4ge1xuICBjb25zdCBwcm9taXNlczogUHJvbWlzZTxORlQgfCB1bmRlZmluZWQ+W10gPSBbXVxuICB0b2tlbnMuZm9yRWFjaCgodG9rZW4pID0+XG4gICAgcHJvbWlzZXMucHVzaChnZXRORlRNZXRhZGF0YSh0b2tlbi5taW50LCBjb25uLCB0b2tlbi5wdWJrZXkpKVxuICApXG4gIGNvbnN0IG5mdHMgPSAoYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZXMpKS5maWx0ZXIoKG4pID0+ICEhbilcblxuICByZXR1cm4gbmZ0c1xufVxuXG4vKipcbiAqXG4gKiBAYXV0aG9yIGh0dHBzOi8vZ2l0aHViLmNvbS9nZW13b3Jrcy9nZW0tZmFybS90cmVlL21haW4vYXBwL2dlbS1mYXJtXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRORlRzQnlPd25lcihcbiAgb3duZXI6IFB1YmxpY0tleSxcbiAgY29ubjogQ29ubmVjdGlvblxuKTogUHJvbWlzZTxORlRbXT4ge1xuICBjb25zdCB0b2tlbkFjY291bnRzID0gYXdhaXQgY29ubi5nZXRQYXJzZWRUb2tlbkFjY291bnRzQnlPd25lcihvd25lciwge1xuICAgIHByb2dyYW1JZDogVE9LRU5fUFJPR1JBTV9JRCxcbiAgfSlcblxuICBjb25zdCB0b2tlbnMgPSB0b2tlbkFjY291bnRzLnZhbHVlXG4gICAgLmZpbHRlcigodG9rZW5BY2NvdW50KSA9PiB7XG4gICAgICBjb25zdCBhbW91bnQgPSB0b2tlbkFjY291bnQuYWNjb3VudC5kYXRhLnBhcnNlZC5pbmZvLnRva2VuQW1vdW50XG5cbiAgICAgIHJldHVybiBhbW91bnQuZGVjaW1hbHMgPT09IDAgJiYgYW1vdW50LnVpQW1vdW50ID09PSAxXG4gICAgfSlcbiAgICAubWFwKCh0b2tlbkFjY291bnQpID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHB1YmtleTogdG9rZW5BY2NvdW50LnB1YmtleSxcbiAgICAgICAgbWludDogdG9rZW5BY2NvdW50LmFjY291bnQuZGF0YS5wYXJzZWQuaW5mby5taW50LFxuICAgICAgfVxuICAgIH0pXG5cbiAgcmV0dXJuIGF3YWl0IGdldE5GVE1ldGFkYXRhRm9yTWFueSh0b2tlbnMsIGNvbm4pXG59XG4iXSwibmFtZXMiOlsiUHVibGljS2V5IiwiVE9LRU5fUFJPR1JBTV9JRCIsImF4aW9zIiwicHJvZ3JhbXMiLCJtZXRhZGF0YSIsIk1ldGFkYXRhIiwiZ2V0TkZUTWV0YWRhdGEiLCJtaW50IiwiY29ubiIsInB1YmtleSIsIm1ldGFkYXRhUERBIiwiZ2V0UERBIiwib25jaGFpbk1ldGFkYXRhIiwibG9hZCIsImRhdGEiLCJleHRlcm5hbE1ldGFkYXRhIiwiZ2V0IiwidXJpIiwidW5kZWZpbmVkIiwiZSIsImNvbnNvbGUiLCJsb2ciLCJnZXRORlRNZXRhZGF0YUZvck1hbnkiLCJ0b2tlbnMiLCJwcm9taXNlcyIsImZvckVhY2giLCJ0b2tlbiIsInB1c2giLCJuZnRzIiwiUHJvbWlzZSIsImFsbCIsImZpbHRlciIsIm4iLCJnZXRORlRzQnlPd25lciIsIm93bmVyIiwidG9rZW5BY2NvdW50cyIsImdldFBhcnNlZFRva2VuQWNjb3VudHNCeU93bmVyIiwicHJvZ3JhbUlkIiwidmFsdWUiLCJ0b2tlbkFjY291bnQiLCJhbW91bnQiLCJhY2NvdW50IiwicGFyc2VkIiwiaW5mbyIsInRva2VuQW1vdW50IiwiZGVjaW1hbHMiLCJ1aUFtb3VudCIsIm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/nfts.ts\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/is-error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/lib/is-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = isError;\nexports.getProperError = getProperError;\nvar _isPlainObject = __webpack_require__(/*! ../shared/lib/is-plain-object */ \"../shared/lib/is-plain-object\");\nfunction isError(err) {\n    return typeof err === 'object' && err !== null && 'name' in err && 'message' in err;\n}\nfunction getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (true) {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === 'undefined') {\n            return new Error('An undefined error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined');\n        }\n        if (err === null) {\n            return new Error('A null error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined');\n        }\n    }\n    return new Error((0, _isPlainObject).isPlainObject(err) ? JSON.stringify(err) : err + '');\n}\n\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Ysc0JBQXNCO0FBQ3RCLHFCQUFxQixtQkFBTyxDQUFDLG9FQUErQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsSUFBc0M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2dlbS1mYXJtLXVpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvaXMtZXJyb3IuanM/MTc4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGlzRXJyb3I7XG5leHBvcnRzLmdldFByb3BlckVycm9yID0gZ2V0UHJvcGVyRXJyb3I7XG52YXIgX2lzUGxhaW5PYmplY3QgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9pcy1wbGFpbi1vYmplY3RcIik7XG5mdW5jdGlvbiBpc0Vycm9yKGVycikge1xuICAgIHJldHVybiB0eXBlb2YgZXJyID09PSAnb2JqZWN0JyAmJiBlcnIgIT09IG51bGwgJiYgJ25hbWUnIGluIGVyciAmJiAnbWVzc2FnZScgaW4gZXJyO1xufVxuZnVuY3Rpb24gZ2V0UHJvcGVyRXJyb3IoZXJyKSB7XG4gICAgaWYgKGlzRXJyb3IoZXJyKSkge1xuICAgICAgICByZXR1cm4gZXJyO1xuICAgIH1cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgLy8gcHJvdmlkZSBiZXR0ZXIgZXJyb3IgZm9yIGNhc2Ugd2hlcmUgYHRocm93IHVuZGVmaW5lZGBcbiAgICAgICAgLy8gaXMgY2FsbGVkIGluIGRldmVsb3BtZW50XG4gICAgICAgIGlmICh0eXBlb2YgZXJyID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcignQW4gdW5kZWZpbmVkIGVycm9yIHdhcyB0aHJvd24sICcgKyAnc2VlIGhlcmUgZm9yIG1vcmUgaW5mbzogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvdGhyZXctdW5kZWZpbmVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVyciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcignQSBudWxsIGVycm9yIHdhcyB0aHJvd24sICcgKyAnc2VlIGhlcmUgZm9yIG1vcmUgaW5mbzogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvdGhyZXctdW5kZWZpbmVkJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBFcnJvcigoMCwgX2lzUGxhaW5PYmplY3QpLmlzUGxhaW5PYmplY3QoZXJyKSA/IEpTT04uc3RyaW5naWZ5KGVycikgOiBlcnIgKyAnJyk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2dlbS1mYXJtLXVpLy4vbm9kZV9tb2R1bGVzL25leHQvbGluay5qcz83NWIzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9saW5rJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n");

/***/ }),

/***/ "@emotion/react":
/*!*********************************!*\
  !*** external "@emotion/react" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@emotion/react");

/***/ }),

/***/ "@gemworks/gem-farm-ts":
/*!****************************************!*\
  !*** external "@gemworks/gem-farm-ts" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@gemworks/gem-farm-ts");

/***/ }),

/***/ "@gemworks/gem-farm-ts/dist/types/gem_bank":
/*!************************************************************!*\
  !*** external "@gemworks/gem-farm-ts/dist/types/gem_bank" ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@gemworks/gem-farm-ts/dist/types/gem_bank");

/***/ }),

/***/ "@gemworks/gem-farm-ts/dist/types/gem_farm":
/*!************************************************************!*\
  !*** external "@gemworks/gem-farm-ts/dist/types/gem_farm" ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@gemworks/gem-farm-ts/dist/types/gem_farm");

/***/ }),

/***/ "@metaplex/js":
/*!*******************************!*\
  !*** external "@metaplex/js" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("@metaplex/js");

/***/ }),

/***/ "@project-serum/anchor":
/*!****************************************!*\
  !*** external "@project-serum/anchor" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@project-serum/anchor");

/***/ }),

/***/ "@solana/spl-token":
/*!************************************!*\
  !*** external "@solana/spl-token" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@solana/spl-token");

/***/ }),

/***/ "@solana/web3.js":
/*!**********************************!*\
  !*** external "@solana/web3.js" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@solana/web3.js");

/***/ }),

/***/ "@theme-ui/components":
/*!***************************************!*\
  !*** external "@theme-ui/components" ***!
  \***************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@theme-ui/components");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("axios");

/***/ }),

/***/ "next/dist/compiled/react-is":
/*!**********************************************!*\
  !*** external "next/dist/compiled/react-is" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/react-is");

/***/ }),

/***/ "../../../server/denormalize-page-path":
/*!************************************************************!*\
  !*** external "next/dist/server/denormalize-page-path.js" ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/denormalize-page-path.js");

/***/ }),

/***/ "../i18n/normalize-locale-path":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/i18n/normalize-locale-path.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ "../shared/lib/is-plain-object":
/*!**********************************************************!*\
  !*** external "next/dist/shared/lib/is-plain-object.js" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/is-plain-object.js");

/***/ }),

/***/ "../mitt":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/mitt.js" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ "../shared/lib/router-context":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/router-context.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ "./utils/format-url":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-url.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-url.js");

/***/ }),

/***/ "../shared/lib/router/utils/get-asset-path-from-route":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-asset-path-from-route.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ "./utils/is-dynamic":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-dynamic.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ "./utils/parse-relative-url":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-relative-url.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ "./utils/querystring":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/querystring.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ "./utils/resolve-rewrites":
/*!************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/resolve-rewrites.js" ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ "./utils/route-matcher":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-matcher.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ "./utils/route-regex":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-regex.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ "./utils/routing-items":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/routing-items.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/routing-items.js");

/***/ }),

/***/ "../utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-tabs":
/*!*****************************!*\
  !*** external "react-tabs" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-tabs");

/***/ }),

/***/ "theme-ui":
/*!***************************!*\
  !*** external "theme-ui" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("theme-ui");

/***/ }),

/***/ "theme-ui/jsx-dev-runtime":
/*!*******************************************!*\
  !*** external "theme-ui/jsx-dev-runtime" ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
module.exports = require("theme-ui/jsx-dev-runtime");

/***/ }),

/***/ "@solana/wallet-adapter-react":
/*!***********************************************!*\
  !*** external "@solana/wallet-adapter-react" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@solana/wallet-adapter-react");;

/***/ }),

/***/ "@solana/wallet-adapter-react-ui":
/*!**************************************************!*\
  !*** external "@solana/wallet-adapter-react-ui" ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@solana/wallet-adapter-react-ui");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.tsx"));
module.exports = __webpack_exports__;

})();